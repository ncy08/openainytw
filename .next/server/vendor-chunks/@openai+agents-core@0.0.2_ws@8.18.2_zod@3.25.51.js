"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51";
exports.ids = ["vendor-chunks/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/agent.mjs":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/agent.mjs ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* binding */ Agent)\n/* harmony export */ });\n/* harmony import */ var _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lifecycle.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/lifecycle.mjs\");\n/* harmony import */ var _mcp_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mcp.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/mcp.mjs\");\n/* harmony import */ var _tool_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tool.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tool.mjs\");\n/* harmony import */ var _run_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./run.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/run.mjs\");\n/* harmony import */ var _utils_tools_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/tools.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/tools.mjs\");\n/* harmony import */ var _utils_messages_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/messages.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/messages.mjs\");\n/* harmony import */ var _utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/typeGuards.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n\n\n\n\n\n\n\n\n\n\n/**\n * The class representing an AI agent configured with instructions, tools, guardrails, handoffs and more.\n *\n * We strongly recommend passing `instructions`, which is the \"system prompt\" for the agent. In\n * addition, you can pass `handoffDescription`, which is a human-readable description of the\n * agent, used when the agent is used inside tools/handoffs.\n *\n * Agents are generic on the context type. The context is a (mutable) object you create. It is\n * passed to tool functions, handoffs, guardrails, etc.\n */\nclass Agent extends _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_0__.AgentHooks {\n    /**\n     * Create an Agent with handoffs and automatically infer the union type for TOutput from the handoff agents' output types.\n     */\n    static create(config) {\n        return new Agent({\n            ...config,\n            handoffs: config.handoffs,\n            outputType: config.outputType,\n            handoffOutputTypeWarningEnabled: false,\n        });\n    }\n    name;\n    instructions;\n    handoffDescription;\n    handoffs;\n    model;\n    modelSettings;\n    tools;\n    mcpServers;\n    inputGuardrails;\n    outputGuardrails;\n    outputType = 'text';\n    toolUseBehavior;\n    resetToolChoice;\n    constructor(config) {\n        super();\n        if (typeof config.name !== 'string' || config.name.trim() === '') {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_7__.UserError('Agent must have a name.');\n        }\n        this.name = config.name;\n        this.instructions = config.instructions ?? '';\n        this.handoffDescription = config.handoffDescription ?? '';\n        this.handoffs = config.handoffs ?? [];\n        this.model = config.model ?? '';\n        this.modelSettings = config.modelSettings ?? {};\n        this.tools = config.tools ?? [];\n        this.mcpServers = config.mcpServers ?? [];\n        this.inputGuardrails = config.inputGuardrails ?? [];\n        this.outputGuardrails = config.outputGuardrails ?? [];\n        if (config.outputType) {\n            this.outputType = config.outputType;\n        }\n        this.toolUseBehavior = config.toolUseBehavior ?? 'run_llm_again';\n        this.resetToolChoice = config.resetToolChoice ?? true;\n        // --- Runtime warning for handoff output type compatibility ---\n        if (config.handoffOutputTypeWarningEnabled === undefined ||\n            config.handoffOutputTypeWarningEnabled) {\n            if (this.handoffs && this.outputType) {\n                const outputTypes = new Set([JSON.stringify(this.outputType)]);\n                for (const h of this.handoffs) {\n                    if ('outputType' in h && h.outputType) {\n                        outputTypes.add(JSON.stringify(h.outputType));\n                    }\n                    else if ('agent' in h && h.agent.outputType) {\n                        outputTypes.add(JSON.stringify(h.agent.outputType));\n                    }\n                }\n                if (outputTypes.size > 1) {\n                    _logger_mjs__WEBPACK_IMPORTED_MODULE_8__[\"default\"].warn(`[Agent] Warning: Handoff agents have different output types: ${Array.from(outputTypes).join(', ')}. You can make it type-safe by using Agent.create({ ... }) method instead.`);\n                }\n            }\n        }\n    }\n    /**\n     * Ouput schema name\n     */\n    get outputSchemaName() {\n        if (this.outputType === 'text') {\n            return 'text';\n        }\n        else if ((0,_utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_6__.isZodObject)(this.outputType)) {\n            return 'ZodOutput';\n        }\n        else if (typeof this.outputType === 'object') {\n            return this.outputType.name;\n        }\n        throw new Error(`Unknown output type: ${this.outputType}`);\n    }\n    /**\n     * Makes a copy of the agent, with the given arguments changed. For example, you could do:\n     *\n     * ```\n     * const newAgent = agent.clone({ instructions: 'New instructions' })\n     * ```\n     *\n     * @param config - A partial configuration to change.\n     * @returns A new agent with the given changes.\n     */\n    clone(config) {\n        return new Agent({\n            ...this,\n            ...config,\n        });\n    }\n    /**\n     * Transform this agent into a tool, callable by other agents.\n     *\n     * This is different from handoffs in two ways:\n     * 1. In handoffs, the new agent receives the conversation history. In this tool, the new agent\n     *    receives generated input.\n     * 2. In handoffs, the new agent takes over the conversation. In this tool, the new agent is\n     *    called as a tool, and the conversation is continued by the original agent.\n     *\n     * @param options - Options for the tool.\n     * @returns A tool that runs the agent and returns the output text.\n     */\n    asTool(options) {\n        const { toolName, toolDescription, customOutputExtractor } = options;\n        return (0,_tool_mjs__WEBPACK_IMPORTED_MODULE_2__.tool)({\n            name: toolName ?? (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_4__.toFunctionToolName)(this.name),\n            description: toolDescription ?? '',\n            parameters: {\n                type: 'object',\n                properties: {\n                    input: {\n                        type: 'string',\n                    },\n                },\n                required: ['input'],\n                additionalProperties: false,\n            },\n            strict: true,\n            execute: async (data, context) => {\n                if (!(0,_utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_6__.isAgentToolInput)(data)) {\n                    throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_7__.ModelBehaviorError('Agent tool called with invalid input');\n                }\n                const runner = new _run_mjs__WEBPACK_IMPORTED_MODULE_3__.Runner();\n                const result = await runner.run(this, data.input, {\n                    context: context?.context,\n                });\n                if (typeof customOutputExtractor === 'function') {\n                    return customOutputExtractor(result);\n                }\n                return (0,_utils_messages_mjs__WEBPACK_IMPORTED_MODULE_5__.getOutputText)(result.rawResponses[result.rawResponses.length - 1]);\n            },\n        });\n    }\n    /**\n     * Returns the system prompt for the agent.\n     *\n     * If the agent has a function as its instructions, this function will be called with the\n     * runContext and the agent instance.\n     */\n    async getSystemPrompt(runContext) {\n        if (typeof this.instructions === 'function') {\n            return await this.instructions(runContext, this);\n        }\n        return this.instructions;\n    }\n    /**\n     * Fetches the available tools from the MCP servers.\n     * @returns the MCP powered tools\n     */\n    async getMcpTools() {\n        if (this.mcpServers.length > 0) {\n            return (0,_mcp_mjs__WEBPACK_IMPORTED_MODULE_1__.getAllMcpTools)(this.mcpServers);\n        }\n        return [];\n    }\n    /**\n     * ALl agent tools, including the MCPl and function tools.\n     *\n     * @returns all configured tools\n     */\n    async getAllTools() {\n        return [...(await this.getMcpTools()), ...this.tools];\n    }\n    /**\n     * Processes the final output of the agent.\n     *\n     * @param output - The output of the agent.\n     * @returns The parsed out.\n     */\n    processFinalOutput(output) {\n        if (this.outputType === 'text') {\n            return output;\n        }\n        if (typeof this.outputType === 'object') {\n            const parsed = JSON.parse(output);\n            if ((0,_utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_6__.isZodObject)(this.outputType)) {\n                return this.outputType.parse(parsed);\n            }\n            return parsed;\n        }\n        throw new Error(`Unknown output type: ${this.outputType}`);\n    }\n    /**\n     * Returns a JSON representation of the agent, which is serializable.\n     *\n     * @returns A JSON object containing the agent's name.\n     */\n    toJSON() {\n        return {\n            name: this.name,\n        };\n    }\n}\n//# sourceMappingURL=agent.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9hZ2VudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUE2QztBQUNGO0FBQ1I7QUFDQTtBQUNvQjtBQUNGO0FBQ0s7QUFDTDtBQUNRO0FBQzNCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0JBQW9CLHNEQUFVO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtREFBTSxzRUFBc0UsbUNBQW1DLG9EQUFvRCxLQUFLO0FBQzVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsa0VBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxnQkFBZ0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxrQ0FBa0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbURBQW1EO0FBQ25FLGVBQWUsK0NBQUk7QUFDbkIsOEJBQThCLG9FQUFrQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLHFCQUFxQix1RUFBZ0I7QUFDckMsOEJBQThCLDJEQUFrQjtBQUNoRDtBQUNBLG1DQUFtQyw0Q0FBTTtBQUN6QztBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrRUFBYTtBQUNwQyxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdEQUFjO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isa0VBQVc7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsZ0JBQWdCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpbnl0dy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC4yX3dzQDguMTguMl96b2RAMy4yNS41MS9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L2FnZW50Lm1qcz8wOWYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFnZW50SG9va3MgfSBmcm9tIFwiLi9saWZlY3ljbGUubWpzXCI7XG5pbXBvcnQgeyBnZXRBbGxNY3BUb29scyB9IGZyb20gXCIuL21jcC5tanNcIjtcbmltcG9ydCB7IHRvb2wsIH0gZnJvbSBcIi4vdG9vbC5tanNcIjtcbmltcG9ydCB7IFJ1bm5lciB9IGZyb20gXCIuL3J1bi5tanNcIjtcbmltcG9ydCB7IHRvRnVuY3Rpb25Ub29sTmFtZSB9IGZyb20gXCIuL3V0aWxzL3Rvb2xzLm1qc1wiO1xuaW1wb3J0IHsgZ2V0T3V0cHV0VGV4dCB9IGZyb20gXCIuL3V0aWxzL21lc3NhZ2VzLm1qc1wiO1xuaW1wb3J0IHsgaXNBZ2VudFRvb2xJbnB1dCB9IGZyb20gXCIuL3V0aWxzL3R5cGVHdWFyZHMubWpzXCI7XG5pbXBvcnQgeyBpc1pvZE9iamVjdCB9IGZyb20gXCIuL3V0aWxzL3R5cGVHdWFyZHMubWpzXCI7XG5pbXBvcnQgeyBNb2RlbEJlaGF2aW9yRXJyb3IsIFVzZXJFcnJvciB9IGZyb20gXCIuL2Vycm9ycy5tanNcIjtcbmltcG9ydCBsb2dnZXIgZnJvbSBcIi4vbG9nZ2VyLm1qc1wiO1xuLyoqXG4gKiBUaGUgY2xhc3MgcmVwcmVzZW50aW5nIGFuIEFJIGFnZW50IGNvbmZpZ3VyZWQgd2l0aCBpbnN0cnVjdGlvbnMsIHRvb2xzLCBndWFyZHJhaWxzLCBoYW5kb2ZmcyBhbmQgbW9yZS5cbiAqXG4gKiBXZSBzdHJvbmdseSByZWNvbW1lbmQgcGFzc2luZyBgaW5zdHJ1Y3Rpb25zYCwgd2hpY2ggaXMgdGhlIFwic3lzdGVtIHByb21wdFwiIGZvciB0aGUgYWdlbnQuIEluXG4gKiBhZGRpdGlvbiwgeW91IGNhbiBwYXNzIGBoYW5kb2ZmRGVzY3JpcHRpb25gLCB3aGljaCBpcyBhIGh1bWFuLXJlYWRhYmxlIGRlc2NyaXB0aW9uIG9mIHRoZVxuICogYWdlbnQsIHVzZWQgd2hlbiB0aGUgYWdlbnQgaXMgdXNlZCBpbnNpZGUgdG9vbHMvaGFuZG9mZnMuXG4gKlxuICogQWdlbnRzIGFyZSBnZW5lcmljIG9uIHRoZSBjb250ZXh0IHR5cGUuIFRoZSBjb250ZXh0IGlzIGEgKG11dGFibGUpIG9iamVjdCB5b3UgY3JlYXRlLiBJdCBpc1xuICogcGFzc2VkIHRvIHRvb2wgZnVuY3Rpb25zLCBoYW5kb2ZmcywgZ3VhcmRyYWlscywgZXRjLlxuICovXG5leHBvcnQgY2xhc3MgQWdlbnQgZXh0ZW5kcyBBZ2VudEhvb2tzIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gQWdlbnQgd2l0aCBoYW5kb2ZmcyBhbmQgYXV0b21hdGljYWxseSBpbmZlciB0aGUgdW5pb24gdHlwZSBmb3IgVE91dHB1dCBmcm9tIHRoZSBoYW5kb2ZmIGFnZW50cycgb3V0cHV0IHR5cGVzLlxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGUoY29uZmlnKSB7XG4gICAgICAgIHJldHVybiBuZXcgQWdlbnQoe1xuICAgICAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICAgICAgaGFuZG9mZnM6IGNvbmZpZy5oYW5kb2ZmcyxcbiAgICAgICAgICAgIG91dHB1dFR5cGU6IGNvbmZpZy5vdXRwdXRUeXBlLFxuICAgICAgICAgICAgaGFuZG9mZk91dHB1dFR5cGVXYXJuaW5nRW5hYmxlZDogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBuYW1lO1xuICAgIGluc3RydWN0aW9ucztcbiAgICBoYW5kb2ZmRGVzY3JpcHRpb247XG4gICAgaGFuZG9mZnM7XG4gICAgbW9kZWw7XG4gICAgbW9kZWxTZXR0aW5ncztcbiAgICB0b29scztcbiAgICBtY3BTZXJ2ZXJzO1xuICAgIGlucHV0R3VhcmRyYWlscztcbiAgICBvdXRwdXRHdWFyZHJhaWxzO1xuICAgIG91dHB1dFR5cGUgPSAndGV4dCc7XG4gICAgdG9vbFVzZUJlaGF2aW9yO1xuICAgIHJlc2V0VG9vbENob2ljZTtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcubmFtZSAhPT0gJ3N0cmluZycgfHwgY29uZmlnLm5hbWUudHJpbSgpID09PSAnJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFVzZXJFcnJvcignQWdlbnQgbXVzdCBoYXZlIGEgbmFtZS4nKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm5hbWUgPSBjb25maWcubmFtZTtcbiAgICAgICAgdGhpcy5pbnN0cnVjdGlvbnMgPSBjb25maWcuaW5zdHJ1Y3Rpb25zID8/ICcnO1xuICAgICAgICB0aGlzLmhhbmRvZmZEZXNjcmlwdGlvbiA9IGNvbmZpZy5oYW5kb2ZmRGVzY3JpcHRpb24gPz8gJyc7XG4gICAgICAgIHRoaXMuaGFuZG9mZnMgPSBjb25maWcuaGFuZG9mZnMgPz8gW107XG4gICAgICAgIHRoaXMubW9kZWwgPSBjb25maWcubW9kZWwgPz8gJyc7XG4gICAgICAgIHRoaXMubW9kZWxTZXR0aW5ncyA9IGNvbmZpZy5tb2RlbFNldHRpbmdzID8/IHt9O1xuICAgICAgICB0aGlzLnRvb2xzID0gY29uZmlnLnRvb2xzID8/IFtdO1xuICAgICAgICB0aGlzLm1jcFNlcnZlcnMgPSBjb25maWcubWNwU2VydmVycyA/PyBbXTtcbiAgICAgICAgdGhpcy5pbnB1dEd1YXJkcmFpbHMgPSBjb25maWcuaW5wdXRHdWFyZHJhaWxzID8/IFtdO1xuICAgICAgICB0aGlzLm91dHB1dEd1YXJkcmFpbHMgPSBjb25maWcub3V0cHV0R3VhcmRyYWlscyA/PyBbXTtcbiAgICAgICAgaWYgKGNvbmZpZy5vdXRwdXRUeXBlKSB7XG4gICAgICAgICAgICB0aGlzLm91dHB1dFR5cGUgPSBjb25maWcub3V0cHV0VHlwZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRvb2xVc2VCZWhhdmlvciA9IGNvbmZpZy50b29sVXNlQmVoYXZpb3IgPz8gJ3J1bl9sbG1fYWdhaW4nO1xuICAgICAgICB0aGlzLnJlc2V0VG9vbENob2ljZSA9IGNvbmZpZy5yZXNldFRvb2xDaG9pY2UgPz8gdHJ1ZTtcbiAgICAgICAgLy8gLS0tIFJ1bnRpbWUgd2FybmluZyBmb3IgaGFuZG9mZiBvdXRwdXQgdHlwZSBjb21wYXRpYmlsaXR5IC0tLVxuICAgICAgICBpZiAoY29uZmlnLmhhbmRvZmZPdXRwdXRUeXBlV2FybmluZ0VuYWJsZWQgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgY29uZmlnLmhhbmRvZmZPdXRwdXRUeXBlV2FybmluZ0VuYWJsZWQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmhhbmRvZmZzICYmIHRoaXMub3V0cHV0VHlwZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG91dHB1dFR5cGVzID0gbmV3IFNldChbSlNPTi5zdHJpbmdpZnkodGhpcy5vdXRwdXRUeXBlKV0pO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaCBvZiB0aGlzLmhhbmRvZmZzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgnb3V0cHV0VHlwZScgaW4gaCAmJiBoLm91dHB1dFR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFR5cGVzLmFkZChKU09OLnN0cmluZ2lmeShoLm91dHB1dFR5cGUpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICgnYWdlbnQnIGluIGggJiYgaC5hZ2VudC5vdXRwdXRUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRUeXBlcy5hZGQoSlNPTi5zdHJpbmdpZnkoaC5hZ2VudC5vdXRwdXRUeXBlKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG91dHB1dFR5cGVzLnNpemUgPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlci53YXJuKGBbQWdlbnRdIFdhcm5pbmc6IEhhbmRvZmYgYWdlbnRzIGhhdmUgZGlmZmVyZW50IG91dHB1dCB0eXBlczogJHtBcnJheS5mcm9tKG91dHB1dFR5cGVzKS5qb2luKCcsICcpfS4gWW91IGNhbiBtYWtlIGl0IHR5cGUtc2FmZSBieSB1c2luZyBBZ2VudC5jcmVhdGUoeyAuLi4gfSkgbWV0aG9kIGluc3RlYWQuYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE91cHV0IHNjaGVtYSBuYW1lXG4gICAgICovXG4gICAgZ2V0IG91dHB1dFNjaGVtYU5hbWUoKSB7XG4gICAgICAgIGlmICh0aGlzLm91dHB1dFR5cGUgPT09ICd0ZXh0Jykge1xuICAgICAgICAgICAgcmV0dXJuICd0ZXh0JztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1pvZE9iamVjdCh0aGlzLm91dHB1dFR5cGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gJ1pvZE91dHB1dCc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHRoaXMub3V0cHV0VHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm91dHB1dFR5cGUubmFtZTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gb3V0cHV0IHR5cGU6ICR7dGhpcy5vdXRwdXRUeXBlfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNYWtlcyBhIGNvcHkgb2YgdGhlIGFnZW50LCB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHMgY2hhbmdlZC4gRm9yIGV4YW1wbGUsIHlvdSBjb3VsZCBkbzpcbiAgICAgKlxuICAgICAqIGBgYFxuICAgICAqIGNvbnN0IG5ld0FnZW50ID0gYWdlbnQuY2xvbmUoeyBpbnN0cnVjdGlvbnM6ICdOZXcgaW5zdHJ1Y3Rpb25zJyB9KVxuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbmZpZyAtIEEgcGFydGlhbCBjb25maWd1cmF0aW9uIHRvIGNoYW5nZS5cbiAgICAgKiBAcmV0dXJucyBBIG5ldyBhZ2VudCB3aXRoIHRoZSBnaXZlbiBjaGFuZ2VzLlxuICAgICAqL1xuICAgIGNsb25lKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gbmV3IEFnZW50KHtcbiAgICAgICAgICAgIC4uLnRoaXMsXG4gICAgICAgICAgICAuLi5jb25maWcsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcmFuc2Zvcm0gdGhpcyBhZ2VudCBpbnRvIGEgdG9vbCwgY2FsbGFibGUgYnkgb3RoZXIgYWdlbnRzLlxuICAgICAqXG4gICAgICogVGhpcyBpcyBkaWZmZXJlbnQgZnJvbSBoYW5kb2ZmcyBpbiB0d28gd2F5czpcbiAgICAgKiAxLiBJbiBoYW5kb2ZmcywgdGhlIG5ldyBhZ2VudCByZWNlaXZlcyB0aGUgY29udmVyc2F0aW9uIGhpc3RvcnkuIEluIHRoaXMgdG9vbCwgdGhlIG5ldyBhZ2VudFxuICAgICAqICAgIHJlY2VpdmVzIGdlbmVyYXRlZCBpbnB1dC5cbiAgICAgKiAyLiBJbiBoYW5kb2ZmcywgdGhlIG5ldyBhZ2VudCB0YWtlcyBvdmVyIHRoZSBjb252ZXJzYXRpb24uIEluIHRoaXMgdG9vbCwgdGhlIG5ldyBhZ2VudCBpc1xuICAgICAqICAgIGNhbGxlZCBhcyBhIHRvb2wsIGFuZCB0aGUgY29udmVyc2F0aW9uIGlzIGNvbnRpbnVlZCBieSB0aGUgb3JpZ2luYWwgYWdlbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgZm9yIHRoZSB0b29sLlxuICAgICAqIEByZXR1cm5zIEEgdG9vbCB0aGF0IHJ1bnMgdGhlIGFnZW50IGFuZCByZXR1cm5zIHRoZSBvdXRwdXQgdGV4dC5cbiAgICAgKi9cbiAgICBhc1Rvb2wob3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHRvb2xOYW1lLCB0b29sRGVzY3JpcHRpb24sIGN1c3RvbU91dHB1dEV4dHJhY3RvciB9ID0gb3B0aW9ucztcbiAgICAgICAgcmV0dXJuIHRvb2woe1xuICAgICAgICAgICAgbmFtZTogdG9vbE5hbWUgPz8gdG9GdW5jdGlvblRvb2xOYW1lKHRoaXMubmFtZSksXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogdG9vbERlc2NyaXB0aW9uID8/ICcnLFxuICAgICAgICAgICAgcGFyYW1ldGVyczoge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdvYmplY3QnLFxuICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFsnaW5wdXQnXSxcbiAgICAgICAgICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczogZmFsc2UsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3RyaWN0OiB0cnVlLFxuICAgICAgICAgICAgZXhlY3V0ZTogYXN5bmMgKGRhdGEsIGNvbnRleHQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIWlzQWdlbnRUb29sSW5wdXQoZGF0YSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IE1vZGVsQmVoYXZpb3JFcnJvcignQWdlbnQgdG9vbCBjYWxsZWQgd2l0aCBpbnZhbGlkIGlucHV0Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJ1bm5lciA9IG5ldyBSdW5uZXIoKTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBydW5uZXIucnVuKHRoaXMsIGRhdGEuaW5wdXQsIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dD8uY29udGV4dCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGN1c3RvbU91dHB1dEV4dHJhY3RvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3VzdG9tT3V0cHV0RXh0cmFjdG9yKHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBnZXRPdXRwdXRUZXh0KHJlc3VsdC5yYXdSZXNwb25zZXNbcmVzdWx0LnJhd1Jlc3BvbnNlcy5sZW5ndGggLSAxXSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgc3lzdGVtIHByb21wdCBmb3IgdGhlIGFnZW50LlxuICAgICAqXG4gICAgICogSWYgdGhlIGFnZW50IGhhcyBhIGZ1bmN0aW9uIGFzIGl0cyBpbnN0cnVjdGlvbnMsIHRoaXMgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGVcbiAgICAgKiBydW5Db250ZXh0IGFuZCB0aGUgYWdlbnQgaW5zdGFuY2UuXG4gICAgICovXG4gICAgYXN5bmMgZ2V0U3lzdGVtUHJvbXB0KHJ1bkNvbnRleHQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmluc3RydWN0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuaW5zdHJ1Y3Rpb25zKHJ1bkNvbnRleHQsIHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmluc3RydWN0aW9ucztcbiAgICB9XG4gICAgLyoqXG4gICAgICogRmV0Y2hlcyB0aGUgYXZhaWxhYmxlIHRvb2xzIGZyb20gdGhlIE1DUCBzZXJ2ZXJzLlxuICAgICAqIEByZXR1cm5zIHRoZSBNQ1AgcG93ZXJlZCB0b29sc1xuICAgICAqL1xuICAgIGFzeW5jIGdldE1jcFRvb2xzKCkge1xuICAgICAgICBpZiAodGhpcy5tY3BTZXJ2ZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHJldHVybiBnZXRBbGxNY3BUb29scyh0aGlzLm1jcFNlcnZlcnMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQUxsIGFnZW50IHRvb2xzLCBpbmNsdWRpbmcgdGhlIE1DUGwgYW5kIGZ1bmN0aW9uIHRvb2xzLlxuICAgICAqXG4gICAgICogQHJldHVybnMgYWxsIGNvbmZpZ3VyZWQgdG9vbHNcbiAgICAgKi9cbiAgICBhc3luYyBnZXRBbGxUb29scygpIHtcbiAgICAgICAgcmV0dXJuIFsuLi4oYXdhaXQgdGhpcy5nZXRNY3BUb29scygpKSwgLi4udGhpcy50b29sc107XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFByb2Nlc3NlcyB0aGUgZmluYWwgb3V0cHV0IG9mIHRoZSBhZ2VudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvdXRwdXQgLSBUaGUgb3V0cHV0IG9mIHRoZSBhZ2VudC5cbiAgICAgKiBAcmV0dXJucyBUaGUgcGFyc2VkIG91dC5cbiAgICAgKi9cbiAgICBwcm9jZXNzRmluYWxPdXRwdXQob3V0cHV0KSB7XG4gICAgICAgIGlmICh0aGlzLm91dHB1dFR5cGUgPT09ICd0ZXh0Jykge1xuICAgICAgICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHRoaXMub3V0cHV0VHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2Uob3V0cHV0KTtcbiAgICAgICAgICAgIGlmIChpc1pvZE9iamVjdCh0aGlzLm91dHB1dFR5cGUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3V0cHV0VHlwZS5wYXJzZShwYXJzZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHBhcnNlZDtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gb3V0cHV0IHR5cGU6ICR7dGhpcy5vdXRwdXRUeXBlfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGUgYWdlbnQsIHdoaWNoIGlzIHNlcmlhbGl6YWJsZS5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgSlNPTiBvYmplY3QgY29udGFpbmluZyB0aGUgYWdlbnQncyBuYW1lLlxuICAgICAqL1xuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgICAgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZ2VudC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/agent.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/config.mjs":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/config.mjs ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadEnv: () => (/* binding */ loadEnv),\n/* harmony export */   logging: () => (/* binding */ logging),\n/* harmony export */   tracing: () => (/* binding */ tracing)\n/* harmony export */ });\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n\n/**\n * Loads environment variables from the process environment.\n *\n * @returns An object containing the environment variables.\n */\nfunction loadEnv() {\n    return (0,_openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.loadEnv)();\n}\n/**\n * Checks if a flag is enabled in the environment.\n *\n * @param flagName - The name of the flag to check.\n * @returns `true` if the flag is enabled, `false` otherwise.\n */\nfunction isEnabled(flagName) {\n    const env = loadEnv();\n    return (typeof env !== 'undefined' &&\n        (env[flagName] === 'true' || env[flagName] === '1'));\n}\n/**\n * Global configuration for tracing.\n */\nconst tracing = {\n    get disabled() {\n        return isEnabled('OPENAI_AGENTS_DISABLE_TRACING');\n    },\n};\n/**\n * Global configuration for logging.\n */\nconst logging = {\n    get dontLogModelData() {\n        return isEnabled('OPENAI_AGENTS_DONT_LOG_MODEL_DATA');\n    },\n    get dontLogToolData() {\n        return isEnabled('OPENAI_AGENTS_DONT_LOG_TOOL_DATA');\n    },\n};\n//# sourceMappingURL=config.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9jb25maWcubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxrRUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpbnl0dy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC4yX3dzQDguMTguMl96b2RAMy4yNS41MS9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L2NvbmZpZy5tanM/M2MzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2FkRW52IGFzIF9sb2FkRW52IH0gZnJvbSAnQG9wZW5haS9hZ2VudHMtY29yZS9fc2hpbXMnO1xuLyoqXG4gKiBMb2FkcyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZnJvbSB0aGUgcHJvY2VzcyBlbnZpcm9ubWVudC5cbiAqXG4gKiBAcmV0dXJucyBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9hZEVudigpIHtcbiAgICByZXR1cm4gX2xvYWRFbnYoKTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIGEgZmxhZyBpcyBlbmFibGVkIGluIHRoZSBlbnZpcm9ubWVudC5cbiAqXG4gKiBAcGFyYW0gZmxhZ05hbWUgLSBUaGUgbmFtZSBvZiB0aGUgZmxhZyB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgZmxhZyBpcyBlbmFibGVkLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNFbmFibGVkKGZsYWdOYW1lKSB7XG4gICAgY29uc3QgZW52ID0gbG9hZEVudigpO1xuICAgIHJldHVybiAodHlwZW9mIGVudiAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgKGVudltmbGFnTmFtZV0gPT09ICd0cnVlJyB8fCBlbnZbZmxhZ05hbWVdID09PSAnMScpKTtcbn1cbi8qKlxuICogR2xvYmFsIGNvbmZpZ3VyYXRpb24gZm9yIHRyYWNpbmcuXG4gKi9cbmV4cG9ydCBjb25zdCB0cmFjaW5nID0ge1xuICAgIGdldCBkaXNhYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIGlzRW5hYmxlZCgnT1BFTkFJX0FHRU5UU19ESVNBQkxFX1RSQUNJTkcnKTtcbiAgICB9LFxufTtcbi8qKlxuICogR2xvYmFsIGNvbmZpZ3VyYXRpb24gZm9yIGxvZ2dpbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBsb2dnaW5nID0ge1xuICAgIGdldCBkb250TG9nTW9kZWxEYXRhKCkge1xuICAgICAgICByZXR1cm4gaXNFbmFibGVkKCdPUEVOQUlfQUdFTlRTX0RPTlRfTE9HX01PREVMX0RBVEEnKTtcbiAgICB9LFxuICAgIGdldCBkb250TG9nVG9vbERhdGEoKSB7XG4gICAgICAgIHJldHVybiBpc0VuYWJsZWQoJ09QRU5BSV9BR0VOVFNfRE9OVF9MT0dfVE9PTF9EQVRBJyk7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25maWcubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/config.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentsError: () => (/* binding */ AgentsError),\n/* harmony export */   GuardrailExecutionError: () => (/* binding */ GuardrailExecutionError),\n/* harmony export */   InputGuardrailTripwireTriggered: () => (/* binding */ InputGuardrailTripwireTriggered),\n/* harmony export */   MaxTurnsExceededError: () => (/* binding */ MaxTurnsExceededError),\n/* harmony export */   ModelBehaviorError: () => (/* binding */ ModelBehaviorError),\n/* harmony export */   OutputGuardrailTripwireTriggered: () => (/* binding */ OutputGuardrailTripwireTriggered),\n/* harmony export */   SystemError: () => (/* binding */ SystemError),\n/* harmony export */   ToolCallError: () => (/* binding */ ToolCallError),\n/* harmony export */   UserError: () => (/* binding */ UserError)\n/* harmony export */ });\n/**\n * Base class for all errors thrown by the library.\n */\nclass AgentsError extends Error {\n    state;\n    constructor(message, state) {\n        super(message);\n        this.state = state;\n    }\n}\n/**\n * System error thrown when the library encounters an error that is not caused by the user's\n * misconfiguration.\n */\nclass SystemError extends AgentsError {\n}\n/**\n * Error thrown when the maximum number of turns is exceeded.\n */\nclass MaxTurnsExceededError extends AgentsError {\n}\n/**\n * Error thrown when a model behavior is unexpected.\n */\nclass ModelBehaviorError extends AgentsError {\n}\n/**\n * Error thrown when the error is caused by the library user's misconfiguration.\n */\nclass UserError extends AgentsError {\n}\n/**\n * Error thrown when a guardrail execution fails.\n */\nclass GuardrailExecutionError extends AgentsError {\n    error;\n    constructor(message, error, state) {\n        super(message, state);\n        this.error = error;\n    }\n}\n/**\n * Error thrown when a tool call fails.\n */\nclass ToolCallError extends AgentsError {\n    error;\n    constructor(message, error, state) {\n        super(message, state);\n        this.error = error;\n    }\n}\n/**\n * Error thrown when an input guardrail tripwire is triggered.\n */\nclass InputGuardrailTripwireTriggered extends AgentsError {\n    result;\n    constructor(message, result, state) {\n        super(message, state);\n        this.result = result;\n    }\n}\n/**\n * Error thrown when an output guardrail tripwire is triggered.\n */\nclass OutputGuardrailTripwireTriggered extends AgentsError {\n    result;\n    constructor(message, result, state) {\n        super(message, state);\n        this.result = result;\n    }\n}\n//# sourceMappingURL=errors.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9lcnJvcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9lcnJvcnMubWpzPzFkMWMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBCYXNlIGNsYXNzIGZvciBhbGwgZXJyb3JzIHRocm93biBieSB0aGUgbGlicmFyeS5cbiAqL1xuZXhwb3J0IGNsYXNzIEFnZW50c0Vycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIHN0YXRlO1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHN0YXRlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgfVxufVxuLyoqXG4gKiBTeXN0ZW0gZXJyb3IgdGhyb3duIHdoZW4gdGhlIGxpYnJhcnkgZW5jb3VudGVycyBhbiBlcnJvciB0aGF0IGlzIG5vdCBjYXVzZWQgYnkgdGhlIHVzZXInc1xuICogbWlzY29uZmlndXJhdGlvbi5cbiAqL1xuZXhwb3J0IGNsYXNzIFN5c3RlbUVycm9yIGV4dGVuZHMgQWdlbnRzRXJyb3Ige1xufVxuLyoqXG4gKiBFcnJvciB0aHJvd24gd2hlbiB0aGUgbWF4aW11bSBudW1iZXIgb2YgdHVybnMgaXMgZXhjZWVkZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBNYXhUdXJuc0V4Y2VlZGVkRXJyb3IgZXh0ZW5kcyBBZ2VudHNFcnJvciB7XG59XG4vKipcbiAqIEVycm9yIHRocm93biB3aGVuIGEgbW9kZWwgYmVoYXZpb3IgaXMgdW5leHBlY3RlZC5cbiAqL1xuZXhwb3J0IGNsYXNzIE1vZGVsQmVoYXZpb3JFcnJvciBleHRlbmRzIEFnZW50c0Vycm9yIHtcbn1cbi8qKlxuICogRXJyb3IgdGhyb3duIHdoZW4gdGhlIGVycm9yIGlzIGNhdXNlZCBieSB0aGUgbGlicmFyeSB1c2VyJ3MgbWlzY29uZmlndXJhdGlvbi5cbiAqL1xuZXhwb3J0IGNsYXNzIFVzZXJFcnJvciBleHRlbmRzIEFnZW50c0Vycm9yIHtcbn1cbi8qKlxuICogRXJyb3IgdGhyb3duIHdoZW4gYSBndWFyZHJhaWwgZXhlY3V0aW9uIGZhaWxzLlxuICovXG5leHBvcnQgY2xhc3MgR3VhcmRyYWlsRXhlY3V0aW9uRXJyb3IgZXh0ZW5kcyBBZ2VudHNFcnJvciB7XG4gICAgZXJyb3I7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgZXJyb3IsIHN0YXRlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIHN0YXRlKTtcbiAgICAgICAgdGhpcy5lcnJvciA9IGVycm9yO1xuICAgIH1cbn1cbi8qKlxuICogRXJyb3IgdGhyb3duIHdoZW4gYSB0b29sIGNhbGwgZmFpbHMuXG4gKi9cbmV4cG9ydCBjbGFzcyBUb29sQ2FsbEVycm9yIGV4dGVuZHMgQWdlbnRzRXJyb3Ige1xuICAgIGVycm9yO1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGVycm9yLCBzdGF0ZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBzdGF0ZSk7XG4gICAgICAgIHRoaXMuZXJyb3IgPSBlcnJvcjtcbiAgICB9XG59XG4vKipcbiAqIEVycm9yIHRocm93biB3aGVuIGFuIGlucHV0IGd1YXJkcmFpbCB0cmlwd2lyZSBpcyB0cmlnZ2VyZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBJbnB1dEd1YXJkcmFpbFRyaXB3aXJlVHJpZ2dlcmVkIGV4dGVuZHMgQWdlbnRzRXJyb3Ige1xuICAgIHJlc3VsdDtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCByZXN1bHQsIHN0YXRlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIHN0YXRlKTtcbiAgICAgICAgdGhpcy5yZXN1bHQgPSByZXN1bHQ7XG4gICAgfVxufVxuLyoqXG4gKiBFcnJvciB0aHJvd24gd2hlbiBhbiBvdXRwdXQgZ3VhcmRyYWlsIHRyaXB3aXJlIGlzIHRyaWdnZXJlZC5cbiAqL1xuZXhwb3J0IGNsYXNzIE91dHB1dEd1YXJkcmFpbFRyaXB3aXJlVHJpZ2dlcmVkIGV4dGVuZHMgQWdlbnRzRXJyb3Ige1xuICAgIHJlc3VsdDtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCByZXN1bHQsIHN0YXRlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIHN0YXRlKTtcbiAgICAgICAgdGhpcy5yZXN1bHQgPSByZXN1bHQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/events.mjs":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/events.mjs ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunAgentUpdatedStreamEvent: () => (/* binding */ RunAgentUpdatedStreamEvent),\n/* harmony export */   RunItemStreamEvent: () => (/* binding */ RunItemStreamEvent),\n/* harmony export */   RunRawModelStreamEvent: () => (/* binding */ RunRawModelStreamEvent)\n/* harmony export */ });\n/**\n * Streaming event from the LLM. These are `raw` events, i.e. they are directly passed through from\n * the LLM.\n */\nclass RunRawModelStreamEvent {\n    data;\n    /**\n     * The type of the event.\n     */\n    type = 'raw_model_stream_event';\n    /**\n     * @param data The raw responses stream events from the LLM.\n     */\n    constructor(data) {\n        this.data = data;\n    }\n}\n/**\n * Streaming events that wrap a `RunItem`. As the agent processes the LLM response, it will generate\n * these events from new messages, tool calls, tool outputs, handoffs, etc.\n */\nclass RunItemStreamEvent {\n    name;\n    item;\n    type = 'run_item_stream_event';\n    /**\n     * @param name The name of the event.\n     * @param item The item that was created.\n     */\n    constructor(name, item) {\n        this.name = name;\n        this.item = item;\n    }\n}\n/**\n * Event that notifies that there is a new agent running.\n */\nclass RunAgentUpdatedStreamEvent {\n    agent;\n    type = 'agent_updated_stream_event';\n    /**\n     * @param agent The new agent\n     */\n    constructor(agent) {\n        this.agent = agent;\n    }\n}\n//# sourceMappingURL=events.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9ldmVudHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9ldmVudHMubWpzPzZmYzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTdHJlYW1pbmcgZXZlbnQgZnJvbSB0aGUgTExNLiBUaGVzZSBhcmUgYHJhd2AgZXZlbnRzLCBpLmUuIHRoZXkgYXJlIGRpcmVjdGx5IHBhc3NlZCB0aHJvdWdoIGZyb21cbiAqIHRoZSBMTE0uXG4gKi9cbmV4cG9ydCBjbGFzcyBSdW5SYXdNb2RlbFN0cmVhbUV2ZW50IHtcbiAgICBkYXRhO1xuICAgIC8qKlxuICAgICAqIFRoZSB0eXBlIG9mIHRoZSBldmVudC5cbiAgICAgKi9cbiAgICB0eXBlID0gJ3Jhd19tb2RlbF9zdHJlYW1fZXZlbnQnO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBkYXRhIFRoZSByYXcgcmVzcG9uc2VzIHN0cmVhbSBldmVudHMgZnJvbSB0aGUgTExNLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB9XG59XG4vKipcbiAqIFN0cmVhbWluZyBldmVudHMgdGhhdCB3cmFwIGEgYFJ1bkl0ZW1gLiBBcyB0aGUgYWdlbnQgcHJvY2Vzc2VzIHRoZSBMTE0gcmVzcG9uc2UsIGl0IHdpbGwgZ2VuZXJhdGVcbiAqIHRoZXNlIGV2ZW50cyBmcm9tIG5ldyBtZXNzYWdlcywgdG9vbCBjYWxscywgdG9vbCBvdXRwdXRzLCBoYW5kb2ZmcywgZXRjLlxuICovXG5leHBvcnQgY2xhc3MgUnVuSXRlbVN0cmVhbUV2ZW50IHtcbiAgICBuYW1lO1xuICAgIGl0ZW07XG4gICAgdHlwZSA9ICdydW5faXRlbV9zdHJlYW1fZXZlbnQnO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBuYW1lIFRoZSBuYW1lIG9mIHRoZSBldmVudC5cbiAgICAgKiBAcGFyYW0gaXRlbSBUaGUgaXRlbSB0aGF0IHdhcyBjcmVhdGVkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGl0ZW0pIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5pdGVtID0gaXRlbTtcbiAgICB9XG59XG4vKipcbiAqIEV2ZW50IHRoYXQgbm90aWZpZXMgdGhhdCB0aGVyZSBpcyBhIG5ldyBhZ2VudCBydW5uaW5nLlxuICovXG5leHBvcnQgY2xhc3MgUnVuQWdlbnRVcGRhdGVkU3RyZWFtRXZlbnQge1xuICAgIGFnZW50O1xuICAgIHR5cGUgPSAnYWdlbnRfdXBkYXRlZF9zdHJlYW1fZXZlbnQnO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBhZ2VudCBUaGUgbmV3IGFnZW50XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoYWdlbnQpIHtcbiAgICAgICAgdGhpcy5hZ2VudCA9IGFnZW50O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50cy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/events.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/guardrail.mjs":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/guardrail.mjs ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defineInputGuardrail: () => (/* binding */ defineInputGuardrail),\n/* harmony export */   defineOutputGuardrail: () => (/* binding */ defineOutputGuardrail)\n/* harmony export */ });\n/**\n * Defines an internal input guardrail definition.\n * SDK users usually do not need to use this.\n */\nfunction defineInputGuardrail({ name, execute, }) {\n    return {\n        type: 'input',\n        name,\n        guardrailFunction: execute,\n        async run(args) {\n            return {\n                guardrail: { type: 'input', name },\n                output: await execute(args),\n            };\n        },\n    };\n}\n/**\n * Creates an internal output guardrail definition.\n * SDK users usually do not need to use this.\n * @internal\n */\nfunction defineOutputGuardrail({ name, execute, }) {\n    return {\n        type: 'output',\n        name,\n        guardrailFunction: execute,\n        async run(args) {\n            return {\n                guardrail: { type: 'output', name },\n                agent: args.agent,\n                agentOutput: args.agentOutput,\n                output: await execute(args),\n            };\n        },\n    };\n}\n//# sourceMappingURL=guardrail.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9ndWFyZHJhaWwubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0MsZ0JBQWdCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixxQkFBcUI7QUFDbEQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlDQUFpQyxnQkFBZ0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHNCQUFzQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuYWlueXR3Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjJfd3NAOC4xOC4yX3pvZEAzLjI1LjUxL25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvZ3VhcmRyYWlsLm1qcz83Y2MzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGVmaW5lcyBhbiBpbnRlcm5hbCBpbnB1dCBndWFyZHJhaWwgZGVmaW5pdGlvbi5cbiAqIFNESyB1c2VycyB1c3VhbGx5IGRvIG5vdCBuZWVkIHRvIHVzZSB0aGlzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lSW5wdXRHdWFyZHJhaWwoeyBuYW1lLCBleGVjdXRlLCB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ2lucHV0JyxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZ3VhcmRyYWlsRnVuY3Rpb246IGV4ZWN1dGUsXG4gICAgICAgIGFzeW5jIHJ1bihhcmdzKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGd1YXJkcmFpbDogeyB0eXBlOiAnaW5wdXQnLCBuYW1lIH0sXG4gICAgICAgICAgICAgICAgb3V0cHV0OiBhd2FpdCBleGVjdXRlKGFyZ3MpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLyoqXG4gKiBDcmVhdGVzIGFuIGludGVybmFsIG91dHB1dCBndWFyZHJhaWwgZGVmaW5pdGlvbi5cbiAqIFNESyB1c2VycyB1c3VhbGx5IGRvIG5vdCBuZWVkIHRvIHVzZSB0aGlzLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVPdXRwdXRHdWFyZHJhaWwoeyBuYW1lLCBleGVjdXRlLCB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ291dHB1dCcsXG4gICAgICAgIG5hbWUsXG4gICAgICAgIGd1YXJkcmFpbEZ1bmN0aW9uOiBleGVjdXRlLFxuICAgICAgICBhc3luYyBydW4oYXJncykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBndWFyZHJhaWw6IHsgdHlwZTogJ291dHB1dCcsIG5hbWUgfSxcbiAgICAgICAgICAgICAgICBhZ2VudDogYXJncy5hZ2VudCxcbiAgICAgICAgICAgICAgICBhZ2VudE91dHB1dDogYXJncy5hZ2VudE91dHB1dCxcbiAgICAgICAgICAgICAgICBvdXRwdXQ6IGF3YWl0IGV4ZWN1dGUoYXJncyksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ndWFyZHJhaWwubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/guardrail.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/handoff.mjs":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/handoff.mjs ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Handoff: () => (/* binding */ Handoff),\n/* harmony export */   getHandoff: () => (/* binding */ getHandoff),\n/* harmony export */   getTransferMessage: () => (/* binding */ getTransferMessage),\n/* harmony export */   handoff: () => (/* binding */ handoff)\n/* harmony export */ });\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/tools.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/tools.mjs\");\n/* harmony import */ var _tracing_context_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tracing/context.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n\n\n\n\n\n/**\n * Generates the message that will be given as tool output to the model that requested the handoff.\n *\n * @param agent The agent to transfer to\n * @returns The message that will be given as tool output to the model that requested the handoff\n */\nfunction getTransferMessage(agent) {\n    return `{'assistant': '${agent.name}'}`;\n}\n/**\n * The default name of the tool that represents the handoff.\n *\n * @param agent The agent to transfer to\n * @returns The name of the tool that represents the handoff\n */\nfunction defaultHandoffToolName(agent) {\n    return `transfer_to_${(0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__.toFunctionToolName)(agent.name)}`;\n}\n/**\n * Generates the description of the tool that represents the handoff.\n *\n * @param agent The agent to transfer to\n * @returns The description of the tool that represents the handoff\n */\nfunction defaultHandoffToolDescription(agent) {\n    return `Handoff to the ${agent.name} agent to handle the request. ${agent.handoffDescription ?? ''}`;\n}\n/**\n * A handoff is when an agent delegates a task to another agent.\n * For example, in a customer support scenario you might have a \"triage agent\" that determines which\n * agent should handle the user's request, and sub-agents that specialize in different areas like\n * billing, account management, etc.\n *\n * @template TContext The context of the handoff\n * @template TOutput The output type of the handoff\n */\nclass Handoff {\n    /**\n     * The name of the tool that represents the handoff.\n     */\n    toolName;\n    /**\n     * The description of the tool that represents the handoff.\n     */\n    toolDescription;\n    /**\n     * The JSON schema for the handoff input. Can be empty if the handoff does not take an input\n     */\n    inputJsonSchema = {\n        type: 'object',\n        properties: {},\n        required: [],\n        additionalProperties: false,\n    };\n    /**\n     * Whether the input JSON schema is in strict mode. We **strongly** recommend setting this to\n     * true, as it increases the likelihood of correct JSON input.\n     */\n    strictJsonSchema = true;\n    /**\n     * The function that invokes the handoff. The parameters passed are:\n     * 1. The handoff run context\n     * 2. The arugments from the LLM, as a JSON string. Empty string if inputJsonSchema is empty.\n     *\n     * Must return an agent\n     */\n    onInvokeHandoff;\n    /**\n     * The name of the agent that is being handed off to.\n     */\n    agentName;\n    /**\n     * A function that filters the inputs that are passed to the next agent. By default, the new agent\n     * sees the entire conversation history. In some cases, you may want to filter inputs e.g. to\n     * remove older inputs, or remove tools from existing inputs.\n     *\n     * The function will receive the entire conversation hisstory so far, including the input item\n     * that triggered the handoff and a tool call output item representing the handoff tool's output.\n     *\n     * You are free to modify the input history or new items as you see fit. The next agent that runs\n     * will receive `handoffInputData.allItems\n     */\n    inputFilter;\n    /**\n     * The agent that is being handed off to.\n     */\n    agent;\n    /**\n     * Returns a function tool definition that can be used to invoke the handoff.\n     */\n    getHandoffAsFunctionTool() {\n        return {\n            type: 'function',\n            name: this.toolName,\n            description: this.toolDescription,\n            parameters: this.inputJsonSchema,\n            strict: this.strictJsonSchema,\n        };\n    }\n    constructor(agent, onInvokeHandoff) {\n        this.agentName = agent.name;\n        this.onInvokeHandoff = onInvokeHandoff;\n        this.toolName = defaultHandoffToolName(agent);\n        this.toolDescription = defaultHandoffToolDescription(agent);\n        this.agent = agent;\n    }\n}\n/**\n * Creates a handoff from an agent. Handoffs are automatically created when you pass an agent\n * into the `handoffs` option of the `Agent` constructor. Alternatively, you can use this function\n * to create a handoff manually, giving you more control over configuration.\n *\n * @template TContext The context of the handoff\n * @template TOutput The output type of the handoff\n * @template TInputType The input type of the handoff\n */\nfunction handoff(agent, config = {}) {\n    let parser = undefined;\n    const hasOnHandoff = !!config.onHandoff;\n    const hasInputType = !!config.inputType;\n    const hasBothOrNeitherHandoffAndInputType = hasOnHandoff === hasInputType;\n    if (!hasBothOrNeitherHandoffAndInputType) {\n        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.UserError('You must provide either both `onHandoff` and `inputType` or neither.');\n    }\n    async function onInvokeHandoff(context, inputJsonString) {\n        if (parser) {\n            if (!inputJsonString) {\n                (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_2__.addErrorToCurrentSpan)({\n                    message: `Handoff function expected non empty input but got: ${inputJsonString}`,\n                    data: {\n                        details: `input is empty`,\n                    },\n                });\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ModelBehaviorError('Handoff function expected non empty input');\n            }\n            try {\n                // verify that it's valid input but we don't care about the result\n                const parsed = await parser(inputJsonString);\n                if (config.onHandoff) {\n                    await config.onHandoff(context, parsed);\n                }\n            }\n            catch (error) {\n                (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_2__.addErrorToCurrentSpan)({\n                    message: `Invalid JSON provided`,\n                    data: {},\n                });\n                if (!_logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dontLogToolData) {\n                    _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(`Invalid JSON when parsing: ${inputJsonString}. Error: ${error}`);\n                }\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ModelBehaviorError('Invalid JSON provided');\n            }\n        }\n        else {\n            await config.onHandoff?.(context);\n        }\n        return agent;\n    }\n    const handoff = new Handoff(agent, onInvokeHandoff);\n    if (config.inputType) {\n        const result = (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__.getSchemaAndParserFromInputType)(config.inputType, handoff.toolName);\n        handoff.inputJsonSchema = result.schema;\n        handoff.strictJsonSchema = true;\n        parser = result.parser;\n    }\n    if (config.toolNameOverride) {\n        handoff.toolName = config.toolNameOverride;\n    }\n    if (config.toolDescriptionOverride) {\n        handoff.toolDescription = config.toolDescriptionOverride;\n    }\n    if (config.inputFilter) {\n        handoff.inputFilter = config.inputFilter;\n    }\n    return handoff;\n}\n/**\n * Returns a handoff for the given agent. If the agent is already wrapped into a handoff,\n * it will be returned as is. Otherwise, a new handoff instance will be created.\n *\n * @template TContext The context of the handoff\n * @template TOutput The output type of the handoff\n */\nfunction getHandoff(agent) {\n    if (agent instanceof Handoff) {\n        return agent;\n    }\n    return handoff(agent);\n}\n//# sourceMappingURL=handoff.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/handoff.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/helpers/message.mjs":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/helpers/message.mjs ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assistant: () => (/* binding */ assistant),\n/* harmony export */   system: () => (/* binding */ system),\n/* harmony export */   user: () => (/* binding */ user)\n/* harmony export */ });\n/**\n * Creates a user message entry\n *\n * @param input The input message from the user\n * @param options Any additional options that will be directly passed to the model\n * @returns a message entry\n */\nfunction user(input, options) {\n    return {\n        type: 'message',\n        role: 'user',\n        content: typeof input === 'string'\n            ? [\n                {\n                    type: 'input_text',\n                    text: input,\n                },\n            ]\n            : input,\n        providerData: options,\n    };\n}\n/**\n * Creates a system message entry\n *\n * @param input The system prompt\n * @param options Any additional options that will be directly passed to the model\n * @returns a message entry\n */\nfunction system(input, options) {\n    return {\n        type: 'message',\n        role: 'system',\n        content: input,\n        providerData: options,\n    };\n}\n/**\n * Creates an assistant message entry for example for multi-shot prompting\n *\n * @param input The assistant response\n * @param options Any additional options that will be directly passed to the model\n * @returns a message entry\n */\nfunction assistant(content, options) {\n    return {\n        type: 'message',\n        role: 'assistant',\n        content: typeof content === 'string'\n            ? [\n                {\n                    type: 'output_text',\n                    text: content,\n                },\n            ]\n            : content,\n        status: 'completed',\n        providerData: options,\n    };\n}\n//# sourceMappingURL=message.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9oZWxwZXJzL21lc3NhZ2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9oZWxwZXJzL21lc3NhZ2UubWpzPzYzODQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVzIGEgdXNlciBtZXNzYWdlIGVudHJ5XG4gKlxuICogQHBhcmFtIGlucHV0IFRoZSBpbnB1dCBtZXNzYWdlIGZyb20gdGhlIHVzZXJcbiAqIEBwYXJhbSBvcHRpb25zIEFueSBhZGRpdGlvbmFsIG9wdGlvbnMgdGhhdCB3aWxsIGJlIGRpcmVjdGx5IHBhc3NlZCB0byB0aGUgbW9kZWxcbiAqIEByZXR1cm5zIGEgbWVzc2FnZSBlbnRyeVxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlcihpbnB1dCwgb3B0aW9ucykge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdtZXNzYWdlJyxcbiAgICAgICAgcm9sZTogJ3VzZXInLFxuICAgICAgICBjb250ZW50OiB0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnXG4gICAgICAgICAgICA/IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdpbnB1dF90ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogaW5wdXQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIDogaW5wdXQsXG4gICAgICAgIHByb3ZpZGVyRGF0YTogb3B0aW9ucyxcbiAgICB9O1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgc3lzdGVtIG1lc3NhZ2UgZW50cnlcbiAqXG4gKiBAcGFyYW0gaW5wdXQgVGhlIHN5c3RlbSBwcm9tcHRcbiAqIEBwYXJhbSBvcHRpb25zIEFueSBhZGRpdGlvbmFsIG9wdGlvbnMgdGhhdCB3aWxsIGJlIGRpcmVjdGx5IHBhc3NlZCB0byB0aGUgbW9kZWxcbiAqIEByZXR1cm5zIGEgbWVzc2FnZSBlbnRyeVxuICovXG5leHBvcnQgZnVuY3Rpb24gc3lzdGVtKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ21lc3NhZ2UnLFxuICAgICAgICByb2xlOiAnc3lzdGVtJyxcbiAgICAgICAgY29udGVudDogaW5wdXQsXG4gICAgICAgIHByb3ZpZGVyRGF0YTogb3B0aW9ucyxcbiAgICB9O1xufVxuLyoqXG4gKiBDcmVhdGVzIGFuIGFzc2lzdGFudCBtZXNzYWdlIGVudHJ5IGZvciBleGFtcGxlIGZvciBtdWx0aS1zaG90IHByb21wdGluZ1xuICpcbiAqIEBwYXJhbSBpbnB1dCBUaGUgYXNzaXN0YW50IHJlc3BvbnNlXG4gKiBAcGFyYW0gb3B0aW9ucyBBbnkgYWRkaXRpb25hbCBvcHRpb25zIHRoYXQgd2lsbCBiZSBkaXJlY3RseSBwYXNzZWQgdG8gdGhlIG1vZGVsXG4gKiBAcmV0dXJucyBhIG1lc3NhZ2UgZW50cnlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2lzdGFudChjb250ZW50LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ21lc3NhZ2UnLFxuICAgICAgICByb2xlOiAnYXNzaXN0YW50JyxcbiAgICAgICAgY29udGVudDogdHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnXG4gICAgICAgICAgICA/IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdvdXRwdXRfdGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6IGNvbnRlbnQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIDogY29udGVudCxcbiAgICAgICAgc3RhdHVzOiAnY29tcGxldGVkJyxcbiAgICAgICAgcHJvdmlkZXJEYXRhOiBvcHRpb25zLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/helpers/message.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/index.mjs":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/index.mjs ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* reexport safe */ _agent_mjs__WEBPACK_IMPORTED_MODULE_5__.Agent),\n/* harmony export */   AgentHooks: () => (/* reexport safe */ _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_12__.AgentHooks),\n/* harmony export */   AgentsError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_6__.AgentsError),\n/* harmony export */   BatchTraceProcessor: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.BatchTraceProcessor),\n/* harmony export */   ConsoleSpanExporter: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.ConsoleSpanExporter),\n/* harmony export */   GuardrailExecutionError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_6__.GuardrailExecutionError),\n/* harmony export */   Handoff: () => (/* reexport safe */ _handoff_mjs__WEBPACK_IMPORTED_MODULE_9__.Handoff),\n/* harmony export */   InputGuardrailTripwireTriggered: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_6__.InputGuardrailTripwireTriggered),\n/* harmony export */   MCPServerStdio: () => (/* reexport safe */ _mcp_mjs__WEBPACK_IMPORTED_MODULE_13__.MCPServerStdio),\n/* harmony export */   MaxTurnsExceededError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_6__.MaxTurnsExceededError),\n/* harmony export */   ModelBehaviorError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_6__.ModelBehaviorError),\n/* harmony export */   NoopSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.NoopSpan),\n/* harmony export */   NoopTrace: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.NoopTrace),\n/* harmony export */   OutputGuardrailTripwireTriggered: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_6__.OutputGuardrailTripwireTriggered),\n/* harmony export */   RunAgentUpdatedStreamEvent: () => (/* reexport safe */ _events_mjs__WEBPACK_IMPORTED_MODULE_7__.RunAgentUpdatedStreamEvent),\n/* harmony export */   RunContext: () => (/* reexport safe */ _runContext_mjs__WEBPACK_IMPORTED_MODULE_17__.RunContext),\n/* harmony export */   RunHandoffCallItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_11__.RunHandoffCallItem),\n/* harmony export */   RunItemStreamEvent: () => (/* reexport safe */ _events_mjs__WEBPACK_IMPORTED_MODULE_7__.RunItemStreamEvent),\n/* harmony export */   RunMessageOutputItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_11__.RunMessageOutputItem),\n/* harmony export */   RunRawModelStreamEvent: () => (/* reexport safe */ _events_mjs__WEBPACK_IMPORTED_MODULE_7__.RunRawModelStreamEvent),\n/* harmony export */   RunReasoningItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_11__.RunReasoningItem),\n/* harmony export */   RunResult: () => (/* reexport safe */ _result_mjs__WEBPACK_IMPORTED_MODULE_15__.RunResult),\n/* harmony export */   RunState: () => (/* reexport safe */ _runState_mjs__WEBPACK_IMPORTED_MODULE_18__.RunState),\n/* harmony export */   RunToolApprovalItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_11__.RunToolApprovalItem),\n/* harmony export */   RunToolCallItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_11__.RunToolCallItem),\n/* harmony export */   RunToolCallOutputItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_11__.RunToolCallOutputItem),\n/* harmony export */   Runner: () => (/* reexport safe */ _run_mjs__WEBPACK_IMPORTED_MODULE_16__.Runner),\n/* harmony export */   RuntimeEventEmitter: () => (/* reexport safe */ _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_4__.RuntimeEventEmitter),\n/* harmony export */   Span: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.Span),\n/* harmony export */   StreamedRunResult: () => (/* reexport safe */ _result_mjs__WEBPACK_IMPORTED_MODULE_15__.StreamedRunResult),\n/* harmony export */   SystemError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_6__.SystemError),\n/* harmony export */   ToolCallError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_6__.ToolCallError),\n/* harmony export */   Trace: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.Trace),\n/* harmony export */   TraceProvider: () => (/* reexport safe */ _tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_3__.TraceProvider),\n/* harmony export */   Usage: () => (/* reexport safe */ _usage_mjs__WEBPACK_IMPORTED_MODULE_20__.Usage),\n/* harmony export */   UserError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_6__.UserError),\n/* harmony export */   addTraceProcessor: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.addTraceProcessor),\n/* harmony export */   assistant: () => (/* reexport safe */ _helpers_message_mjs__WEBPACK_IMPORTED_MODULE_10__.assistant),\n/* harmony export */   computerTool: () => (/* reexport safe */ _tool_mjs__WEBPACK_IMPORTED_MODULE_19__.computerTool),\n/* harmony export */   createAgentSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createAgentSpan),\n/* harmony export */   createCustomSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createCustomSpan),\n/* harmony export */   createFunctionSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createFunctionSpan),\n/* harmony export */   createGenerationSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createGenerationSpan),\n/* harmony export */   createGuardrailSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createGuardrailSpan),\n/* harmony export */   createHandoffSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createHandoffSpan),\n/* harmony export */   createMCPListToolsSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createMCPListToolsSpan),\n/* harmony export */   createResponseSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createResponseSpan),\n/* harmony export */   createSpeechGroupSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createSpeechGroupSpan),\n/* harmony export */   createSpeechSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createSpeechSpan),\n/* harmony export */   createTranscriptionSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createTranscriptionSpan),\n/* harmony export */   defineOutputGuardrail: () => (/* reexport safe */ _guardrail_mjs__WEBPACK_IMPORTED_MODULE_8__.defineOutputGuardrail),\n/* harmony export */   extractAllTextOutput: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_11__.extractAllTextOutput),\n/* harmony export */   generateGroupId: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.generateGroupId),\n/* harmony export */   generateSpanId: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.generateSpanId),\n/* harmony export */   generateTraceId: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.generateTraceId),\n/* harmony export */   getAllMcpTools: () => (/* reexport safe */ _mcp_mjs__WEBPACK_IMPORTED_MODULE_13__.getAllMcpTools),\n/* harmony export */   getCurrentSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.getCurrentSpan),\n/* harmony export */   getCurrentTrace: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.getCurrentTrace),\n/* harmony export */   getGlobalTraceProvider: () => (/* reexport safe */ _tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_3__.getGlobalTraceProvider),\n/* harmony export */   getHandoff: () => (/* reexport safe */ _handoff_mjs__WEBPACK_IMPORTED_MODULE_9__.getHandoff),\n/* harmony export */   getLogger: () => (/* reexport safe */ _logger_mjs__WEBPACK_IMPORTED_MODULE_0__.getLogger),\n/* harmony export */   getOrCreateTrace: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.getOrCreateTrace),\n/* harmony export */   getTransferMessage: () => (/* reexport safe */ _handoff_mjs__WEBPACK_IMPORTED_MODULE_9__.getTransferMessage),\n/* harmony export */   handoff: () => (/* reexport safe */ _handoff_mjs__WEBPACK_IMPORTED_MODULE_9__.handoff),\n/* harmony export */   invalidateServerToolsCache: () => (/* reexport safe */ _mcp_mjs__WEBPACK_IMPORTED_MODULE_13__.invalidateServerToolsCache),\n/* harmony export */   protocol: () => (/* reexport module object */ _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_21__),\n/* harmony export */   resetCurrentSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.resetCurrentSpan),\n/* harmony export */   run: () => (/* reexport safe */ _run_mjs__WEBPACK_IMPORTED_MODULE_16__.run),\n/* harmony export */   setCurrentSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.setCurrentSpan),\n/* harmony export */   setDefaultModelProvider: () => (/* reexport safe */ _providers_mjs__WEBPACK_IMPORTED_MODULE_14__.setDefaultModelProvider),\n/* harmony export */   setTraceProcessors: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.setTraceProcessors),\n/* harmony export */   setTracingDisabled: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.setTracingDisabled),\n/* harmony export */   system: () => (/* reexport safe */ _helpers_message_mjs__WEBPACK_IMPORTED_MODULE_10__.system),\n/* harmony export */   tool: () => (/* reexport safe */ _tool_mjs__WEBPACK_IMPORTED_MODULE_19__.tool),\n/* harmony export */   user: () => (/* reexport safe */ _helpers_message_mjs__WEBPACK_IMPORTED_MODULE_10__.user),\n/* harmony export */   withAgentSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withAgentSpan),\n/* harmony export */   withCustomSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withCustomSpan),\n/* harmony export */   withFunctionSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withFunctionSpan),\n/* harmony export */   withGenerationSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withGenerationSpan),\n/* harmony export */   withGuardrailSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withGuardrailSpan),\n/* harmony export */   withHandoffSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withHandoffSpan),\n/* harmony export */   withMCPListToolsSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withMCPListToolsSpan),\n/* harmony export */   withResponseSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withResponseSpan),\n/* harmony export */   withSpeechGroupSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withSpeechGroupSpan),\n/* harmony export */   withSpeechSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withSpeechSpan),\n/* harmony export */   withTrace: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withTrace),\n/* harmony export */   withTranscriptionSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.withTranscriptionSpan)\n/* harmony export */ });\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracing/index.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/index.mjs\");\n/* harmony import */ var _tracing_processor_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tracing/processor.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/processor.mjs\");\n/* harmony import */ var _tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tracing/provider.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/provider.mjs\");\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n/* harmony import */ var _agent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./agent.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/agent.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _events_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./events.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/events.mjs\");\n/* harmony import */ var _guardrail_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./guardrail.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/guardrail.mjs\");\n/* harmony import */ var _handoff_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./handoff.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/handoff.mjs\");\n/* harmony import */ var _helpers_message_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./helpers/message.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/helpers/message.mjs\");\n/* harmony import */ var _items_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./items.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/items.mjs\");\n/* harmony import */ var _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./lifecycle.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/lifecycle.mjs\");\n/* harmony import */ var _mcp_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./mcp.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/mcp.mjs\");\n/* harmony import */ var _providers_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./providers.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/providers.mjs\");\n/* harmony import */ var _result_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./result.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/result.mjs\");\n/* harmony import */ var _run_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./run.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/run.mjs\");\n/* harmony import */ var _runContext_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./runContext.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runContext.mjs\");\n/* harmony import */ var _runState_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./runState.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runState.mjs\");\n/* harmony import */ var _tool_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./tool.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tool.mjs\");\n/* harmony import */ var _usage_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./usage.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/usage.mjs\");\n/* harmony import */ var _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./types/protocol.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/types/protocol.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Add the default processor, which exports traces and spans to the backend in batches. You can\n * change the default behavior by either:\n * 1. calling addTraceProcessor, which adds additional processors, or\n * 2. calling setTraceProcessors, which sets the processors and discards the default one\n */\n(0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_1__.addTraceProcessor)((0,_tracing_processor_mjs__WEBPACK_IMPORTED_MODULE_2__.defaultProcessor)());\nconst cleanup = async () => {\n    await (0,_tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_3__.getGlobalTraceProvider)().shutdown();\n};\nif (typeof process !== 'undefined' && typeof process.on === 'function') {\n    // handling Node.js process termination\n    // Handle normal termination\n    process.on('beforeExit', cleanup);\n    // Handle CTRL+C (SIGINT)\n    process.on('SIGINT', cleanup);\n    // Handle termination (SIGTERM)\n    process.on('SIGTERM', cleanup);\n    process.on('unhandledRejection', (reason, promise) => {\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error('Unhandled rejection', reason, promise);\n        cleanup();\n    });\n}\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFrQztBQUNzQjtBQUNHO0FBQ0s7QUFDQztBQUM1QjtBQUNxTDtBQUNuSDtBQUM5QztBQUN5QjtBQUNsQjtBQUM2RztBQUNoSTtBQUNKO0FBQytDO0FBQzlCO0FBQ0U7QUFDbkI7QUFDSztBQUNKO0FBQ087QUFDYjtBQUMyQztBQUMzQztBQUNhO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFpQixDQUFDLHdFQUFnQjtBQUNsQztBQUNBLFVBQVUsNkVBQXNCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBTTtBQUNkO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuYWlueXR3Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjJfd3NAOC4xOC4yX3pvZEAzLjI1LjUxL25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvaW5kZXgubWpzPzVkOTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlciBmcm9tIFwiLi9sb2dnZXIubWpzXCI7XG5pbXBvcnQgeyBhZGRUcmFjZVByb2Nlc3NvciB9IGZyb20gXCIuL3RyYWNpbmcvaW5kZXgubWpzXCI7XG5pbXBvcnQgeyBkZWZhdWx0UHJvY2Vzc29yIH0gZnJvbSBcIi4vdHJhY2luZy9wcm9jZXNzb3IubWpzXCI7XG5pbXBvcnQgeyBnZXRHbG9iYWxUcmFjZVByb3ZpZGVyIH0gZnJvbSBcIi4vdHJhY2luZy9wcm92aWRlci5tanNcIjtcbmV4cG9ydCB7IFJ1bnRpbWVFdmVudEVtaXR0ZXIgfSBmcm9tICdAb3BlbmFpL2FnZW50cy1jb3JlL19zaGltcyc7XG5leHBvcnQgeyBBZ2VudCwgfSBmcm9tIFwiLi9hZ2VudC5tanNcIjtcbmV4cG9ydCB7IEFnZW50c0Vycm9yLCBHdWFyZHJhaWxFeGVjdXRpb25FcnJvciwgSW5wdXRHdWFyZHJhaWxUcmlwd2lyZVRyaWdnZXJlZCwgTWF4VHVybnNFeGNlZWRlZEVycm9yLCBNb2RlbEJlaGF2aW9yRXJyb3IsIE91dHB1dEd1YXJkcmFpbFRyaXB3aXJlVHJpZ2dlcmVkLCBUb29sQ2FsbEVycm9yLCBVc2VyRXJyb3IsIFN5c3RlbUVycm9yLCB9IGZyb20gXCIuL2Vycm9ycy5tanNcIjtcbmV4cG9ydCB7IFJ1bkFnZW50VXBkYXRlZFN0cmVhbUV2ZW50LCBSdW5SYXdNb2RlbFN0cmVhbUV2ZW50LCBSdW5JdGVtU3RyZWFtRXZlbnQsIH0gZnJvbSBcIi4vZXZlbnRzLm1qc1wiO1xuZXhwb3J0IHsgZGVmaW5lT3V0cHV0R3VhcmRyYWlsLCB9IGZyb20gXCIuL2d1YXJkcmFpbC5tanNcIjtcbmV4cG9ydCB7IGdldEhhbmRvZmYsIGdldFRyYW5zZmVyTWVzc2FnZSwgSGFuZG9mZiwgaGFuZG9mZiwgfSBmcm9tIFwiLi9oYW5kb2ZmLm1qc1wiO1xuZXhwb3J0IHsgYXNzaXN0YW50LCBzeXN0ZW0sIHVzZXIgfSBmcm9tIFwiLi9oZWxwZXJzL21lc3NhZ2UubWpzXCI7XG5leHBvcnQgeyBleHRyYWN0QWxsVGV4dE91dHB1dCwgUnVuSGFuZG9mZkNhbGxJdGVtLCBSdW5NZXNzYWdlT3V0cHV0SXRlbSwgUnVuUmVhc29uaW5nSXRlbSwgUnVuVG9vbEFwcHJvdmFsSXRlbSwgUnVuVG9vbENhbGxJdGVtLCBSdW5Ub29sQ2FsbE91dHB1dEl0ZW0sIH0gZnJvbSBcIi4vaXRlbXMubWpzXCI7XG5leHBvcnQgeyBBZ2VudEhvb2tzIH0gZnJvbSBcIi4vbGlmZWN5Y2xlLm1qc1wiO1xuZXhwb3J0IHsgZ2V0TG9nZ2VyIH0gZnJvbSBcIi4vbG9nZ2VyLm1qc1wiO1xuZXhwb3J0IHsgZ2V0QWxsTWNwVG9vbHMsIGludmFsaWRhdGVTZXJ2ZXJUb29sc0NhY2hlLCBNQ1BTZXJ2ZXJTdGRpbywgfSBmcm9tIFwiLi9tY3AubWpzXCI7XG5leHBvcnQgeyBzZXREZWZhdWx0TW9kZWxQcm92aWRlciB9IGZyb20gXCIuL3Byb3ZpZGVycy5tanNcIjtcbmV4cG9ydCB7IFJ1blJlc3VsdCwgU3RyZWFtZWRSdW5SZXN1bHQgfSBmcm9tIFwiLi9yZXN1bHQubWpzXCI7XG5leHBvcnQgeyBydW4sIFJ1bm5lciwgfSBmcm9tIFwiLi9ydW4ubWpzXCI7XG5leHBvcnQgeyBSdW5Db250ZXh0IH0gZnJvbSBcIi4vcnVuQ29udGV4dC5tanNcIjtcbmV4cG9ydCB7IFJ1blN0YXRlIH0gZnJvbSBcIi4vcnVuU3RhdGUubWpzXCI7XG5leHBvcnQgeyBjb21wdXRlclRvb2wsIHRvb2wsIH0gZnJvbSBcIi4vdG9vbC5tanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3RyYWNpbmcvaW5kZXgubWpzXCI7XG5leHBvcnQgeyBnZXRHbG9iYWxUcmFjZVByb3ZpZGVyLCBUcmFjZVByb3ZpZGVyIH0gZnJvbSBcIi4vdHJhY2luZy9wcm92aWRlci5tanNcIjtcbmV4cG9ydCB7IFVzYWdlIH0gZnJvbSBcIi4vdXNhZ2UubWpzXCI7XG5leHBvcnQgKiBhcyBwcm90b2NvbCBmcm9tIFwiLi90eXBlcy9wcm90b2NvbC5tanNcIjtcbi8qKlxuICogQWRkIHRoZSBkZWZhdWx0IHByb2Nlc3Nvciwgd2hpY2ggZXhwb3J0cyB0cmFjZXMgYW5kIHNwYW5zIHRvIHRoZSBiYWNrZW5kIGluIGJhdGNoZXMuIFlvdSBjYW5cbiAqIGNoYW5nZSB0aGUgZGVmYXVsdCBiZWhhdmlvciBieSBlaXRoZXI6XG4gKiAxLiBjYWxsaW5nIGFkZFRyYWNlUHJvY2Vzc29yLCB3aGljaCBhZGRzIGFkZGl0aW9uYWwgcHJvY2Vzc29ycywgb3JcbiAqIDIuIGNhbGxpbmcgc2V0VHJhY2VQcm9jZXNzb3JzLCB3aGljaCBzZXRzIHRoZSBwcm9jZXNzb3JzIGFuZCBkaXNjYXJkcyB0aGUgZGVmYXVsdCBvbmVcbiAqL1xuYWRkVHJhY2VQcm9jZXNzb3IoZGVmYXVsdFByb2Nlc3NvcigpKTtcbmNvbnN0IGNsZWFudXAgPSBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgZ2V0R2xvYmFsVHJhY2VQcm92aWRlcigpLnNodXRkb3duKCk7XG59O1xuaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgcHJvY2Vzcy5vbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIGhhbmRsaW5nIE5vZGUuanMgcHJvY2VzcyB0ZXJtaW5hdGlvblxuICAgIC8vIEhhbmRsZSBub3JtYWwgdGVybWluYXRpb25cbiAgICBwcm9jZXNzLm9uKCdiZWZvcmVFeGl0JywgY2xlYW51cCk7XG4gICAgLy8gSGFuZGxlIENUUkwrQyAoU0lHSU5UKVxuICAgIHByb2Nlc3Mub24oJ1NJR0lOVCcsIGNsZWFudXApO1xuICAgIC8vIEhhbmRsZSB0ZXJtaW5hdGlvbiAoU0lHVEVSTSlcbiAgICBwcm9jZXNzLm9uKCdTSUdURVJNJywgY2xlYW51cCk7XG4gICAgcHJvY2Vzcy5vbigndW5oYW5kbGVkUmVqZWN0aW9uJywgKHJlYXNvbiwgcHJvbWlzZSkgPT4ge1xuICAgICAgICBsb2dnZXIuZXJyb3IoJ1VuaGFuZGxlZCByZWplY3Rpb24nLCByZWFzb24sIHByb21pc2UpO1xuICAgICAgICBjbGVhbnVwKCk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/items.mjs":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/items.mjs ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunHandoffCallItem: () => (/* binding */ RunHandoffCallItem),\n/* harmony export */   RunHandoffOutputItem: () => (/* binding */ RunHandoffOutputItem),\n/* harmony export */   RunItemBase: () => (/* binding */ RunItemBase),\n/* harmony export */   RunMessageOutputItem: () => (/* binding */ RunMessageOutputItem),\n/* harmony export */   RunReasoningItem: () => (/* binding */ RunReasoningItem),\n/* harmony export */   RunToolApprovalItem: () => (/* binding */ RunToolApprovalItem),\n/* harmony export */   RunToolCallItem: () => (/* binding */ RunToolCallItem),\n/* harmony export */   RunToolCallOutputItem: () => (/* binding */ RunToolCallOutputItem),\n/* harmony export */   extractAllTextOutput: () => (/* binding */ extractAllTextOutput)\n/* harmony export */ });\n/* harmony import */ var _utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/smartString.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/smartString.mjs\");\n\nclass RunItemBase {\n    type = 'base_item';\n    rawItem;\n    toJSON() {\n        return {\n            type: this.type,\n            rawItem: this.rawItem,\n        };\n    }\n}\nclass RunMessageOutputItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'message_output_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n    get content() {\n        let content = '';\n        for (const part of this.rawItem.content) {\n            if (part.type === 'output_text') {\n                content += part.text;\n            }\n        }\n        return content;\n    }\n}\nclass RunToolCallItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'tool_call_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\nclass RunToolCallOutputItem extends RunItemBase {\n    rawItem;\n    agent;\n    output;\n    type = 'tool_call_output_item';\n    constructor(rawItem, agent, output) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n        this.output = output;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n            output: (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_0__.toSmartString)(this.output),\n        };\n    }\n}\nclass RunReasoningItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'reasoning_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\nclass RunHandoffCallItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'handoff_call_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\nclass RunHandoffOutputItem extends RunItemBase {\n    rawItem;\n    sourceAgent;\n    targetAgent;\n    type = 'handoff_output_item';\n    constructor(rawItem, sourceAgent, targetAgent) {\n        super();\n        this.rawItem = rawItem;\n        this.sourceAgent = sourceAgent;\n        this.targetAgent = targetAgent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            sourceAgent: this.sourceAgent.toJSON(),\n            targetAgent: this.targetAgent.toJSON(),\n        };\n    }\n}\nclass RunToolApprovalItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'tool_approval_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\n/**\n * Extract all text output from a list of run items by concatenating the content of all\n * message output items.\n *\n * @param items - The list of run items to extract text from.\n * @returns A string of all the text output from the run items.\n */\nfunction extractAllTextOutput(items) {\n    return items\n        .filter((item) => item.type === 'message_output_item')\n        .map((item) => item.content)\n        .join('');\n}\n//# sourceMappingURL=items.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9pdGVtcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUF3RDtBQUNqRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUVBQWE7QUFDakM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpbnl0dy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC4yX3dzQDguMTguMl96b2RAMy4yNS41MS9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L2l0ZW1zLm1qcz9kY2IzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRvU21hcnRTdHJpbmcgfSBmcm9tIFwiLi91dGlscy9zbWFydFN0cmluZy5tanNcIjtcbmV4cG9ydCBjbGFzcyBSdW5JdGVtQmFzZSB7XG4gICAgdHlwZSA9ICdiYXNlX2l0ZW0nO1xuICAgIHJhd0l0ZW07XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogdGhpcy50eXBlLFxuICAgICAgICAgICAgcmF3SXRlbTogdGhpcy5yYXdJdGVtLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSdW5NZXNzYWdlT3V0cHV0SXRlbSBleHRlbmRzIFJ1bkl0ZW1CYXNlIHtcbiAgICByYXdJdGVtO1xuICAgIGFnZW50O1xuICAgIHR5cGUgPSAnbWVzc2FnZV9vdXRwdXRfaXRlbSc7XG4gICAgY29uc3RydWN0b3IocmF3SXRlbSwgYWdlbnQpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5yYXdJdGVtID0gcmF3SXRlbTtcbiAgICAgICAgdGhpcy5hZ2VudCA9IGFnZW50O1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdXBlci50b0pTT04oKSxcbiAgICAgICAgICAgIGFnZW50OiB0aGlzLmFnZW50LnRvSlNPTigpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBnZXQgY29udGVudCgpIHtcbiAgICAgICAgbGV0IGNvbnRlbnQgPSAnJztcbiAgICAgICAgZm9yIChjb25zdCBwYXJ0IG9mIHRoaXMucmF3SXRlbS5jb250ZW50KSB7XG4gICAgICAgICAgICBpZiAocGFydC50eXBlID09PSAnb3V0cHV0X3RleHQnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCArPSBwYXJ0LnRleHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJ1blRvb2xDYWxsSXRlbSBleHRlbmRzIFJ1bkl0ZW1CYXNlIHtcbiAgICByYXdJdGVtO1xuICAgIGFnZW50O1xuICAgIHR5cGUgPSAndG9vbF9jYWxsX2l0ZW0nO1xuICAgIGNvbnN0cnVjdG9yKHJhd0l0ZW0sIGFnZW50KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMucmF3SXRlbSA9IHJhd0l0ZW07XG4gICAgICAgIHRoaXMuYWdlbnQgPSBhZ2VudDtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uc3VwZXIudG9KU09OKCksXG4gICAgICAgICAgICBhZ2VudDogdGhpcy5hZ2VudC50b0pTT04oKSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUnVuVG9vbENhbGxPdXRwdXRJdGVtIGV4dGVuZHMgUnVuSXRlbUJhc2Uge1xuICAgIHJhd0l0ZW07XG4gICAgYWdlbnQ7XG4gICAgb3V0cHV0O1xuICAgIHR5cGUgPSAndG9vbF9jYWxsX291dHB1dF9pdGVtJztcbiAgICBjb25zdHJ1Y3RvcihyYXdJdGVtLCBhZ2VudCwgb3V0cHV0KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMucmF3SXRlbSA9IHJhd0l0ZW07XG4gICAgICAgIHRoaXMuYWdlbnQgPSBhZ2VudDtcbiAgICAgICAgdGhpcy5vdXRwdXQgPSBvdXRwdXQ7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN1cGVyLnRvSlNPTigpLFxuICAgICAgICAgICAgYWdlbnQ6IHRoaXMuYWdlbnQudG9KU09OKCksXG4gICAgICAgICAgICBvdXRwdXQ6IHRvU21hcnRTdHJpbmcodGhpcy5vdXRwdXQpLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSdW5SZWFzb25pbmdJdGVtIGV4dGVuZHMgUnVuSXRlbUJhc2Uge1xuICAgIHJhd0l0ZW07XG4gICAgYWdlbnQ7XG4gICAgdHlwZSA9ICdyZWFzb25pbmdfaXRlbSc7XG4gICAgY29uc3RydWN0b3IocmF3SXRlbSwgYWdlbnQpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5yYXdJdGVtID0gcmF3SXRlbTtcbiAgICAgICAgdGhpcy5hZ2VudCA9IGFnZW50O1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdXBlci50b0pTT04oKSxcbiAgICAgICAgICAgIGFnZW50OiB0aGlzLmFnZW50LnRvSlNPTigpLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSdW5IYW5kb2ZmQ2FsbEl0ZW0gZXh0ZW5kcyBSdW5JdGVtQmFzZSB7XG4gICAgcmF3SXRlbTtcbiAgICBhZ2VudDtcbiAgICB0eXBlID0gJ2hhbmRvZmZfY2FsbF9pdGVtJztcbiAgICBjb25zdHJ1Y3RvcihyYXdJdGVtLCBhZ2VudCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnJhd0l0ZW0gPSByYXdJdGVtO1xuICAgICAgICB0aGlzLmFnZW50ID0gYWdlbnQ7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN1cGVyLnRvSlNPTigpLFxuICAgICAgICAgICAgYWdlbnQ6IHRoaXMuYWdlbnQudG9KU09OKCksXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJ1bkhhbmRvZmZPdXRwdXRJdGVtIGV4dGVuZHMgUnVuSXRlbUJhc2Uge1xuICAgIHJhd0l0ZW07XG4gICAgc291cmNlQWdlbnQ7XG4gICAgdGFyZ2V0QWdlbnQ7XG4gICAgdHlwZSA9ICdoYW5kb2ZmX291dHB1dF9pdGVtJztcbiAgICBjb25zdHJ1Y3RvcihyYXdJdGVtLCBzb3VyY2VBZ2VudCwgdGFyZ2V0QWdlbnQpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5yYXdJdGVtID0gcmF3SXRlbTtcbiAgICAgICAgdGhpcy5zb3VyY2VBZ2VudCA9IHNvdXJjZUFnZW50O1xuICAgICAgICB0aGlzLnRhcmdldEFnZW50ID0gdGFyZ2V0QWdlbnQ7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN1cGVyLnRvSlNPTigpLFxuICAgICAgICAgICAgc291cmNlQWdlbnQ6IHRoaXMuc291cmNlQWdlbnQudG9KU09OKCksXG4gICAgICAgICAgICB0YXJnZXRBZ2VudDogdGhpcy50YXJnZXRBZ2VudC50b0pTT04oKSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUnVuVG9vbEFwcHJvdmFsSXRlbSBleHRlbmRzIFJ1bkl0ZW1CYXNlIHtcbiAgICByYXdJdGVtO1xuICAgIGFnZW50O1xuICAgIHR5cGUgPSAndG9vbF9hcHByb3ZhbF9pdGVtJztcbiAgICBjb25zdHJ1Y3RvcihyYXdJdGVtLCBhZ2VudCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnJhd0l0ZW0gPSByYXdJdGVtO1xuICAgICAgICB0aGlzLmFnZW50ID0gYWdlbnQ7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN1cGVyLnRvSlNPTigpLFxuICAgICAgICAgICAgYWdlbnQ6IHRoaXMuYWdlbnQudG9KU09OKCksXG4gICAgICAgIH07XG4gICAgfVxufVxuLyoqXG4gKiBFeHRyYWN0IGFsbCB0ZXh0IG91dHB1dCBmcm9tIGEgbGlzdCBvZiBydW4gaXRlbXMgYnkgY29uY2F0ZW5hdGluZyB0aGUgY29udGVudCBvZiBhbGxcbiAqIG1lc3NhZ2Ugb3V0cHV0IGl0ZW1zLlxuICpcbiAqIEBwYXJhbSBpdGVtcyAtIFRoZSBsaXN0IG9mIHJ1biBpdGVtcyB0byBleHRyYWN0IHRleHQgZnJvbS5cbiAqIEByZXR1cm5zIEEgc3RyaW5nIG9mIGFsbCB0aGUgdGV4dCBvdXRwdXQgZnJvbSB0aGUgcnVuIGl0ZW1zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdEFsbFRleHRPdXRwdXQoaXRlbXMpIHtcbiAgICByZXR1cm4gaXRlbXNcbiAgICAgICAgLmZpbHRlcigoaXRlbSkgPT4gaXRlbS50eXBlID09PSAnbWVzc2FnZV9vdXRwdXRfaXRlbScpXG4gICAgICAgIC5tYXAoKGl0ZW0pID0+IGl0ZW0uY29udGVudClcbiAgICAgICAgLmpvaW4oJycpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXRlbXMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/items.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/lifecycle.mjs":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/lifecycle.mjs ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentHooks: () => (/* binding */ AgentHooks),\n/* harmony export */   EventEmitterDelegate: () => (/* binding */ EventEmitterDelegate),\n/* harmony export */   RunHooks: () => (/* binding */ RunHooks)\n/* harmony export */ });\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n\nclass EventEmitterDelegate {\n    on(type, listener) {\n        this.eventEmitter.on(type, listener);\n        return this.eventEmitter;\n    }\n    off(type, listener) {\n        this.eventEmitter.off(type, listener);\n        return this.eventEmitter;\n    }\n    emit(type, ...args) {\n        return this.eventEmitter.emit(type, ...args);\n    }\n    once(type, listener) {\n        this.eventEmitter.once(type, listener);\n        return this.eventEmitter;\n    }\n}\n/**\n * Event emitter that every Agent instance inherits from and that emits events for the lifecycle\n * of the agent.\n */\nclass AgentHooks extends EventEmitterDelegate {\n    eventEmitter = new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.RuntimeEventEmitter();\n}\n/**\n * Event emitter that every Runner instance inherits from and that emits events for the lifecycle\n * of the overall run.\n */\nclass RunHooks extends EventEmitterDelegate {\n    eventEmitter = new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.RuntimeEventEmitter();\n}\n//# sourceMappingURL=lifecycle.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9saWZlY3ljbGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0U7QUFDM0Q7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCx1QkFBdUIsMEVBQW1CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHVCQUF1QiwwRUFBbUI7QUFDMUM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9saWZlY3ljbGUubWpzPzNlOTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUnVudGltZUV2ZW50RW1pdHRlciwgfSBmcm9tICdAb3BlbmFpL2FnZW50cy1jb3JlL19zaGltcyc7XG5leHBvcnQgY2xhc3MgRXZlbnRFbWl0dGVyRGVsZWdhdGUge1xuICAgIG9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuZXZlbnRFbWl0dGVyLm9uKHR5cGUsIGxpc3RlbmVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXZlbnRFbWl0dGVyO1xuICAgIH1cbiAgICBvZmYodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIub2ZmKHR5cGUsIGxpc3RlbmVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXZlbnRFbWl0dGVyO1xuICAgIH1cbiAgICBlbWl0KHR5cGUsIC4uLmFyZ3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXZlbnRFbWl0dGVyLmVtaXQodHlwZSwgLi4uYXJncyk7XG4gICAgfVxuICAgIG9uY2UodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIub25jZSh0eXBlLCBsaXN0ZW5lcik7XG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50RW1pdHRlcjtcbiAgICB9XG59XG4vKipcbiAqIEV2ZW50IGVtaXR0ZXIgdGhhdCBldmVyeSBBZ2VudCBpbnN0YW5jZSBpbmhlcml0cyBmcm9tIGFuZCB0aGF0IGVtaXRzIGV2ZW50cyBmb3IgdGhlIGxpZmVjeWNsZVxuICogb2YgdGhlIGFnZW50LlxuICovXG5leHBvcnQgY2xhc3MgQWdlbnRIb29rcyBleHRlbmRzIEV2ZW50RW1pdHRlckRlbGVnYXRlIHtcbiAgICBldmVudEVtaXR0ZXIgPSBuZXcgUnVudGltZUV2ZW50RW1pdHRlcigpO1xufVxuLyoqXG4gKiBFdmVudCBlbWl0dGVyIHRoYXQgZXZlcnkgUnVubmVyIGluc3RhbmNlIGluaGVyaXRzIGZyb20gYW5kIHRoYXQgZW1pdHMgZXZlbnRzIGZvciB0aGUgbGlmZWN5Y2xlXG4gKiBvZiB0aGUgb3ZlcmFsbCBydW4uXG4gKi9cbmV4cG9ydCBjbGFzcyBSdW5Ib29rcyBleHRlbmRzIEV2ZW50RW1pdHRlckRlbGVnYXRlIHtcbiAgICBldmVudEVtaXR0ZXIgPSBuZXcgUnVudGltZUV2ZW50RW1pdHRlcigpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlmZWN5Y2xlLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/lifecycle.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getLogger: () => (/* binding */ getLogger),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/.pnpm/debug@4.4.1/node_modules/debug/src/index.js\");\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/config.mjs\");\n\n\n/**\n * By default we don't log LLM inputs/outputs, to prevent exposing sensitive data. Set this flag\n * to enable logging them.\n */\nconst dontLogModelData = _config_mjs__WEBPACK_IMPORTED_MODULE_1__.logging.dontLogModelData;\n/**\n * By default we don't log tool inputs/outputs, to prevent exposing sensitive data. Set this flag\n * to enable logging them.\n */\nconst dontLogToolData = _config_mjs__WEBPACK_IMPORTED_MODULE_1__.logging.dontLogToolData;\n/**\n * Get a logger for a given package.\n *\n * @param namespace - the namespace to use for the logger.\n * @returns A logger object with `debug` and `error` methods.\n */\nfunction getLogger(namespace = 'openai-agents') {\n    return {\n        namespace,\n        debug: debug__WEBPACK_IMPORTED_MODULE_0__(namespace),\n        error: console.error,\n        warn: console.warn,\n        dontLogModelData,\n        dontLogToolData,\n    };\n}\nconst logger = getLogger('openai-agents:core');\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (logger);\n//# sourceMappingURL=logger.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9sb2dnZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBCO0FBQ2E7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0RBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0RBQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsZUFBZSxrQ0FBSztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlFQUFlLE1BQU0sRUFBQztBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9sb2dnZXIubWpzPzEwYTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlYnVnIGZyb20gJ2RlYnVnJztcbmltcG9ydCB7IGxvZ2dpbmcgfSBmcm9tIFwiLi9jb25maWcubWpzXCI7XG4vKipcbiAqIEJ5IGRlZmF1bHQgd2UgZG9uJ3QgbG9nIExMTSBpbnB1dHMvb3V0cHV0cywgdG8gcHJldmVudCBleHBvc2luZyBzZW5zaXRpdmUgZGF0YS4gU2V0IHRoaXMgZmxhZ1xuICogdG8gZW5hYmxlIGxvZ2dpbmcgdGhlbS5cbiAqL1xuY29uc3QgZG9udExvZ01vZGVsRGF0YSA9IGxvZ2dpbmcuZG9udExvZ01vZGVsRGF0YTtcbi8qKlxuICogQnkgZGVmYXVsdCB3ZSBkb24ndCBsb2cgdG9vbCBpbnB1dHMvb3V0cHV0cywgdG8gcHJldmVudCBleHBvc2luZyBzZW5zaXRpdmUgZGF0YS4gU2V0IHRoaXMgZmxhZ1xuICogdG8gZW5hYmxlIGxvZ2dpbmcgdGhlbS5cbiAqL1xuY29uc3QgZG9udExvZ1Rvb2xEYXRhID0gbG9nZ2luZy5kb250TG9nVG9vbERhdGE7XG4vKipcbiAqIEdldCBhIGxvZ2dlciBmb3IgYSBnaXZlbiBwYWNrYWdlLlxuICpcbiAqIEBwYXJhbSBuYW1lc3BhY2UgLSB0aGUgbmFtZXNwYWNlIHRvIHVzZSBmb3IgdGhlIGxvZ2dlci5cbiAqIEByZXR1cm5zIEEgbG9nZ2VyIG9iamVjdCB3aXRoIGBkZWJ1Z2AgYW5kIGBlcnJvcmAgbWV0aG9kcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldExvZ2dlcihuYW1lc3BhY2UgPSAnb3BlbmFpLWFnZW50cycpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lc3BhY2UsXG4gICAgICAgIGRlYnVnOiBkZWJ1ZyhuYW1lc3BhY2UpLFxuICAgICAgICBlcnJvcjogY29uc29sZS5lcnJvcixcbiAgICAgICAgd2FybjogY29uc29sZS53YXJuLFxuICAgICAgICBkb250TG9nTW9kZWxEYXRhLFxuICAgICAgICBkb250TG9nVG9vbERhdGEsXG4gICAgfTtcbn1cbmV4cG9ydCBjb25zdCBsb2dnZXIgPSBnZXRMb2dnZXIoJ29wZW5haS1hZ2VudHM6Y29yZScpO1xuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2VyLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/mcp.mjs":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/mcp.mjs ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseMCPServerStdio: () => (/* binding */ BaseMCPServerStdio),\n/* harmony export */   DEFAULT_STDIO_MCP_CLIENT_LOGGER_NAME: () => (/* binding */ DEFAULT_STDIO_MCP_CLIENT_LOGGER_NAME),\n/* harmony export */   MCPServerStdio: () => (/* binding */ MCPServerStdio),\n/* harmony export */   MCPTool: () => (/* binding */ MCPTool),\n/* harmony export */   getAllMcpFunctionTools: () => (/* binding */ getAllMcpFunctionTools),\n/* harmony export */   getAllMcpTools: () => (/* binding */ getAllMcpTools),\n/* harmony export */   invalidateServerToolsCache: () => (/* binding */ invalidateServerToolsCache),\n/* harmony export */   mcpToFunctionTool: () => (/* binding */ mcpToFunctionTool)\n/* harmony export */ });\n/* harmony import */ var _tool_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tool.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tool.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n/* harmony import */ var _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tracing/index.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/index.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/.pnpm/debug@4.4.1/node_modules/debug/src/index.js\");\n/* harmony import */ var _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @openai/zod/v3 */ \"(ssr)/./node_modules/.pnpm/zod@3.25.51/node_modules/zod/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst DEFAULT_STDIO_MCP_CLIENT_LOGGER_NAME = 'openai-agents:stdio-mcp-client';\nclass BaseMCPServerStdio {\n    cacheToolsList;\n    _cachedTools = undefined;\n    logger;\n    constructor(options) {\n        this.logger =\n            options.logger ?? (0,_logger_mjs__WEBPACK_IMPORTED_MODULE_4__.getLogger)(DEFAULT_STDIO_MCP_CLIENT_LOGGER_NAME);\n        this.cacheToolsList = options.cacheToolsList ?? true;\n    }\n    /**\n     * Logs a debug message when debug logging is enabled.\n     * @param buildMessage A function that returns the message to log.\n     */\n    debugLog(buildMessage) {\n        if (debug__WEBPACK_IMPORTED_MODULE_5__.enabled(this.logger.namespace)) {\n            // only when this is true, the function to build the string is called\n            this.logger.debug(buildMessage());\n        }\n    }\n}\n/**\n * Minimum MCP tool data definition.\n * This type definition does not intend to cover all possible properties.\n * It supports the properties that are used in this SDK.\n */\nconst MCPTool = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.object({\n    name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.string(),\n    description: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.string().optional(),\n    inputSchema: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.literal('object'),\n        properties: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.any()),\n        required: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.string()),\n        additionalProperties: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.z.boolean(),\n    }),\n});\n/**\n * Public interface of an MCP server that provides tools.\n * You can use this class to pass MCP server settings to your agent.\n */\nclass MCPServerStdio extends BaseMCPServerStdio {\n    underlying;\n    constructor(options) {\n        super(options);\n        this.underlying = new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_2__.MCPServerStdio(options);\n    }\n    get name() {\n        return this.underlying.name;\n    }\n    connect() {\n        return this.underlying.connect();\n    }\n    close() {\n        return this.underlying.close();\n    }\n    async listTools() {\n        if (this.cacheToolsList && this._cachedTools) {\n            return this._cachedTools;\n        }\n        const tools = await this.underlying.listTools();\n        if (this.cacheToolsList) {\n            this._cachedTools = tools;\n        }\n        return tools;\n    }\n    callTool(toolName, args) {\n        return this.underlying.callTool(toolName, args);\n    }\n}\n/**\n * Fetches and flattens all tools from multiple MCP servers.\n * Logs and skips any servers that fail to respond.\n */\nasync function getAllMcpFunctionTools(mcpServers, convertSchemasToStrict = false) {\n    const allTools = [];\n    const toolNames = new Set();\n    for (const server of mcpServers) {\n        const serverTools = await getFunctionToolsFromServer(server, convertSchemasToStrict);\n        const serverToolNames = new Set(serverTools.map((t) => t.name));\n        const intersection = [...serverToolNames].filter((n) => toolNames.has(n));\n        if (intersection.length > 0) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_1__.UserError(`Duplicate tool names found across MCP servers: ${intersection.join(', ')}`);\n        }\n        for (const t of serverTools) {\n            toolNames.add(t.name);\n            allTools.push(t);\n        }\n    }\n    return allTools;\n}\nconst _cachedTools = {};\n/**\n * Remove cached tools for the given server so the next lookup fetches fresh data.\n *\n * @param serverName - Name of the MCP server whose cache should be cleared.\n */\nfunction invalidateServerToolsCache(serverName) {\n    delete _cachedTools[serverName];\n}\n/**\n * Fetches all function tools from a single MCP server.\n */\nasync function getFunctionToolsFromServer(server, convertSchemasToStrict) {\n    if (server.cacheToolsList && _cachedTools[server.name]) {\n        return _cachedTools[server.name];\n    }\n    return (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_3__.withMCPListToolsSpan)(async (span) => {\n        const mcpTools = await server.listTools();\n        span.spanData.result = mcpTools.map((t) => t.name);\n        const tools = mcpTools.map((t) => mcpToFunctionTool(t, server, convertSchemasToStrict));\n        if (server.cacheToolsList) {\n            _cachedTools[server.name] = tools;\n        }\n        return tools;\n    }, { data: { server: server.name } });\n}\n/**\n * Returns all MCP tools from the provided servers, using the function tool conversion.\n */\nasync function getAllMcpTools(mcpServers, convertSchemasToStrict = false) {\n    return getAllMcpFunctionTools(mcpServers, convertSchemasToStrict);\n}\n/**\n * Converts an MCP tool definition to a function tool for the Agents SDK.\n */\nfunction mcpToFunctionTool(mcpTool, server, convertSchemasToStrict) {\n    async function invoke(input, _context) {\n        let args = {};\n        if (typeof input === 'string' && input) {\n            args = JSON.parse(input);\n        }\n        else if (typeof input === 'object' && input != null) {\n            args = input;\n        }\n        const currentSpan = (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_3__.getCurrentSpan)();\n        if (currentSpan) {\n            currentSpan.spanData['mcp_data'] = { server: server.name };\n        }\n        const content = await server.callTool(mcpTool.name, args);\n        return content.length === 1 ? content[0] : content;\n    }\n    const schema = {\n        type: mcpTool.inputSchema?.type ?? 'object',\n        properties: mcpTool.inputSchema?.properties ?? {},\n        required: mcpTool.inputSchema?.required ?? [],\n        additionalProperties: mcpTool.inputSchema?.additionalProperties ?? false,\n    };\n    if (convertSchemasToStrict || schema.additionalProperties === true) {\n        try {\n            const strictSchema = ensureStrictJsonSchema(schema);\n            return (0,_tool_mjs__WEBPACK_IMPORTED_MODULE_0__.tool)({\n                name: mcpTool.name,\n                description: mcpTool.description || '',\n                parameters: strictSchema,\n                strict: true,\n                execute: invoke,\n            });\n        }\n        catch (e) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_4__.logger.warn(`Error converting MCP schema to strict mode: ${e}`);\n        }\n    }\n    const nonStrictSchema = {\n        ...schema,\n        additionalProperties: true,\n    };\n    return (0,_tool_mjs__WEBPACK_IMPORTED_MODULE_0__.tool)({\n        name: mcpTool.name,\n        description: mcpTool.description || '',\n        parameters: nonStrictSchema,\n        strict: false,\n        execute: invoke,\n    });\n}\n/**\n * Ensures the given JSON schema is strict (no additional properties, required fields set).\n */\nfunction ensureStrictJsonSchema(schema) {\n    const out = {\n        ...schema,\n        additionalProperties: false,\n    };\n    if (!out.required)\n        out.required = [];\n    return out;\n}\n//# sourceMappingURL=mcp.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/mcp.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/providers.mjs":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/providers.mjs ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultModelProvider: () => (/* binding */ getDefaultModelProvider),\n/* harmony export */   setDefaultModelProvider: () => (/* binding */ setDefaultModelProvider)\n/* harmony export */ });\nlet DEFAULT_PROVIDER;\n/**\n * Set the model provider used when no explicit provider is supplied.\n *\n * @param provider - The provider to use by default.\n */\nfunction setDefaultModelProvider(provider) {\n    DEFAULT_PROVIDER = provider;\n}\n/**\n * Returns the default model provider.\n *\n * @returns The default model provider.\n */\nfunction getDefaultModelProvider() {\n    if (typeof DEFAULT_PROVIDER === 'undefined') {\n        throw new Error('No default model provider set. Make sure to set a provider using setDefaultModelProvider before calling getDefaultModelProvider or pass an explicit provider.');\n    }\n    return DEFAULT_PROVIDER;\n}\n//# sourceMappingURL=providers.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9wcm92aWRlcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpbnl0dy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC4yX3dzQDguMTguMl96b2RAMy4yNS41MS9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3Byb3ZpZGVycy5tanM/NzFlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgREVGQVVMVF9QUk9WSURFUjtcbi8qKlxuICogU2V0IHRoZSBtb2RlbCBwcm92aWRlciB1c2VkIHdoZW4gbm8gZXhwbGljaXQgcHJvdmlkZXIgaXMgc3VwcGxpZWQuXG4gKlxuICogQHBhcmFtIHByb3ZpZGVyIC0gVGhlIHByb3ZpZGVyIHRvIHVzZSBieSBkZWZhdWx0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0RGVmYXVsdE1vZGVsUHJvdmlkZXIocHJvdmlkZXIpIHtcbiAgICBERUZBVUxUX1BST1ZJREVSID0gcHJvdmlkZXI7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGRlZmF1bHQgbW9kZWwgcHJvdmlkZXIuXG4gKlxuICogQHJldHVybnMgVGhlIGRlZmF1bHQgbW9kZWwgcHJvdmlkZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0TW9kZWxQcm92aWRlcigpIHtcbiAgICBpZiAodHlwZW9mIERFRkFVTFRfUFJPVklERVIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gZGVmYXVsdCBtb2RlbCBwcm92aWRlciBzZXQuIE1ha2Ugc3VyZSB0byBzZXQgYSBwcm92aWRlciB1c2luZyBzZXREZWZhdWx0TW9kZWxQcm92aWRlciBiZWZvcmUgY2FsbGluZyBnZXREZWZhdWx0TW9kZWxQcm92aWRlciBvciBwYXNzIGFuIGV4cGxpY2l0IHByb3ZpZGVyLicpO1xuICAgIH1cbiAgICByZXR1cm4gREVGQVVMVF9QUk9WSURFUjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3ZpZGVycy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/providers.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/result.mjs":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/result.mjs ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunResult: () => (/* binding */ RunResult),\n/* harmony export */   StreamedRunResult: () => (/* binding */ StreamedRunResult)\n/* harmony export */ });\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n/* harmony import */ var _run_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./run.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/run.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types/protocol.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/types/protocol.mjs\");\n\n\n\n\nclass RunResultBase {\n    state;\n    constructor(state) {\n        this.state = state;\n    }\n    /**\n     * The history of the agent run. This includes the input items and the new items generated during\n     * the agent run.\n     *\n     * This can be used as inputs for the next agent run.\n     */\n    get history() {\n        return (0,_run_mjs__WEBPACK_IMPORTED_MODULE_1__.getTurnInput)(this.input, this.newItems);\n    }\n    /**\n     * The new items generated during the agent run. These include things like new messages, tool\n     * calls and their outputs, etc.\n     *\n     * It does not include information about the agents and instead represents the model data.\n     *\n     * For the output including the agents, use the `newItems` property.\n     */\n    get output() {\n        return (0,_run_mjs__WEBPACK_IMPORTED_MODULE_1__.getTurnInput)([], this.newItems);\n    }\n    /**\n     * A copy of the original input items.\n     */\n    get input() {\n        return this.state._originalInput;\n    }\n    /**\n     * The run items generated during the agent run. This associates the model data with the agents.\n     *\n     * For the model data that can be used as inputs for the next agent run, use the `output` property.\n     */\n    get newItems() {\n        return this.state._generatedItems;\n    }\n    /**\n     * The raw LLM responses generated by the model during the agent run.\n     */\n    get rawResponses() {\n        return this.state._modelResponses;\n    }\n    /**\n     * The last response ID generated by the model during the agent run.\n     */\n    get lastResponseId() {\n        const responses = this.rawResponses;\n        return responses && responses.length > 0\n            ? responses[responses.length - 1].responseId\n            : undefined;\n    }\n    /**\n     * The last agent that was run\n     */\n    get lastAgent() {\n        return this.state._currentAgent;\n    }\n    /**\n     * Guardrail results for the input messages.\n     */\n    get inputGuardrailResults() {\n        return this.state._inputGuardrailResults;\n    }\n    /**\n     * Guardrail results for the final output of the agent.\n     */\n    get outputGuardrailResults() {\n        return this.state._outputGuardrailResults;\n    }\n    /**\n     * Any interruptions that occurred during the agent run for example for tool approvals.\n     */\n    get interruptions() {\n        if (this.state._currentStep?.type === 'next_step_interruption') {\n            return this.state._currentStep.data.interruptions;\n        }\n        return [];\n    }\n    /**\n     * The final output of the agent. If the output type was set to anything other than `text`,\n     * this will be parsed either as JSON or using the Zod schema you provided.\n     */\n    get finalOutput() {\n        if (this.state._currentStep?.type === 'next_step_final_output') {\n            return this.state._currentAgent.processFinalOutput(this.state._currentStep.output);\n        }\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].warn('Accessed finalOutput before agent run is completed.');\n        return undefined;\n    }\n}\n/**\n * The result of an agent run.\n */\nclass RunResult extends RunResultBase {\n    constructor(state) {\n        super(state);\n    }\n}\n/**\n * The result of an agent run in streaming mode.\n */\nclass StreamedRunResult extends RunResultBase {\n    /**\n     * The current agent that is running\n     */\n    get currentAgent() {\n        return this.lastAgent;\n    }\n    /**\n     * The current turn number\n     */\n    currentTurn = 0;\n    /**\n     * The maximum number of turns that can be run\n     */\n    maxTurns;\n    #error = null;\n    #signal;\n    #readableController;\n    #readableStream;\n    #completedPromise;\n    #completedPromiseResolve;\n    #completedPromiseReject;\n    #cancelled = false;\n    constructor(result = {}) {\n        super(result.state);\n        this.#signal = result.signal;\n        if (this.#signal) {\n            this.#signal.addEventListener('abort', async () => {\n                await this.#readableStream.cancel();\n            });\n        }\n        this.#readableStream = new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.ReadableStream({\n            start: (controller) => {\n                this.#readableController = controller;\n            },\n            cancel: () => {\n                this.#cancelled = true;\n            },\n        });\n        this.#completedPromise = new Promise((resolve, reject) => {\n            this.#completedPromiseResolve = resolve;\n            this.#completedPromiseReject = reject;\n        });\n    }\n    /**\n     * @internal\n     * Adds an item to the stream of output items\n     */\n    _addItem(item) {\n        if (!this.cancelled) {\n            this.#readableController?.enqueue(item);\n        }\n    }\n    /**\n     * @internal\n     * Indicates that the stream has been completed\n     */\n    _done() {\n        if (!this.cancelled && this.#readableController) {\n            this.#readableController.close();\n            this.#readableController = undefined;\n            this.#completedPromiseResolve?.();\n        }\n    }\n    /**\n     * @internal\n     * Handles an error in the stream loop.\n     */\n    _raiseError(err) {\n        if (!this.cancelled && this.#readableController) {\n            this.#readableController.error(err);\n            this.#readableController = undefined;\n        }\n        this.#error = err;\n        this.#completedPromiseReject?.(err);\n    }\n    /**\n     * Returns true if the stream has been cancelled.\n     */\n    get cancelled() {\n        return this.#cancelled;\n    }\n    /**\n     * Returns the underlying readable stream.\n     * @returns A readable stream of the agent run.\n     */\n    toStream() {\n        return this.#readableStream;\n    }\n    /**\n     * Await this promise to ensure that the stream has been completed if you are not consuming the\n     * stream directly.\n     */\n    get completed() {\n        return this.#completedPromise;\n    }\n    /**\n     * Error thrown during the run, if any.\n     */\n    get error() {\n        return this.#error;\n    }\n    toTextStream(options = {}) {\n        const stream = this.#readableStream.pipeThrough(new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.TransformStream({\n            transform(event, controller) {\n                if (event.type === 'raw_model_stream_event' &&\n                    event.data.type === 'output_text_delta') {\n                    const item = _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_3__.StreamEventTextStream.parse(event.data);\n                    controller.enqueue(item.delta);\n                }\n            },\n        }));\n        if (options.compatibleWithNodeStreams) {\n            return _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.Readable.fromWeb(stream);\n        }\n        return stream;\n    }\n    [Symbol.asyncIterator]() {\n        return this.#readableStream[Symbol.asyncIterator]();\n    }\n}\n//# sourceMappingURL=result.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/result.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/run.mjs":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/run.mjs ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Runner: () => (/* binding */ Runner),\n/* harmony export */   getTracing: () => (/* binding */ getTracing),\n/* harmony export */   getTurnInput: () => (/* binding */ getTurnInput),\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _guardrail_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guardrail.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/guardrail.mjs\");\n/* harmony import */ var _handoff_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handoff.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/handoff.mjs\");\n/* harmony import */ var _providers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./providers.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/providers.mjs\");\n/* harmony import */ var _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./runContext.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runContext.mjs\");\n/* harmony import */ var _result_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./result.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/result.mjs\");\n/* harmony import */ var _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lifecycle.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/lifecycle.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _utils_serialize_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/serialize.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/serialize.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./runImplementation.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runImplementation.mjs\");\n/* harmony import */ var _tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./tracing/context.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tracing/index.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/index.mjs\");\n/* harmony import */ var _usage_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./usage.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/usage.mjs\");\n/* harmony import */ var _events_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./events.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/events.mjs\");\n/* harmony import */ var _runState_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./runState.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runState.mjs\");\n/* harmony import */ var _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./types/protocol.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/types/protocol.mjs\");\n/* harmony import */ var _utils_tools_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/tools.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/tools.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DEFAULT_MAX_TURNS = 10;\n/**\n * @internal\n */\nfunction getTracing(tracingDisabled, traceIncludeSensitiveData) {\n    if (tracingDisabled) {\n        return false;\n    }\n    if (traceIncludeSensitiveData) {\n        return true;\n    }\n    return 'enabled_without_data';\n}\nfunction getTurnInput(originalInput, generatedItems) {\n    const rawItems = generatedItems.map((item) => item.rawItem);\n    if (typeof originalInput === 'string') {\n        originalInput = [{ type: 'message', role: 'user', content: originalInput }];\n    }\n    return [...originalInput, ...rawItems];\n}\n/**\n * A Runner is responsible for running an agent workflow.\n */\nclass Runner extends _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_5__.RunHooks {\n    config;\n    inputGuardrailDefs;\n    outputGuardrailDefs;\n    constructor(config = {}) {\n        super();\n        this.config = {\n            modelProvider: config.modelProvider ?? (0,_providers_mjs__WEBPACK_IMPORTED_MODULE_2__.getDefaultModelProvider)(),\n            model: config.model,\n            modelSettings: config.modelSettings,\n            handoffInputFilter: config.handoffInputFilter,\n            inputGuardrails: config.inputGuardrails,\n            outputGuardrails: config.outputGuardrails,\n            tracingDisabled: config.tracingDisabled ?? false,\n            traceIncludeSensitiveData: config.traceIncludeSensitiveData ?? true,\n            workflowName: config.workflowName ?? 'Agent workflow',\n            traceId: config.traceId,\n            groupId: config.groupId,\n            traceMetadata: config.traceMetadata,\n        };\n        this.inputGuardrailDefs = (config.inputGuardrails ?? []).map(_guardrail_mjs__WEBPACK_IMPORTED_MODULE_0__.defineInputGuardrail);\n        this.outputGuardrailDefs = (config.outputGuardrails ?? []).map(_guardrail_mjs__WEBPACK_IMPORTED_MODULE_0__.defineOutputGuardrail);\n    }\n    /**\n     * @internal\n     */\n    async #runIndividualNonStream(startingAgent, input, options) {\n        return (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.withNewSpanContext)(async () => {\n            // if we have a saved state we use that one, otherwise we create a new one\n            const state = input instanceof _runState_mjs__WEBPACK_IMPORTED_MODULE_14__.RunState\n                ? input\n                : new _runState_mjs__WEBPACK_IMPORTED_MODULE_14__.RunState(options.context instanceof _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__.RunContext\n                    ? options.context\n                    : new _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__.RunContext(options.context), input, startingAgent, options.maxTurns ?? DEFAULT_MAX_TURNS);\n            try {\n                while (true) {\n                    let model = state._currentAgent.model ?? this.config.model;\n                    if (typeof model === 'string') {\n                        model = await this.config.modelProvider.getModel(model);\n                    }\n                    // if we don't have a current step, we treat this as a new run\n                    state._currentStep = state._currentStep ?? {\n                        type: 'next_step_run_again',\n                    };\n                    if (state._currentStep.type === 'next_step_interruption') {\n                        _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug('Continuing from interruption');\n                        if (!state._lastTurnResponse || !state._lastProcessedResponse) {\n                            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.UserError('No model response found in previous state', state);\n                        }\n                        const turnResult = await (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.executeInterruptedToolsAndSideEffects)(state._currentAgent, state._originalInput, state._generatedItems, state._lastTurnResponse, state._lastProcessedResponse, this, state);\n                        state._toolUseTracker.addToolUse(state._currentAgent, state._lastProcessedResponse.toolsUsed);\n                        state._originalInput = turnResult.originalInput;\n                        state._generatedItems = turnResult.generatedItems;\n                        state._currentStep = turnResult.nextStep;\n                        continue;\n                    }\n                    if (state._currentStep.type === 'next_step_run_again') {\n                        const handoffs = state._currentAgent.handoffs.map(_handoff_mjs__WEBPACK_IMPORTED_MODULE_1__.getHandoff);\n                        if (!state._currentAgentSpan) {\n                            const handoffNames = handoffs.map((h) => h.agentName);\n                            state._currentAgentSpan = (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_11__.createAgentSpan)({\n                                data: {\n                                    name: state._currentAgent.name,\n                                    handoffs: handoffNames,\n                                    output_type: state._currentAgent.outputSchemaName,\n                                },\n                            });\n                            state._currentAgentSpan.start();\n                            (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.setCurrentSpan)(state._currentAgentSpan);\n                        }\n                        const tools = await state._currentAgent.getAllTools();\n                        const serializedTools = tools.map((t) => (0,_utils_serialize_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeTool)(t));\n                        const serializedHandoffs = handoffs.map((h) => (0,_utils_serialize_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeHandoff)(h));\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.spanData.tools = tools.map((t) => t.name);\n                        }\n                        state._currentTurn++;\n                        if (state._currentTurn > state._maxTurns) {\n                            state._currentAgentSpan?.setError({\n                                message: 'Max turns exceeded',\n                                data: { max_turns: state._maxTurns },\n                            });\n                            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.MaxTurnsExceededError(`Max turns (${state._maxTurns}) exceeded`, state);\n                        }\n                        _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug(`Running agent ${state._currentAgent.name} (turn ${state._currentTurn})`);\n                        if (state._currentTurn === 1) {\n                            await this.#runInputGuardrails(state);\n                        }\n                        const turnInput = getTurnInput(state._originalInput, state._generatedItems);\n                        if (state._noActiveAgentRun) {\n                            state._currentAgent.emit('agent_start', state._context, state._currentAgent);\n                            this.emit('agent_start', state._context, state._currentAgent);\n                        }\n                        let modelSettings = {\n                            ...this.config.modelSettings,\n                            ...state._currentAgent.modelSettings,\n                        };\n                        modelSettings = (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.maybeResetToolChoice)(state._currentAgent, state._toolUseTracker, modelSettings);\n                        state._lastTurnResponse = await model.getResponse({\n                            systemInstructions: await state._currentAgent.getSystemPrompt(state._context),\n                            input: turnInput,\n                            previousResponseId: options.previousResponseId,\n                            modelSettings,\n                            tools: serializedTools,\n                            outputType: (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_16__.convertAgentOutputTypeToSerializable)(state._currentAgent.outputType),\n                            handoffs: serializedHandoffs,\n                            tracing: getTracing(this.config.tracingDisabled, this.config.traceIncludeSensitiveData),\n                        });\n                        state._modelResponses.push(state._lastTurnResponse);\n                        state._context.usage.add(state._lastTurnResponse.usage);\n                        state._noActiveAgentRun = false;\n                        const processedResponse = (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.processModelResponse)(state._lastTurnResponse, state._currentAgent, tools, handoffs);\n                        state._lastProcessedResponse = processedResponse;\n                        const turnResult = await (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.executeToolsAndSideEffects)(state._currentAgent, state._originalInput, state._generatedItems, state._lastTurnResponse, state._lastProcessedResponse, this, state);\n                        state._toolUseTracker.addToolUse(state._currentAgent, state._lastProcessedResponse.toolsUsed);\n                        state._originalInput = turnResult.originalInput;\n                        state._generatedItems = turnResult.generatedItems;\n                        state._currentStep = turnResult.nextStep;\n                    }\n                    if (state._currentStep &&\n                        state._currentStep.type === 'next_step_final_output') {\n                        await this.#runOutputGuardrails(state, state._currentStep.output);\n                        this.emit('agent_end', state._context, state._currentAgent, state._currentStep.output);\n                        state._currentAgent.emit('agent_end', state._context, state._currentStep.output);\n                        return new _result_mjs__WEBPACK_IMPORTED_MODULE_4__.RunResult(state);\n                    }\n                    else if (state._currentStep &&\n                        state._currentStep.type === 'next_step_handoff') {\n                        state._currentAgent = state._currentStep.newAgent;\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.end();\n                            (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.resetCurrentSpan)();\n                            state._currentAgentSpan = undefined;\n                        }\n                        state._noActiveAgentRun = true;\n                        // we've processed the handoff, so we need to run the loop again\n                        state._currentStep = { type: 'next_step_run_again' };\n                    }\n                    else if (state._currentStep &&\n                        state._currentStep.type === 'next_step_interruption') {\n                        // interrupted. Don't run any guardrails\n                        return new _result_mjs__WEBPACK_IMPORTED_MODULE_4__.RunResult(state);\n                    }\n                    else {\n                        _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug('Running next loop');\n                    }\n                }\n            }\n            catch (err) {\n                if (state._currentAgentSpan) {\n                    state._currentAgentSpan.setError({\n                        message: 'Error in agent run',\n                        data: { error: String(err) },\n                    });\n                }\n                throw err;\n            }\n            finally {\n                if (state._currentAgentSpan) {\n                    if (state._currentStep?.type !== 'next_step_interruption') {\n                        // don't end the span if the run was interrupted\n                        state._currentAgentSpan.end();\n                    }\n                    (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.resetCurrentSpan)();\n                }\n            }\n        });\n    }\n    async #runInputGuardrails(state) {\n        const guardrails = this.inputGuardrailDefs.concat(state._currentAgent.inputGuardrails.map(_guardrail_mjs__WEBPACK_IMPORTED_MODULE_0__.defineInputGuardrail));\n        if (guardrails.length > 0) {\n            const guardrailArgs = {\n                agent: state._currentAgent,\n                input: state._originalInput,\n                context: state._context,\n            };\n            try {\n                const results = await Promise.all(guardrails.map(async (guardrail) => {\n                    return (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_11__.withGuardrailSpan)(async (span) => {\n                        const result = await guardrail.run(guardrailArgs);\n                        span.spanData.triggered = result.output.tripwireTriggered;\n                        return result;\n                    }, { data: { name: guardrail.name } }, state._currentAgentSpan);\n                }));\n                for (const result of results) {\n                    if (result.output.tripwireTriggered) {\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.setError({\n                                message: 'Guardrail tripwire triggered',\n                                data: { guardrail: result.guardrail.name },\n                            });\n                        }\n                        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.InputGuardrailTripwireTriggered(`Input guardrail triggered: ${JSON.stringify(result.output.outputInfo)}`, result, state);\n                    }\n                }\n            }\n            catch (e) {\n                if (e instanceof _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.InputGuardrailTripwireTriggered) {\n                    throw e;\n                }\n                // roll back the current turn to enable reruns\n                state._currentTurn--;\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.GuardrailExecutionError(`Input guardrail failed to complete: ${e}`, e, state);\n            }\n        }\n    }\n    async #runOutputGuardrails(state, output) {\n        const guardrails = this.outputGuardrailDefs.concat(state._currentAgent.outputGuardrails.map(_guardrail_mjs__WEBPACK_IMPORTED_MODULE_0__.defineOutputGuardrail));\n        if (guardrails.length > 0) {\n            const agentOutput = state._currentAgent.processFinalOutput(output);\n            const guardrailArgs = {\n                agent: state._currentAgent,\n                agentOutput,\n                context: state._context,\n            };\n            try {\n                const results = await Promise.all(guardrails.map(async (guardrail) => {\n                    return (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_11__.withGuardrailSpan)(async (span) => {\n                        const result = await guardrail.run(guardrailArgs);\n                        span.spanData.triggered = result.output.tripwireTriggered;\n                        return result;\n                    }, { data: { name: guardrail.name } }, state._currentAgentSpan);\n                }));\n                for (const result of results) {\n                    if (result.output.tripwireTriggered) {\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.setError({\n                                message: 'Guardrail tripwire triggered',\n                                data: { guardrail: result.guardrail.name },\n                            });\n                        }\n                        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.OutputGuardrailTripwireTriggered(`Output guardrail triggered: ${JSON.stringify(result.output.outputInfo)}`, result, state);\n                    }\n                }\n            }\n            catch (e) {\n                if (e instanceof _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.OutputGuardrailTripwireTriggered) {\n                    throw e;\n                }\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.GuardrailExecutionError(`Output guardrail failed to complete: ${e}`, e, state);\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    async #runStreamLoop(result, options) {\n        try {\n            while (true) {\n                const currentAgent = result.state._currentAgent;\n                const handoffs = currentAgent.handoffs.map(_handoff_mjs__WEBPACK_IMPORTED_MODULE_1__.getHandoff);\n                const tools = await currentAgent.getAllTools();\n                const serializedTools = tools.map((t) => (0,_utils_serialize_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeTool)(t));\n                const serializedHandoffs = handoffs.map((h) => (0,_utils_serialize_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeHandoff)(h));\n                result.state._currentStep = result.state._currentStep ?? {\n                    type: 'next_step_run_again',\n                };\n                if (result.state._currentStep.type === 'next_step_interruption') {\n                    _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug('Continuing from interruption');\n                    if (!result.state._lastTurnResponse ||\n                        !result.state._lastProcessedResponse) {\n                        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.UserError('No model response found in previous state', result.state);\n                    }\n                    const turnResult = await (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.executeInterruptedToolsAndSideEffects)(result.state._currentAgent, result.state._originalInput, result.state._generatedItems, result.state._lastTurnResponse, result.state._lastProcessedResponse, this, result.state);\n                    (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.addStepToRunResult)(result, turnResult);\n                    result.state._toolUseTracker.addToolUse(result.state._currentAgent, result.state._lastProcessedResponse.toolsUsed);\n                    result.state._originalInput = turnResult.originalInput;\n                    result.state._generatedItems = turnResult.generatedItems;\n                    result.state._currentStep = turnResult.nextStep;\n                    continue;\n                }\n                if (result.state._currentStep.type === 'next_step_run_again') {\n                    if (!result.state._currentAgentSpan) {\n                        const handoffNames = handoffs.map((h) => h.agentName);\n                        result.state._currentAgentSpan = (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_11__.createAgentSpan)({\n                            data: {\n                                name: currentAgent.name,\n                                handoffs: handoffNames,\n                                tools: tools.map((t) => t.name),\n                                output_type: currentAgent.outputSchemaName,\n                            },\n                        });\n                        result.state._currentAgentSpan.start();\n                        (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.setCurrentSpan)(result.state._currentAgentSpan);\n                    }\n                    result.state._currentTurn++;\n                    if (result.state._currentTurn > result.state._maxTurns) {\n                        result.state._currentAgentSpan?.setError({\n                            message: 'Max turns exceeded',\n                            data: { max_turns: result.state._maxTurns },\n                        });\n                        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.MaxTurnsExceededError(`Max turns (${result.state._maxTurns}) exceeded`, result.state);\n                    }\n                    _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug(`Running agent ${currentAgent.name} (turn ${result.state._currentTurn})`);\n                    let model = currentAgent.model ?? this.config.model;\n                    if (typeof model === 'string') {\n                        model = await this.config.modelProvider.getModel(model);\n                    }\n                    if (result.state._currentTurn === 1) {\n                        await this.#runInputGuardrails(result.state);\n                    }\n                    let modelSettings = {\n                        ...this.config.modelSettings,\n                        ...currentAgent.modelSettings,\n                    };\n                    modelSettings = (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.maybeResetToolChoice)(currentAgent, result.state._toolUseTracker, modelSettings);\n                    const turnInput = getTurnInput(result.input, result.newItems);\n                    if (result.state._noActiveAgentRun) {\n                        currentAgent.emit('agent_start', result.state._context, currentAgent);\n                        this.emit('agent_start', result.state._context, currentAgent);\n                    }\n                    let finalResponse = undefined;\n                    for await (const event of model.getStreamedResponse({\n                        systemInstructions: await currentAgent.getSystemPrompt(result.state._context),\n                        input: turnInput,\n                        previousResponseId: options.previousResponseId,\n                        modelSettings,\n                        tools: serializedTools,\n                        handoffs: serializedHandoffs,\n                        outputType: (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_16__.convertAgentOutputTypeToSerializable)(currentAgent.outputType),\n                        tracing: getTracing(this.config.tracingDisabled, this.config.traceIncludeSensitiveData),\n                    })) {\n                        if (event.type === 'response_done') {\n                            const parsed = _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_15__.StreamEventResponseCompleted.parse(event);\n                            finalResponse = {\n                                usage: new _usage_mjs__WEBPACK_IMPORTED_MODULE_12__.Usage(parsed.response.usage),\n                                output: parsed.response.output,\n                                responseId: parsed.response.id,\n                            };\n                        }\n                        if (result.cancelled) {\n                            // When the user's code exits a loop to consume the stream, we need to break\n                            // this loop to prevent internal false errors and unnecessary processing\n                            return;\n                        }\n                        result._addItem(new _events_mjs__WEBPACK_IMPORTED_MODULE_13__.RunRawModelStreamEvent(event));\n                    }\n                    result.state._noActiveAgentRun = false;\n                    if (!finalResponse) {\n                        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.ModelBehaviorError('Model did not procude a final response!', result.state);\n                    }\n                    result.state._lastTurnResponse = finalResponse;\n                    result.state._modelResponses.push(result.state._lastTurnResponse);\n                    const processedResponse = (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.processModelResponse)(result.state._lastTurnResponse, currentAgent, tools, handoffs);\n                    result.state._lastProcessedResponse = processedResponse;\n                    const turnResult = await (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.executeToolsAndSideEffects)(currentAgent, result.state._originalInput, result.state._generatedItems, result.state._lastTurnResponse, result.state._lastProcessedResponse, this, result.state);\n                    (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.addStepToRunResult)(result, turnResult);\n                    result.state._toolUseTracker.addToolUse(currentAgent, processedResponse.toolsUsed);\n                    result.state._originalInput = turnResult.originalInput;\n                    result.state._generatedItems = turnResult.generatedItems;\n                    result.state._currentStep = turnResult.nextStep;\n                }\n                if (result.state._currentStep.type === 'next_step_final_output') {\n                    await this.#runOutputGuardrails(result.state, result.state._currentStep.output);\n                    return;\n                }\n                else if (result.state._currentStep.type === 'next_step_interruption') {\n                    // we are done for now. Don't run any output guardrails\n                    return;\n                }\n                else if (result.state._currentStep.type === 'next_step_handoff') {\n                    result.state._currentAgent = result.state._currentStep\n                        ?.newAgent;\n                    if (result.state._currentAgentSpan) {\n                        result.state._currentAgentSpan.end();\n                        (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.resetCurrentSpan)();\n                    }\n                    result.state._currentAgentSpan = undefined;\n                    result._addItem(new _events_mjs__WEBPACK_IMPORTED_MODULE_13__.RunAgentUpdatedStreamEvent(currentAgent));\n                    result.state._noActiveAgentRun = true;\n                    // we've processed the handoff, so we need to run the loop again\n                    result.state._currentStep = {\n                        type: 'next_step_run_again',\n                    };\n                }\n                else {\n                    _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug('Running next loop');\n                }\n            }\n        }\n        catch (error) {\n            if (result.state._currentAgentSpan) {\n                result.state._currentAgentSpan.setError({\n                    message: 'Error in agent run',\n                    data: { error: String(error) },\n                });\n            }\n            throw error;\n        }\n        finally {\n            if (result.state._currentAgentSpan) {\n                if (result.state._currentStep?.type !== 'next_step_interruption') {\n                    result.state._currentAgentSpan.end();\n                }\n                (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.resetCurrentSpan)();\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    async #runIndividualStream(agent, input, options) {\n        options = options ?? {};\n        return (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.withNewSpanContext)(async () => {\n            // Initialize or reuse existing state\n            const state = input instanceof _runState_mjs__WEBPACK_IMPORTED_MODULE_14__.RunState\n                ? input\n                : new _runState_mjs__WEBPACK_IMPORTED_MODULE_14__.RunState(options.context instanceof _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__.RunContext\n                    ? options.context\n                    : new _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__.RunContext(options.context), input, agent, options.maxTurns ?? DEFAULT_MAX_TURNS);\n            // Initialize the streamed result with existing state\n            const result = new _result_mjs__WEBPACK_IMPORTED_MODULE_4__.StreamedRunResult({\n                signal: options.signal,\n                state,\n            });\n            // Setup defaults\n            result.maxTurns = options.maxTurns ?? state._maxTurns;\n            // Continue the stream loop without blocking\n            this.#runStreamLoop(result, options).then(() => {\n                result._done();\n            }, (err) => {\n                result._raiseError(err);\n            });\n            return result;\n        });\n    }\n    run(agent, input, options = {\n        stream: false,\n        context: undefined,\n    }) {\n        if (input instanceof _runState_mjs__WEBPACK_IMPORTED_MODULE_14__.RunState && input._trace) {\n            return (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.withTrace)(input._trace, async () => {\n                if (input._currentAgentSpan) {\n                    (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.setCurrentSpan)(input._currentAgentSpan);\n                }\n                if (options?.stream) {\n                    return this.#runIndividualStream(agent, input, options);\n                }\n                else {\n                    return this.#runIndividualNonStream(agent, input, options);\n                }\n            });\n        }\n        return (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.getOrCreateTrace)(async () => {\n            if (options?.stream) {\n                return this.#runIndividualStream(agent, input, options);\n            }\n            else {\n                return this.#runIndividualNonStream(agent, input, options);\n            }\n        });\n    }\n}\nlet _defaultRunner = undefined;\nfunction getDefaultRunner() {\n    if (_defaultRunner) {\n        return _defaultRunner;\n    }\n    _defaultRunner = new Runner();\n    return _defaultRunner;\n}\nasync function run(agent, input, options) {\n    const runner = getDefaultRunner();\n    if (options?.stream) {\n        return await runner.run(agent, input, options);\n    }\n    else {\n        return await runner.run(agent, input, options);\n    }\n}\n//# sourceMappingURL=run.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9ydW4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErRTtBQUNwQztBQUNlO0FBQ1o7QUFDYztBQUNqQjtBQUNUO0FBQ3NDO0FBQ3lHO0FBQ0o7QUFDbEQ7QUFDbEQ7QUFDckM7QUFDOEM7QUFDeEM7QUFDMEI7QUFDSztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDJCQUEyQix1REFBdUQ7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUJBQXFCLG9EQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsbURBQW1ELHVFQUF1QjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUsZ0VBQW9CO0FBQ3pGLHVFQUF1RSxpRUFBcUI7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUseUVBQWtCO0FBQ2pDO0FBQ0EsMkNBQTJDLG9EQUFRO0FBQ25EO0FBQ0Esc0JBQXNCLG9EQUFRLDRCQUE0Qix1REFBVTtBQUNwRTtBQUNBLDBCQUEwQix1REFBVTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1EQUFNO0FBQzlCO0FBQ0Esc0NBQXNDLGtEQUFTO0FBQy9DO0FBQ0EsaURBQWlELDZGQUFxQztBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSxvREFBVTtBQUNwRjtBQUNBO0FBQ0Esc0RBQXNELG9FQUFlO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLDZCQUE2QjtBQUM3QjtBQUNBLDRCQUE0QixxRUFBYztBQUMxQztBQUNBO0FBQ0EsaUVBQWlFLG1FQUFhO0FBQzlFLHVFQUF1RSxzRUFBZ0I7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsNEJBQTRCO0FBQ3BFLDZCQUE2QjtBQUM3QixzQ0FBc0MsOERBQXFCLGVBQWUsZ0JBQWdCO0FBQzFGO0FBQ0Esd0JBQXdCLG1EQUFNLHdCQUF3QiwwQkFBMEIsUUFBUSxtQkFBbUI7QUFDM0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDRFQUFvQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsdUZBQW9DO0FBQzVFO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELDRFQUFvQjtBQUN0RTtBQUNBLGlEQUFpRCxrRkFBMEI7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0RBQVM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVFQUFnQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxrREFBUztBQUM1QztBQUNBO0FBQ0Esd0JBQXdCLG1EQUFNO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLG9CQUFvQjtBQUNwRCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVFQUFnQjtBQUNwQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrR0FBa0csZ0VBQW9CO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsc0VBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixJQUFJLFFBQVEsd0JBQXdCO0FBQ3pELGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLGtDQUFrQztBQUMxRSw2QkFBNkI7QUFDN0I7QUFDQSxrQ0FBa0Msd0VBQStCLCtCQUErQix5Q0FBeUM7QUFDekk7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsd0VBQStCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGdFQUF1Qix3Q0FBd0MsRUFBRTtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9HQUFvRyxpRUFBcUI7QUFDekg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHNFQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsSUFBSSxRQUFRLHdCQUF3QjtBQUN6RCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxrQ0FBa0M7QUFDMUUsNkJBQTZCO0FBQzdCO0FBQ0Esa0NBQWtDLHlFQUFnQyxnQ0FBZ0MseUNBQXlDO0FBQzNJO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHlFQUFnQztBQUNqRTtBQUNBO0FBQ0EsMEJBQTBCLGdFQUF1Qix5Q0FBeUMsRUFBRTtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxvREFBVTtBQUNyRTtBQUNBLHlEQUF5RCxtRUFBYTtBQUN0RSwrREFBK0Qsc0VBQWdCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1EQUFNO0FBQzFCO0FBQ0E7QUFDQSxrQ0FBa0Msa0RBQVM7QUFDM0M7QUFDQSw2Q0FBNkMsNkZBQXFDO0FBQ2xGLG9CQUFvQiwwRUFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELG9FQUFlO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IseUJBQXlCO0FBQ3pCO0FBQ0Esd0JBQXdCLHFFQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsbUNBQW1DO0FBQ3ZFLHlCQUF5QjtBQUN6QixrQ0FBa0MsOERBQXFCLGVBQWUsdUJBQXVCO0FBQzdGO0FBQ0Esb0JBQW9CLG1EQUFNLHdCQUF3QixtQkFBbUIsUUFBUSwwQkFBMEI7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyw0RUFBb0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsdUZBQW9DO0FBQ3hFO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsMkNBQTJDLDhFQUE0QjtBQUN2RTtBQUNBLDJDQUEyQyw4Q0FBSztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsZ0VBQXNCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywyREFBa0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDRFQUFvQjtBQUNsRTtBQUNBLDZDQUE2QyxrRkFBMEI7QUFDdkUsb0JBQW9CLDBFQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUVBQWdCO0FBQ3hDO0FBQ0E7QUFDQSx3Q0FBd0Msb0VBQTBCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1EQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHNCQUFzQjtBQUNsRCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1RUFBZ0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUseUVBQWtCO0FBQ2pDO0FBQ0EsMkNBQTJDLG9EQUFRO0FBQ25EO0FBQ0Esc0JBQXNCLG9EQUFRLDRCQUE0Qix1REFBVTtBQUNwRTtBQUNBLDBCQUEwQix1REFBVTtBQUNwQztBQUNBLCtCQUErQiwwREFBaUI7QUFDaEQ7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDZCQUE2QixvREFBUTtBQUNyQyxtQkFBbUIsZ0VBQVM7QUFDNUI7QUFDQSxvQkFBb0IscUVBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxlQUFlLHVFQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9ydW4ubWpzPzhmYTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmaW5lSW5wdXRHdWFyZHJhaWwsIGRlZmluZU91dHB1dEd1YXJkcmFpbCwgfSBmcm9tIFwiLi9ndWFyZHJhaWwubWpzXCI7XG5pbXBvcnQgeyBnZXRIYW5kb2ZmIH0gZnJvbSBcIi4vaGFuZG9mZi5tanNcIjtcbmltcG9ydCB7IGdldERlZmF1bHRNb2RlbFByb3ZpZGVyIH0gZnJvbSBcIi4vcHJvdmlkZXJzLm1qc1wiO1xuaW1wb3J0IHsgUnVuQ29udGV4dCB9IGZyb20gXCIuL3J1bkNvbnRleHQubWpzXCI7XG5pbXBvcnQgeyBSdW5SZXN1bHQsIFN0cmVhbWVkUnVuUmVzdWx0IH0gZnJvbSBcIi4vcmVzdWx0Lm1qc1wiO1xuaW1wb3J0IHsgUnVuSG9va3MgfSBmcm9tIFwiLi9saWZlY3ljbGUubWpzXCI7XG5pbXBvcnQgbG9nZ2VyIGZyb20gXCIuL2xvZ2dlci5tanNcIjtcbmltcG9ydCB7IHNlcmlhbGl6ZVRvb2wsIHNlcmlhbGl6ZUhhbmRvZmYgfSBmcm9tIFwiLi91dGlscy9zZXJpYWxpemUubWpzXCI7XG5pbXBvcnQgeyBHdWFyZHJhaWxFeGVjdXRpb25FcnJvciwgSW5wdXRHdWFyZHJhaWxUcmlwd2lyZVRyaWdnZXJlZCwgTWF4VHVybnNFeGNlZWRlZEVycm9yLCBNb2RlbEJlaGF2aW9yRXJyb3IsIE91dHB1dEd1YXJkcmFpbFRyaXB3aXJlVHJpZ2dlcmVkLCBVc2VyRXJyb3IsIH0gZnJvbSBcIi4vZXJyb3JzLm1qc1wiO1xuaW1wb3J0IHsgYWRkU3RlcFRvUnVuUmVzdWx0LCBleGVjdXRlSW50ZXJydXB0ZWRUb29sc0FuZFNpZGVFZmZlY3RzLCBleGVjdXRlVG9vbHNBbmRTaWRlRWZmZWN0cywgbWF5YmVSZXNldFRvb2xDaG9pY2UsIHByb2Nlc3NNb2RlbFJlc3BvbnNlLCB9IGZyb20gXCIuL3J1bkltcGxlbWVudGF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgZ2V0T3JDcmVhdGVUcmFjZSwgcmVzZXRDdXJyZW50U3Bhbiwgc2V0Q3VycmVudFNwYW4sIHdpdGhOZXdTcGFuQ29udGV4dCwgd2l0aFRyYWNlLCB9IGZyb20gXCIuL3RyYWNpbmcvY29udGV4dC5tanNcIjtcbmltcG9ydCB7IGNyZWF0ZUFnZW50U3Bhbiwgd2l0aEd1YXJkcmFpbFNwYW4gfSBmcm9tIFwiLi90cmFjaW5nL2luZGV4Lm1qc1wiO1xuaW1wb3J0IHsgVXNhZ2UgfSBmcm9tIFwiLi91c2FnZS5tanNcIjtcbmltcG9ydCB7IFJ1bkFnZW50VXBkYXRlZFN0cmVhbUV2ZW50LCBSdW5SYXdNb2RlbFN0cmVhbUV2ZW50IH0gZnJvbSBcIi4vZXZlbnRzLm1qc1wiO1xuaW1wb3J0IHsgUnVuU3RhdGUgfSBmcm9tIFwiLi9ydW5TdGF0ZS5tanNcIjtcbmltcG9ydCB7IFN0cmVhbUV2ZW50UmVzcG9uc2VDb21wbGV0ZWQgfSBmcm9tIFwiLi90eXBlcy9wcm90b2NvbC5tanNcIjtcbmltcG9ydCB7IGNvbnZlcnRBZ2VudE91dHB1dFR5cGVUb1NlcmlhbGl6YWJsZSB9IGZyb20gXCIuL3V0aWxzL3Rvb2xzLm1qc1wiO1xuY29uc3QgREVGQVVMVF9NQVhfVFVSTlMgPSAxMDtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmFjaW5nKHRyYWNpbmdEaXNhYmxlZCwgdHJhY2VJbmNsdWRlU2Vuc2l0aXZlRGF0YSkge1xuICAgIGlmICh0cmFjaW5nRGlzYWJsZWQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAodHJhY2VJbmNsdWRlU2Vuc2l0aXZlRGF0YSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuICdlbmFibGVkX3dpdGhvdXRfZGF0YSc7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0VHVybklucHV0KG9yaWdpbmFsSW5wdXQsIGdlbmVyYXRlZEl0ZW1zKSB7XG4gICAgY29uc3QgcmF3SXRlbXMgPSBnZW5lcmF0ZWRJdGVtcy5tYXAoKGl0ZW0pID0+IGl0ZW0ucmF3SXRlbSk7XG4gICAgaWYgKHR5cGVvZiBvcmlnaW5hbElucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBvcmlnaW5hbElucHV0ID0gW3sgdHlwZTogJ21lc3NhZ2UnLCByb2xlOiAndXNlcicsIGNvbnRlbnQ6IG9yaWdpbmFsSW5wdXQgfV07XG4gICAgfVxuICAgIHJldHVybiBbLi4ub3JpZ2luYWxJbnB1dCwgLi4ucmF3SXRlbXNdO1xufVxuLyoqXG4gKiBBIFJ1bm5lciBpcyByZXNwb25zaWJsZSBmb3IgcnVubmluZyBhbiBhZ2VudCB3b3JrZmxvdy5cbiAqL1xuZXhwb3J0IGNsYXNzIFJ1bm5lciBleHRlbmRzIFJ1bkhvb2tzIHtcbiAgICBjb25maWc7XG4gICAgaW5wdXRHdWFyZHJhaWxEZWZzO1xuICAgIG91dHB1dEd1YXJkcmFpbERlZnM7XG4gICAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5jb25maWcgPSB7XG4gICAgICAgICAgICBtb2RlbFByb3ZpZGVyOiBjb25maWcubW9kZWxQcm92aWRlciA/PyBnZXREZWZhdWx0TW9kZWxQcm92aWRlcigpLFxuICAgICAgICAgICAgbW9kZWw6IGNvbmZpZy5tb2RlbCxcbiAgICAgICAgICAgIG1vZGVsU2V0dGluZ3M6IGNvbmZpZy5tb2RlbFNldHRpbmdzLFxuICAgICAgICAgICAgaGFuZG9mZklucHV0RmlsdGVyOiBjb25maWcuaGFuZG9mZklucHV0RmlsdGVyLFxuICAgICAgICAgICAgaW5wdXRHdWFyZHJhaWxzOiBjb25maWcuaW5wdXRHdWFyZHJhaWxzLFxuICAgICAgICAgICAgb3V0cHV0R3VhcmRyYWlsczogY29uZmlnLm91dHB1dEd1YXJkcmFpbHMsXG4gICAgICAgICAgICB0cmFjaW5nRGlzYWJsZWQ6IGNvbmZpZy50cmFjaW5nRGlzYWJsZWQgPz8gZmFsc2UsXG4gICAgICAgICAgICB0cmFjZUluY2x1ZGVTZW5zaXRpdmVEYXRhOiBjb25maWcudHJhY2VJbmNsdWRlU2Vuc2l0aXZlRGF0YSA/PyB0cnVlLFxuICAgICAgICAgICAgd29ya2Zsb3dOYW1lOiBjb25maWcud29ya2Zsb3dOYW1lID8/ICdBZ2VudCB3b3JrZmxvdycsXG4gICAgICAgICAgICB0cmFjZUlkOiBjb25maWcudHJhY2VJZCxcbiAgICAgICAgICAgIGdyb3VwSWQ6IGNvbmZpZy5ncm91cElkLFxuICAgICAgICAgICAgdHJhY2VNZXRhZGF0YTogY29uZmlnLnRyYWNlTWV0YWRhdGEsXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuaW5wdXRHdWFyZHJhaWxEZWZzID0gKGNvbmZpZy5pbnB1dEd1YXJkcmFpbHMgPz8gW10pLm1hcChkZWZpbmVJbnB1dEd1YXJkcmFpbCk7XG4gICAgICAgIHRoaXMub3V0cHV0R3VhcmRyYWlsRGVmcyA9IChjb25maWcub3V0cHV0R3VhcmRyYWlscyA/PyBbXSkubWFwKGRlZmluZU91dHB1dEd1YXJkcmFpbCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jICNydW5JbmRpdmlkdWFsTm9uU3RyZWFtKHN0YXJ0aW5nQWdlbnQsIGlucHV0LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB3aXRoTmV3U3BhbkNvbnRleHQoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgLy8gaWYgd2UgaGF2ZSBhIHNhdmVkIHN0YXRlIHdlIHVzZSB0aGF0IG9uZSwgb3RoZXJ3aXNlIHdlIGNyZWF0ZSBhIG5ldyBvbmVcbiAgICAgICAgICAgIGNvbnN0IHN0YXRlID0gaW5wdXQgaW5zdGFuY2VvZiBSdW5TdGF0ZVxuICAgICAgICAgICAgICAgID8gaW5wdXRcbiAgICAgICAgICAgICAgICA6IG5ldyBSdW5TdGF0ZShvcHRpb25zLmNvbnRleHQgaW5zdGFuY2VvZiBSdW5Db250ZXh0XG4gICAgICAgICAgICAgICAgICAgID8gb3B0aW9ucy5jb250ZXh0XG4gICAgICAgICAgICAgICAgICAgIDogbmV3IFJ1bkNvbnRleHQob3B0aW9ucy5jb250ZXh0KSwgaW5wdXQsIHN0YXJ0aW5nQWdlbnQsIG9wdGlvbnMubWF4VHVybnMgPz8gREVGQVVMVF9NQVhfVFVSTlMpO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgbW9kZWwgPSBzdGF0ZS5fY3VycmVudEFnZW50Lm1vZGVsID8/IHRoaXMuY29uZmlnLm1vZGVsO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1vZGVsID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwgPSBhd2FpdCB0aGlzLmNvbmZpZy5tb2RlbFByb3ZpZGVyLmdldE1vZGVsKG1vZGVsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBpZiB3ZSBkb24ndCBoYXZlIGEgY3VycmVudCBzdGVwLCB3ZSB0cmVhdCB0aGlzIGFzIGEgbmV3IHJ1blxuICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fY3VycmVudFN0ZXAgPSBzdGF0ZS5fY3VycmVudFN0ZXAgPz8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ25leHRfc3RlcF9ydW5fYWdhaW4nLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdGUuX2N1cnJlbnRTdGVwLnR5cGUgPT09ICduZXh0X3N0ZXBfaW50ZXJydXB0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKCdDb250aW51aW5nIGZyb20gaW50ZXJydXB0aW9uJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXN0YXRlLl9sYXN0VHVyblJlc3BvbnNlIHx8ICFzdGF0ZS5fbGFzdFByb2Nlc3NlZFJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFVzZXJFcnJvcignTm8gbW9kZWwgcmVzcG9uc2UgZm91bmQgaW4gcHJldmlvdXMgc3RhdGUnLCBzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0dXJuUmVzdWx0ID0gYXdhaXQgZXhlY3V0ZUludGVycnVwdGVkVG9vbHNBbmRTaWRlRWZmZWN0cyhzdGF0ZS5fY3VycmVudEFnZW50LCBzdGF0ZS5fb3JpZ2luYWxJbnB1dCwgc3RhdGUuX2dlbmVyYXRlZEl0ZW1zLCBzdGF0ZS5fbGFzdFR1cm5SZXNwb25zZSwgc3RhdGUuX2xhc3RQcm9jZXNzZWRSZXNwb25zZSwgdGhpcywgc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX3Rvb2xVc2VUcmFja2VyLmFkZFRvb2xVc2Uoc3RhdGUuX2N1cnJlbnRBZ2VudCwgc3RhdGUuX2xhc3RQcm9jZXNzZWRSZXNwb25zZS50b29sc1VzZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX29yaWdpbmFsSW5wdXQgPSB0dXJuUmVzdWx0Lm9yaWdpbmFsSW5wdXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fZ2VuZXJhdGVkSXRlbXMgPSB0dXJuUmVzdWx0LmdlbmVyYXRlZEl0ZW1zO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX2N1cnJlbnRTdGVwID0gdHVyblJlc3VsdC5uZXh0U3RlcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5fY3VycmVudFN0ZXAudHlwZSA9PT0gJ25leHRfc3RlcF9ydW5fYWdhaW4nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoYW5kb2ZmcyA9IHN0YXRlLl9jdXJyZW50QWdlbnQuaGFuZG9mZnMubWFwKGdldEhhbmRvZmYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzdGF0ZS5fY3VycmVudEFnZW50U3Bhbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhbmRvZmZOYW1lcyA9IGhhbmRvZmZzLm1hcCgoaCkgPT4gaC5hZ2VudE5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLl9jdXJyZW50QWdlbnRTcGFuID0gY3JlYXRlQWdlbnRTcGFuKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogc3RhdGUuX2N1cnJlbnRBZ2VudC5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZG9mZnM6IGhhbmRvZmZOYW1lcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dF90eXBlOiBzdGF0ZS5fY3VycmVudEFnZW50Lm91dHB1dFNjaGVtYU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX2N1cnJlbnRBZ2VudFNwYW4uc3RhcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRDdXJyZW50U3BhbihzdGF0ZS5fY3VycmVudEFnZW50U3Bhbik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0b29scyA9IGF3YWl0IHN0YXRlLl9jdXJyZW50QWdlbnQuZ2V0QWxsVG9vbHMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlcmlhbGl6ZWRUb29scyA9IHRvb2xzLm1hcCgodCkgPT4gc2VyaWFsaXplVG9vbCh0KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzZXJpYWxpemVkSGFuZG9mZnMgPSBoYW5kb2Zmcy5tYXAoKGgpID0+IHNlcmlhbGl6ZUhhbmRvZmYoaCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRlLl9jdXJyZW50QWdlbnRTcGFuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX2N1cnJlbnRBZ2VudFNwYW4uc3BhbkRhdGEudG9vbHMgPSB0b29scy5tYXAoKHQpID0+IHQubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fY3VycmVudFR1cm4rKztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5fY3VycmVudFR1cm4gPiBzdGF0ZS5fbWF4VHVybnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fY3VycmVudEFnZW50U3Bhbj8uc2V0RXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTWF4IHR1cm5zIGV4Y2VlZGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBtYXhfdHVybnM6IHN0YXRlLl9tYXhUdXJucyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBNYXhUdXJuc0V4Y2VlZGVkRXJyb3IoYE1heCB0dXJucyAoJHtzdGF0ZS5fbWF4VHVybnN9KSBleGNlZWRlZGAsIHN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhgUnVubmluZyBhZ2VudCAke3N0YXRlLl9jdXJyZW50QWdlbnQubmFtZX0gKHR1cm4gJHtzdGF0ZS5fY3VycmVudFR1cm59KWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRlLl9jdXJyZW50VHVybiA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuI3J1bklucHV0R3VhcmRyYWlscyhzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0dXJuSW5wdXQgPSBnZXRUdXJuSW5wdXQoc3RhdGUuX29yaWdpbmFsSW5wdXQsIHN0YXRlLl9nZW5lcmF0ZWRJdGVtcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdGUuX25vQWN0aXZlQWdlbnRSdW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fY3VycmVudEFnZW50LmVtaXQoJ2FnZW50X3N0YXJ0Jywgc3RhdGUuX2NvbnRleHQsIHN0YXRlLl9jdXJyZW50QWdlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZW1pdCgnYWdlbnRfc3RhcnQnLCBzdGF0ZS5fY29udGV4dCwgc3RhdGUuX2N1cnJlbnRBZ2VudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbW9kZWxTZXR0aW5ncyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi50aGlzLmNvbmZpZy5tb2RlbFNldHRpbmdzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLnN0YXRlLl9jdXJyZW50QWdlbnQubW9kZWxTZXR0aW5ncyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlbFNldHRpbmdzID0gbWF5YmVSZXNldFRvb2xDaG9pY2Uoc3RhdGUuX2N1cnJlbnRBZ2VudCwgc3RhdGUuX3Rvb2xVc2VUcmFja2VyLCBtb2RlbFNldHRpbmdzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLl9sYXN0VHVyblJlc3BvbnNlID0gYXdhaXQgbW9kZWwuZ2V0UmVzcG9uc2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN5c3RlbUluc3RydWN0aW9uczogYXdhaXQgc3RhdGUuX2N1cnJlbnRBZ2VudC5nZXRTeXN0ZW1Qcm9tcHQoc3RhdGUuX2NvbnRleHQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiB0dXJuSW5wdXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNSZXNwb25zZUlkOiBvcHRpb25zLnByZXZpb3VzUmVzcG9uc2VJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbFNldHRpbmdzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvb2xzOiBzZXJpYWxpemVkVG9vbHMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0VHlwZTogY29udmVydEFnZW50T3V0cHV0VHlwZVRvU2VyaWFsaXphYmxlKHN0YXRlLl9jdXJyZW50QWdlbnQub3V0cHV0VHlwZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZG9mZnM6IHNlcmlhbGl6ZWRIYW5kb2ZmcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFjaW5nOiBnZXRUcmFjaW5nKHRoaXMuY29uZmlnLnRyYWNpbmdEaXNhYmxlZCwgdGhpcy5jb25maWcudHJhY2VJbmNsdWRlU2Vuc2l0aXZlRGF0YSksXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLl9tb2RlbFJlc3BvbnNlcy5wdXNoKHN0YXRlLl9sYXN0VHVyblJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLl9jb250ZXh0LnVzYWdlLmFkZChzdGF0ZS5fbGFzdFR1cm5SZXNwb25zZS51c2FnZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fbm9BY3RpdmVBZ2VudFJ1biA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvY2Vzc2VkUmVzcG9uc2UgPSBwcm9jZXNzTW9kZWxSZXNwb25zZShzdGF0ZS5fbGFzdFR1cm5SZXNwb25zZSwgc3RhdGUuX2N1cnJlbnRBZ2VudCwgdG9vbHMsIGhhbmRvZmZzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLl9sYXN0UHJvY2Vzc2VkUmVzcG9uc2UgPSBwcm9jZXNzZWRSZXNwb25zZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHR1cm5SZXN1bHQgPSBhd2FpdCBleGVjdXRlVG9vbHNBbmRTaWRlRWZmZWN0cyhzdGF0ZS5fY3VycmVudEFnZW50LCBzdGF0ZS5fb3JpZ2luYWxJbnB1dCwgc3RhdGUuX2dlbmVyYXRlZEl0ZW1zLCBzdGF0ZS5fbGFzdFR1cm5SZXNwb25zZSwgc3RhdGUuX2xhc3RQcm9jZXNzZWRSZXNwb25zZSwgdGhpcywgc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX3Rvb2xVc2VUcmFja2VyLmFkZFRvb2xVc2Uoc3RhdGUuX2N1cnJlbnRBZ2VudCwgc3RhdGUuX2xhc3RQcm9jZXNzZWRSZXNwb25zZS50b29sc1VzZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX29yaWdpbmFsSW5wdXQgPSB0dXJuUmVzdWx0Lm9yaWdpbmFsSW5wdXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fZ2VuZXJhdGVkSXRlbXMgPSB0dXJuUmVzdWx0LmdlbmVyYXRlZEl0ZW1zO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX2N1cnJlbnRTdGVwID0gdHVyblJlc3VsdC5uZXh0U3RlcDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdGUuX2N1cnJlbnRTdGVwICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fY3VycmVudFN0ZXAudHlwZSA9PT0gJ25leHRfc3RlcF9maW5hbF9vdXRwdXQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLiNydW5PdXRwdXRHdWFyZHJhaWxzKHN0YXRlLCBzdGF0ZS5fY3VycmVudFN0ZXAub3V0cHV0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZW1pdCgnYWdlbnRfZW5kJywgc3RhdGUuX2NvbnRleHQsIHN0YXRlLl9jdXJyZW50QWdlbnQsIHN0YXRlLl9jdXJyZW50U3RlcC5vdXRwdXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX2N1cnJlbnRBZ2VudC5lbWl0KCdhZ2VudF9lbmQnLCBzdGF0ZS5fY29udGV4dCwgc3RhdGUuX2N1cnJlbnRTdGVwLm91dHB1dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJ1blJlc3VsdChzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoc3RhdGUuX2N1cnJlbnRTdGVwICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fY3VycmVudFN0ZXAudHlwZSA9PT0gJ25leHRfc3RlcF9oYW5kb2ZmJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX2N1cnJlbnRBZ2VudCA9IHN0YXRlLl9jdXJyZW50U3RlcC5uZXdBZ2VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5fY3VycmVudEFnZW50U3Bhbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLl9jdXJyZW50QWdlbnRTcGFuLmVuZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2V0Q3VycmVudFNwYW4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fY3VycmVudEFnZW50U3BhbiA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLl9ub0FjdGl2ZUFnZW50UnVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdlJ3ZlIHByb2Nlc3NlZCB0aGUgaGFuZG9mZiwgc28gd2UgbmVlZCB0byBydW4gdGhlIGxvb3AgYWdhaW5cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLl9jdXJyZW50U3RlcCA9IHsgdHlwZTogJ25leHRfc3RlcF9ydW5fYWdhaW4nIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoc3RhdGUuX2N1cnJlbnRTdGVwICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5fY3VycmVudFN0ZXAudHlwZSA9PT0gJ25leHRfc3RlcF9pbnRlcnJ1cHRpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBpbnRlcnJ1cHRlZC4gRG9uJ3QgcnVuIGFueSBndWFyZHJhaWxzXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJ1blJlc3VsdChzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZGVidWcoJ1J1bm5pbmcgbmV4dCBsb29wJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgaWYgKHN0YXRlLl9jdXJyZW50QWdlbnRTcGFuKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlLl9jdXJyZW50QWdlbnRTcGFuLnNldEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdFcnJvciBpbiBhZ2VudCBydW4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBlcnJvcjogU3RyaW5nKGVycikgfSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5fY3VycmVudEFnZW50U3Bhbikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdGUuX2N1cnJlbnRTdGVwPy50eXBlICE9PSAnbmV4dF9zdGVwX2ludGVycnVwdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGRvbid0IGVuZCB0aGUgc3BhbiBpZiB0aGUgcnVuIHdhcyBpbnRlcnJ1cHRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuX2N1cnJlbnRBZ2VudFNwYW4uZW5kKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzZXRDdXJyZW50U3BhbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFzeW5jICNydW5JbnB1dEd1YXJkcmFpbHMoc3RhdGUpIHtcbiAgICAgICAgY29uc3QgZ3VhcmRyYWlscyA9IHRoaXMuaW5wdXRHdWFyZHJhaWxEZWZzLmNvbmNhdChzdGF0ZS5fY3VycmVudEFnZW50LmlucHV0R3VhcmRyYWlscy5tYXAoZGVmaW5lSW5wdXRHdWFyZHJhaWwpKTtcbiAgICAgICAgaWYgKGd1YXJkcmFpbHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgY29uc3QgZ3VhcmRyYWlsQXJncyA9IHtcbiAgICAgICAgICAgICAgICBhZ2VudDogc3RhdGUuX2N1cnJlbnRBZ2VudCxcbiAgICAgICAgICAgICAgICBpbnB1dDogc3RhdGUuX29yaWdpbmFsSW5wdXQsXG4gICAgICAgICAgICAgICAgY29udGV4dDogc3RhdGUuX2NvbnRleHQsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGwoZ3VhcmRyYWlscy5tYXAoYXN5bmMgKGd1YXJkcmFpbCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2l0aEd1YXJkcmFpbFNwYW4oYXN5bmMgKHNwYW4pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGd1YXJkcmFpbC5ydW4oZ3VhcmRyYWlsQXJncyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcGFuLnNwYW5EYXRhLnRyaWdnZXJlZCA9IHJlc3VsdC5vdXRwdXQudHJpcHdpcmVUcmlnZ2VyZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgICAgICAgICB9LCB7IGRhdGE6IHsgbmFtZTogZ3VhcmRyYWlsLm5hbWUgfSB9LCBzdGF0ZS5fY3VycmVudEFnZW50U3Bhbik7XG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIHJlc3VsdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5vdXRwdXQudHJpcHdpcmVUcmlnZ2VyZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5fY3VycmVudEFnZW50U3Bhbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLl9jdXJyZW50QWdlbnRTcGFuLnNldEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0d1YXJkcmFpbCB0cmlwd2lyZSB0cmlnZ2VyZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGd1YXJkcmFpbDogcmVzdWx0Lmd1YXJkcmFpbC5uYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgSW5wdXRHdWFyZHJhaWxUcmlwd2lyZVRyaWdnZXJlZChgSW5wdXQgZ3VhcmRyYWlsIHRyaWdnZXJlZDogJHtKU09OLnN0cmluZ2lmeShyZXN1bHQub3V0cHV0Lm91dHB1dEluZm8pfWAsIHJlc3VsdCwgc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIElucHV0R3VhcmRyYWlsVHJpcHdpcmVUcmlnZ2VyZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gcm9sbCBiYWNrIHRoZSBjdXJyZW50IHR1cm4gdG8gZW5hYmxlIHJlcnVuc1xuICAgICAgICAgICAgICAgIHN0YXRlLl9jdXJyZW50VHVybi0tO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBHdWFyZHJhaWxFeGVjdXRpb25FcnJvcihgSW5wdXQgZ3VhcmRyYWlsIGZhaWxlZCB0byBjb21wbGV0ZTogJHtlfWAsIGUsIHN0YXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyAjcnVuT3V0cHV0R3VhcmRyYWlscyhzdGF0ZSwgb3V0cHV0KSB7XG4gICAgICAgIGNvbnN0IGd1YXJkcmFpbHMgPSB0aGlzLm91dHB1dEd1YXJkcmFpbERlZnMuY29uY2F0KHN0YXRlLl9jdXJyZW50QWdlbnQub3V0cHV0R3VhcmRyYWlscy5tYXAoZGVmaW5lT3V0cHV0R3VhcmRyYWlsKSk7XG4gICAgICAgIGlmIChndWFyZHJhaWxzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGNvbnN0IGFnZW50T3V0cHV0ID0gc3RhdGUuX2N1cnJlbnRBZ2VudC5wcm9jZXNzRmluYWxPdXRwdXQob3V0cHV0KTtcbiAgICAgICAgICAgIGNvbnN0IGd1YXJkcmFpbEFyZ3MgPSB7XG4gICAgICAgICAgICAgICAgYWdlbnQ6IHN0YXRlLl9jdXJyZW50QWdlbnQsXG4gICAgICAgICAgICAgICAgYWdlbnRPdXRwdXQsXG4gICAgICAgICAgICAgICAgY29udGV4dDogc3RhdGUuX2NvbnRleHQsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGwoZ3VhcmRyYWlscy5tYXAoYXN5bmMgKGd1YXJkcmFpbCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2l0aEd1YXJkcmFpbFNwYW4oYXN5bmMgKHNwYW4pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGd1YXJkcmFpbC5ydW4oZ3VhcmRyYWlsQXJncyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcGFuLnNwYW5EYXRhLnRyaWdnZXJlZCA9IHJlc3VsdC5vdXRwdXQudHJpcHdpcmVUcmlnZ2VyZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgICAgICAgICB9LCB7IGRhdGE6IHsgbmFtZTogZ3VhcmRyYWlsLm5hbWUgfSB9LCBzdGF0ZS5fY3VycmVudEFnZW50U3Bhbik7XG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIHJlc3VsdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5vdXRwdXQudHJpcHdpcmVUcmlnZ2VyZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5fY3VycmVudEFnZW50U3Bhbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLl9jdXJyZW50QWdlbnRTcGFuLnNldEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0d1YXJkcmFpbCB0cmlwd2lyZSB0cmlnZ2VyZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGd1YXJkcmFpbDogcmVzdWx0Lmd1YXJkcmFpbC5uYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgT3V0cHV0R3VhcmRyYWlsVHJpcHdpcmVUcmlnZ2VyZWQoYE91dHB1dCBndWFyZHJhaWwgdHJpZ2dlcmVkOiAke0pTT04uc3RyaW5naWZ5KHJlc3VsdC5vdXRwdXQub3V0cHV0SW5mbyl9YCwgcmVzdWx0LCBzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgT3V0cHV0R3VhcmRyYWlsVHJpcHdpcmVUcmlnZ2VyZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEd1YXJkcmFpbEV4ZWN1dGlvbkVycm9yKGBPdXRwdXQgZ3VhcmRyYWlsIGZhaWxlZCB0byBjb21wbGV0ZTogJHtlfWAsIGUsIHN0YXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyAjcnVuU3RyZWFtTG9vcChyZXN1bHQsIG9wdGlvbnMpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY3VycmVudEFnZW50ID0gcmVzdWx0LnN0YXRlLl9jdXJyZW50QWdlbnQ7XG4gICAgICAgICAgICAgICAgY29uc3QgaGFuZG9mZnMgPSBjdXJyZW50QWdlbnQuaGFuZG9mZnMubWFwKGdldEhhbmRvZmYpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xzID0gYXdhaXQgY3VycmVudEFnZW50LmdldEFsbFRvb2xzKCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2VyaWFsaXplZFRvb2xzID0gdG9vbHMubWFwKCh0KSA9PiBzZXJpYWxpemVUb29sKHQpKTtcbiAgICAgICAgICAgICAgICBjb25zdCBzZXJpYWxpemVkSGFuZG9mZnMgPSBoYW5kb2Zmcy5tYXAoKGgpID0+IHNlcmlhbGl6ZUhhbmRvZmYoaCkpO1xuICAgICAgICAgICAgICAgIHJlc3VsdC5zdGF0ZS5fY3VycmVudFN0ZXAgPSByZXN1bHQuc3RhdGUuX2N1cnJlbnRTdGVwID8/IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ25leHRfc3RlcF9ydW5fYWdhaW4nLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5zdGF0ZS5fY3VycmVudFN0ZXAudHlwZSA9PT0gJ25leHRfc3RlcF9pbnRlcnJ1cHRpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZygnQ29udGludWluZyBmcm9tIGludGVycnVwdGlvbicpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdC5zdGF0ZS5fbGFzdFR1cm5SZXNwb25zZSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgIXJlc3VsdC5zdGF0ZS5fbGFzdFByb2Nlc3NlZFJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVXNlckVycm9yKCdObyBtb2RlbCByZXNwb25zZSBmb3VuZCBpbiBwcmV2aW91cyBzdGF0ZScsIHJlc3VsdC5zdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHVyblJlc3VsdCA9IGF3YWl0IGV4ZWN1dGVJbnRlcnJ1cHRlZFRvb2xzQW5kU2lkZUVmZmVjdHMocmVzdWx0LnN0YXRlLl9jdXJyZW50QWdlbnQsIHJlc3VsdC5zdGF0ZS5fb3JpZ2luYWxJbnB1dCwgcmVzdWx0LnN0YXRlLl9nZW5lcmF0ZWRJdGVtcywgcmVzdWx0LnN0YXRlLl9sYXN0VHVyblJlc3BvbnNlLCByZXN1bHQuc3RhdGUuX2xhc3RQcm9jZXNzZWRSZXNwb25zZSwgdGhpcywgcmVzdWx0LnN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgYWRkU3RlcFRvUnVuUmVzdWx0KHJlc3VsdCwgdHVyblJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5zdGF0ZS5fdG9vbFVzZVRyYWNrZXIuYWRkVG9vbFVzZShyZXN1bHQuc3RhdGUuX2N1cnJlbnRBZ2VudCwgcmVzdWx0LnN0YXRlLl9sYXN0UHJvY2Vzc2VkUmVzcG9uc2UudG9vbHNVc2VkKTtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl9vcmlnaW5hbElucHV0ID0gdHVyblJlc3VsdC5vcmlnaW5hbElucHV0O1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQuc3RhdGUuX2dlbmVyYXRlZEl0ZW1zID0gdHVyblJlc3VsdC5nZW5lcmF0ZWRJdGVtcztcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl9jdXJyZW50U3RlcCA9IHR1cm5SZXN1bHQubmV4dFN0ZXA7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnN0YXRlLl9jdXJyZW50U3RlcC50eXBlID09PSAnbmV4dF9zdGVwX3J1bl9hZ2FpbicpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXN1bHQuc3RhdGUuX2N1cnJlbnRBZ2VudFNwYW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhbmRvZmZOYW1lcyA9IGhhbmRvZmZzLm1hcCgoaCkgPT4gaC5hZ2VudE5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl9jdXJyZW50QWdlbnRTcGFuID0gY3JlYXRlQWdlbnRTcGFuKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGN1cnJlbnRBZ2VudC5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kb2ZmczogaGFuZG9mZk5hbWVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sczogdG9vbHMubWFwKCh0KSA9PiB0Lm5hbWUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRfdHlwZTogY3VycmVudEFnZW50Lm91dHB1dFNjaGVtYU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl9jdXJyZW50QWdlbnRTcGFuLnN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRDdXJyZW50U3BhbihyZXN1bHQuc3RhdGUuX2N1cnJlbnRBZ2VudFNwYW4pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5zdGF0ZS5fY3VycmVudFR1cm4rKztcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5zdGF0ZS5fY3VycmVudFR1cm4gPiByZXN1bHQuc3RhdGUuX21heFR1cm5zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuc3RhdGUuX2N1cnJlbnRBZ2VudFNwYW4/LnNldEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTWF4IHR1cm5zIGV4Y2VlZGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IG1heF90dXJuczogcmVzdWx0LnN0YXRlLl9tYXhUdXJucyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgTWF4VHVybnNFeGNlZWRlZEVycm9yKGBNYXggdHVybnMgKCR7cmVzdWx0LnN0YXRlLl9tYXhUdXJuc30pIGV4Y2VlZGVkYCwgcmVzdWx0LnN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZGVidWcoYFJ1bm5pbmcgYWdlbnQgJHtjdXJyZW50QWdlbnQubmFtZX0gKHR1cm4gJHtyZXN1bHQuc3RhdGUuX2N1cnJlbnRUdXJufSlgKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG1vZGVsID0gY3VycmVudEFnZW50Lm1vZGVsID8/IHRoaXMuY29uZmlnLm1vZGVsO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1vZGVsID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwgPSBhd2FpdCB0aGlzLmNvbmZpZy5tb2RlbFByb3ZpZGVyLmdldE1vZGVsKG1vZGVsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnN0YXRlLl9jdXJyZW50VHVybiA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy4jcnVuSW5wdXRHdWFyZHJhaWxzKHJlc3VsdC5zdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbGV0IG1vZGVsU2V0dGluZ3MgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAuLi50aGlzLmNvbmZpZy5tb2RlbFNldHRpbmdzLFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uY3VycmVudEFnZW50Lm1vZGVsU2V0dGluZ3MsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIG1vZGVsU2V0dGluZ3MgPSBtYXliZVJlc2V0VG9vbENob2ljZShjdXJyZW50QWdlbnQsIHJlc3VsdC5zdGF0ZS5fdG9vbFVzZVRyYWNrZXIsIG1vZGVsU2V0dGluZ3MpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0dXJuSW5wdXQgPSBnZXRUdXJuSW5wdXQocmVzdWx0LmlucHV0LCByZXN1bHQubmV3SXRlbXMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnN0YXRlLl9ub0FjdGl2ZUFnZW50UnVuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50QWdlbnQuZW1pdCgnYWdlbnRfc3RhcnQnLCByZXN1bHQuc3RhdGUuX2NvbnRleHQsIGN1cnJlbnRBZ2VudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVtaXQoJ2FnZW50X3N0YXJ0JywgcmVzdWx0LnN0YXRlLl9jb250ZXh0LCBjdXJyZW50QWdlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGxldCBmaW5hbFJlc3BvbnNlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGV2ZW50IG9mIG1vZGVsLmdldFN0cmVhbWVkUmVzcG9uc2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgc3lzdGVtSW5zdHJ1Y3Rpb25zOiBhd2FpdCBjdXJyZW50QWdlbnQuZ2V0U3lzdGVtUHJvbXB0KHJlc3VsdC5zdGF0ZS5fY29udGV4dCksXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogdHVybklucHV0LFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNSZXNwb25zZUlkOiBvcHRpb25zLnByZXZpb3VzUmVzcG9uc2VJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsU2V0dGluZ3MsXG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sczogc2VyaWFsaXplZFRvb2xzLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZG9mZnM6IHNlcmlhbGl6ZWRIYW5kb2ZmcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFR5cGU6IGNvbnZlcnRBZ2VudE91dHB1dFR5cGVUb1NlcmlhbGl6YWJsZShjdXJyZW50QWdlbnQub3V0cHV0VHlwZSksXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFjaW5nOiBnZXRUcmFjaW5nKHRoaXMuY29uZmlnLnRyYWNpbmdEaXNhYmxlZCwgdGhpcy5jb25maWcudHJhY2VJbmNsdWRlU2Vuc2l0aXZlRGF0YSksXG4gICAgICAgICAgICAgICAgICAgIH0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ3Jlc3BvbnNlX2RvbmUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkID0gU3RyZWFtRXZlbnRSZXNwb25zZUNvbXBsZXRlZC5wYXJzZShldmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxSZXNwb25zZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNhZ2U6IG5ldyBVc2FnZShwYXJzZWQucmVzcG9uc2UudXNhZ2UpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXQ6IHBhcnNlZC5yZXNwb25zZS5vdXRwdXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlSWQ6IHBhcnNlZC5yZXNwb25zZS5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5jYW5jZWxsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBXaGVuIHRoZSB1c2VyJ3MgY29kZSBleGl0cyBhIGxvb3AgdG8gY29uc3VtZSB0aGUgc3RyZWFtLCB3ZSBuZWVkIHRvIGJyZWFrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBsb29wIHRvIHByZXZlbnQgaW50ZXJuYWwgZmFsc2UgZXJyb3JzIGFuZCB1bm5lY2Vzc2FyeSBwcm9jZXNzaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0Ll9hZGRJdGVtKG5ldyBSdW5SYXdNb2RlbFN0cmVhbUV2ZW50KGV2ZW50KSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl9ub0FjdGl2ZUFnZW50UnVuID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZmluYWxSZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IE1vZGVsQmVoYXZpb3JFcnJvcignTW9kZWwgZGlkIG5vdCBwcm9jdWRlIGEgZmluYWwgcmVzcG9uc2UhJywgcmVzdWx0LnN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXN1bHQuc3RhdGUuX2xhc3RUdXJuUmVzcG9uc2UgPSBmaW5hbFJlc3BvbnNlO1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQuc3RhdGUuX21vZGVsUmVzcG9uc2VzLnB1c2gocmVzdWx0LnN0YXRlLl9sYXN0VHVyblJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvY2Vzc2VkUmVzcG9uc2UgPSBwcm9jZXNzTW9kZWxSZXNwb25zZShyZXN1bHQuc3RhdGUuX2xhc3RUdXJuUmVzcG9uc2UsIGN1cnJlbnRBZ2VudCwgdG9vbHMsIGhhbmRvZmZzKTtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl9sYXN0UHJvY2Vzc2VkUmVzcG9uc2UgPSBwcm9jZXNzZWRSZXNwb25zZTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHVyblJlc3VsdCA9IGF3YWl0IGV4ZWN1dGVUb29sc0FuZFNpZGVFZmZlY3RzKGN1cnJlbnRBZ2VudCwgcmVzdWx0LnN0YXRlLl9vcmlnaW5hbElucHV0LCByZXN1bHQuc3RhdGUuX2dlbmVyYXRlZEl0ZW1zLCByZXN1bHQuc3RhdGUuX2xhc3RUdXJuUmVzcG9uc2UsIHJlc3VsdC5zdGF0ZS5fbGFzdFByb2Nlc3NlZFJlc3BvbnNlLCB0aGlzLCByZXN1bHQuc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICBhZGRTdGVwVG9SdW5SZXN1bHQocmVzdWx0LCB0dXJuUmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl90b29sVXNlVHJhY2tlci5hZGRUb29sVXNlKGN1cnJlbnRBZ2VudCwgcHJvY2Vzc2VkUmVzcG9uc2UudG9vbHNVc2VkKTtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl9vcmlnaW5hbElucHV0ID0gdHVyblJlc3VsdC5vcmlnaW5hbElucHV0O1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQuc3RhdGUuX2dlbmVyYXRlZEl0ZW1zID0gdHVyblJlc3VsdC5nZW5lcmF0ZWRJdGVtcztcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl9jdXJyZW50U3RlcCA9IHR1cm5SZXN1bHQubmV4dFN0ZXA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuc3RhdGUuX2N1cnJlbnRTdGVwLnR5cGUgPT09ICduZXh0X3N0ZXBfZmluYWxfb3V0cHV0Jykge1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLiNydW5PdXRwdXRHdWFyZHJhaWxzKHJlc3VsdC5zdGF0ZSwgcmVzdWx0LnN0YXRlLl9jdXJyZW50U3RlcC5vdXRwdXQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHJlc3VsdC5zdGF0ZS5fY3VycmVudFN0ZXAudHlwZSA9PT0gJ25leHRfc3RlcF9pbnRlcnJ1cHRpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHdlIGFyZSBkb25lIGZvciBub3cuIERvbid0IHJ1biBhbnkgb3V0cHV0IGd1YXJkcmFpbHNcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChyZXN1bHQuc3RhdGUuX2N1cnJlbnRTdGVwLnR5cGUgPT09ICduZXh0X3N0ZXBfaGFuZG9mZicpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl9jdXJyZW50QWdlbnQgPSByZXN1bHQuc3RhdGUuX2N1cnJlbnRTdGVwXG4gICAgICAgICAgICAgICAgICAgICAgICA/Lm5ld0FnZW50O1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnN0YXRlLl9jdXJyZW50QWdlbnRTcGFuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuc3RhdGUuX2N1cnJlbnRBZ2VudFNwYW4uZW5kKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNldEN1cnJlbnRTcGFuKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRlLl9jdXJyZW50QWdlbnRTcGFuID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQuX2FkZEl0ZW0obmV3IFJ1bkFnZW50VXBkYXRlZFN0cmVhbUV2ZW50KGN1cnJlbnRBZ2VudCkpO1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQuc3RhdGUuX25vQWN0aXZlQWdlbnRSdW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAvLyB3ZSd2ZSBwcm9jZXNzZWQgdGhlIGhhbmRvZmYsIHNvIHdlIG5lZWQgdG8gcnVuIHRoZSBsb29wIGFnYWluXG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5zdGF0ZS5fY3VycmVudFN0ZXAgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnbmV4dF9zdGVwX3J1bl9hZ2FpbicsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZGVidWcoJ1J1bm5pbmcgbmV4dCBsb29wJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKHJlc3VsdC5zdGF0ZS5fY3VycmVudEFnZW50U3Bhbikge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5zdGF0ZS5fY3VycmVudEFnZW50U3Bhbi5zZXRFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdFcnJvciBpbiBhZ2VudCBydW4nLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGVycm9yOiBTdHJpbmcoZXJyb3IpIH0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQuc3RhdGUuX2N1cnJlbnRBZ2VudFNwYW4pIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnN0YXRlLl9jdXJyZW50U3RlcD8udHlwZSAhPT0gJ25leHRfc3RlcF9pbnRlcnJ1cHRpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5zdGF0ZS5fY3VycmVudEFnZW50U3Bhbi5lbmQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzZXRDdXJyZW50U3BhbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jICNydW5JbmRpdmlkdWFsU3RyZWFtKGFnZW50LCBpbnB1dCwgb3B0aW9ucykge1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyA/PyB7fTtcbiAgICAgICAgcmV0dXJuIHdpdGhOZXdTcGFuQ29udGV4dChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICAvLyBJbml0aWFsaXplIG9yIHJldXNlIGV4aXN0aW5nIHN0YXRlXG4gICAgICAgICAgICBjb25zdCBzdGF0ZSA9IGlucHV0IGluc3RhbmNlb2YgUnVuU3RhdGVcbiAgICAgICAgICAgICAgICA/IGlucHV0XG4gICAgICAgICAgICAgICAgOiBuZXcgUnVuU3RhdGUob3B0aW9ucy5jb250ZXh0IGluc3RhbmNlb2YgUnVuQ29udGV4dFxuICAgICAgICAgICAgICAgICAgICA/IG9wdGlvbnMuY29udGV4dFxuICAgICAgICAgICAgICAgICAgICA6IG5ldyBSdW5Db250ZXh0KG9wdGlvbnMuY29udGV4dCksIGlucHV0LCBhZ2VudCwgb3B0aW9ucy5tYXhUdXJucyA/PyBERUZBVUxUX01BWF9UVVJOUyk7XG4gICAgICAgICAgICAvLyBJbml0aWFsaXplIHRoZSBzdHJlYW1lZCByZXN1bHQgd2l0aCBleGlzdGluZyBzdGF0ZVxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IFN0cmVhbWVkUnVuUmVzdWx0KHtcbiAgICAgICAgICAgICAgICBzaWduYWw6IG9wdGlvbnMuc2lnbmFsLFxuICAgICAgICAgICAgICAgIHN0YXRlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyBTZXR1cCBkZWZhdWx0c1xuICAgICAgICAgICAgcmVzdWx0Lm1heFR1cm5zID0gb3B0aW9ucy5tYXhUdXJucyA/PyBzdGF0ZS5fbWF4VHVybnM7XG4gICAgICAgICAgICAvLyBDb250aW51ZSB0aGUgc3RyZWFtIGxvb3Agd2l0aG91dCBibG9ja2luZ1xuICAgICAgICAgICAgdGhpcy4jcnVuU3RyZWFtTG9vcChyZXN1bHQsIG9wdGlvbnMpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5fZG9uZSgpO1xuICAgICAgICAgICAgfSwgKGVycikgPT4ge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5fcmFpc2VFcnJvcihlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcnVuKGFnZW50LCBpbnB1dCwgb3B0aW9ucyA9IHtcbiAgICAgICAgc3RyZWFtOiBmYWxzZSxcbiAgICAgICAgY29udGV4dDogdW5kZWZpbmVkLFxuICAgIH0pIHtcbiAgICAgICAgaWYgKGlucHV0IGluc3RhbmNlb2YgUnVuU3RhdGUgJiYgaW5wdXQuX3RyYWNlKSB7XG4gICAgICAgICAgICByZXR1cm4gd2l0aFRyYWNlKGlucHV0Ll90cmFjZSwgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChpbnB1dC5fY3VycmVudEFnZW50U3Bhbikge1xuICAgICAgICAgICAgICAgICAgICBzZXRDdXJyZW50U3BhbihpbnB1dC5fY3VycmVudEFnZW50U3Bhbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChvcHRpb25zPy5zdHJlYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuI3J1bkluZGl2aWR1YWxTdHJlYW0oYWdlbnQsIGlucHV0LCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiNydW5JbmRpdmlkdWFsTm9uU3RyZWFtKGFnZW50LCBpbnB1dCwgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGdldE9yQ3JlYXRlVHJhY2UoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnM/LnN0cmVhbSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiNydW5JbmRpdmlkdWFsU3RyZWFtKGFnZW50LCBpbnB1dCwgb3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4jcnVuSW5kaXZpZHVhbE5vblN0cmVhbShhZ2VudCwgaW5wdXQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG5sZXQgX2RlZmF1bHRSdW5uZXIgPSB1bmRlZmluZWQ7XG5mdW5jdGlvbiBnZXREZWZhdWx0UnVubmVyKCkge1xuICAgIGlmIChfZGVmYXVsdFJ1bm5lcikge1xuICAgICAgICByZXR1cm4gX2RlZmF1bHRSdW5uZXI7XG4gICAgfVxuICAgIF9kZWZhdWx0UnVubmVyID0gbmV3IFJ1bm5lcigpO1xuICAgIHJldHVybiBfZGVmYXVsdFJ1bm5lcjtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBydW4oYWdlbnQsIGlucHV0LCBvcHRpb25zKSB7XG4gICAgY29uc3QgcnVubmVyID0gZ2V0RGVmYXVsdFJ1bm5lcigpO1xuICAgIGlmIChvcHRpb25zPy5zdHJlYW0pIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJ1bm5lci5ydW4oYWdlbnQsIGlucHV0LCBvcHRpb25zKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBhd2FpdCBydW5uZXIucnVuKGFnZW50LCBpbnB1dCwgb3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cnVuLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/run.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runContext.mjs":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runContext.mjs ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunContext: () => (/* binding */ RunContext)\n/* harmony export */ });\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _usage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./usage.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/usage.mjs\");\n\n\n/**\n * A context object that is passed to the `Runner.run()` method.\n */\nclass RunContext {\n    /**\n     * The context object passed by you to the `Runner.run()`\n     */\n    context;\n    /**\n     * The usage of the agent run so far. For streamed responses, the usage will be stale until the\n     * last chunk of the stream is processed.\n     */\n    usage;\n    /**\n     * A map of tool names to whether they have been approved.\n     */\n    #approvals;\n    constructor(context = {}) {\n        this.context = context;\n        this.usage = new _usage_mjs__WEBPACK_IMPORTED_MODULE_1__.Usage();\n        this.#approvals = new Map();\n    }\n    /**\n     * Rebuild the approvals map from a serialized state.\n     * @internal\n     *\n     * @param approvals - The approvals map to rebuild.\n     */\n    _rebuildApprovals(approvals) {\n        this.#approvals = new Map(Object.entries(approvals));\n    }\n    /**\n     * Check if a tool call has been approved.\n     *\n     * @param toolName - The name of the tool.\n     * @param callId - The call ID of the tool call.\n     * @returns `true` if the tool call has been approved, `false` if blocked and `undefined` if not yet approved or rejected.\n     */\n    isToolApproved({ toolName, callId }) {\n        const approvalEntry = this.#approvals.get(toolName);\n        if (approvalEntry?.approved === true && approvalEntry.rejected === true) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn('Tool is permanently approved and rejected at the same time. Approval takes precedence');\n            return true;\n        }\n        if (approvalEntry?.approved === true) {\n            return true;\n        }\n        if (approvalEntry?.rejected === true) {\n            return false;\n        }\n        const individualCallApproval = Array.isArray(approvalEntry?.approved)\n            ? approvalEntry.approved.includes(callId)\n            : false;\n        const individualCallRejection = Array.isArray(approvalEntry?.rejected)\n            ? approvalEntry.rejected.includes(callId)\n            : false;\n        if (individualCallApproval && individualCallRejection) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn(`Tool call ${callId} is both approved and rejected at the same time. Approval takes precedence`);\n            return true;\n        }\n        if (individualCallApproval) {\n            return true;\n        }\n        if (individualCallRejection) {\n            return false;\n        }\n        return undefined;\n    }\n    /**\n     * Approve a tool call.\n     *\n     * @param toolName - The name of the tool.\n     * @param callId - The call ID of the tool call.\n     */\n    approveTool(approvalItem, { alwaysApprove = false } = {}) {\n        const toolName = approvalItem.rawItem.name;\n        if (alwaysApprove) {\n            this.#approvals.set(toolName, {\n                approved: true,\n                rejected: [],\n            });\n            return;\n        }\n        const approvalEntry = this.#approvals.get(toolName) ?? {\n            approved: [],\n            rejected: [],\n        };\n        if (Array.isArray(approvalEntry.approved)) {\n            approvalEntry.approved.push(approvalItem.rawItem.callId);\n        }\n        this.#approvals.set(toolName, approvalEntry);\n    }\n    /**\n     * Reject a tool call.\n     *\n     * @param approvalItem - The tool approval item to reject.\n     */\n    rejectTool(approvalItem, { alwaysReject = false } = {}) {\n        const toolName = approvalItem.rawItem.name;\n        if (alwaysReject) {\n            this.#approvals.set(toolName, {\n                approved: false,\n                rejected: true,\n            });\n            return;\n        }\n        const approvalEntry = this.#approvals.get(toolName) ?? {\n            approved: [],\n            rejected: [],\n        };\n        if (Array.isArray(approvalEntry.rejected)) {\n            approvalEntry.rejected.push(approvalItem.rawItem.callId);\n        }\n        this.#approvals.set(toolName, approvalEntry);\n    }\n    toJSON() {\n        return {\n            context: this.context,\n            usage: this.usage,\n            approvals: Object.fromEntries(this.#approvals.entries()),\n        };\n    }\n}\n//# sourceMappingURL=runContext.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9ydW5Db250ZXh0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDRTtBQUNwQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0EseUJBQXlCLDZDQUFLO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixrQkFBa0I7QUFDdkM7QUFDQTtBQUNBLFlBQVksbURBQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtREFBTSxtQkFBbUIsUUFBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx3QkFBd0IsSUFBSTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHVCQUF1QixJQUFJO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9ydW5Db250ZXh0Lm1qcz81ODYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2dnZXIgZnJvbSBcIi4vbG9nZ2VyLm1qc1wiO1xuaW1wb3J0IHsgVXNhZ2UgfSBmcm9tIFwiLi91c2FnZS5tanNcIjtcbi8qKlxuICogQSBjb250ZXh0IG9iamVjdCB0aGF0IGlzIHBhc3NlZCB0byB0aGUgYFJ1bm5lci5ydW4oKWAgbWV0aG9kLlxuICovXG5leHBvcnQgY2xhc3MgUnVuQ29udGV4dCB7XG4gICAgLyoqXG4gICAgICogVGhlIGNvbnRleHQgb2JqZWN0IHBhc3NlZCBieSB5b3UgdG8gdGhlIGBSdW5uZXIucnVuKClgXG4gICAgICovXG4gICAgY29udGV4dDtcbiAgICAvKipcbiAgICAgKiBUaGUgdXNhZ2Ugb2YgdGhlIGFnZW50IHJ1biBzbyBmYXIuIEZvciBzdHJlYW1lZCByZXNwb25zZXMsIHRoZSB1c2FnZSB3aWxsIGJlIHN0YWxlIHVudGlsIHRoZVxuICAgICAqIGxhc3QgY2h1bmsgb2YgdGhlIHN0cmVhbSBpcyBwcm9jZXNzZWQuXG4gICAgICovXG4gICAgdXNhZ2U7XG4gICAgLyoqXG4gICAgICogQSBtYXAgb2YgdG9vbCBuYW1lcyB0byB3aGV0aGVyIHRoZXkgaGF2ZSBiZWVuIGFwcHJvdmVkLlxuICAgICAqL1xuICAgICNhcHByb3ZhbHM7XG4gICAgY29uc3RydWN0b3IoY29udGV4dCA9IHt9KSB7XG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XG4gICAgICAgIHRoaXMudXNhZ2UgPSBuZXcgVXNhZ2UoKTtcbiAgICAgICAgdGhpcy4jYXBwcm92YWxzID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWJ1aWxkIHRoZSBhcHByb3ZhbHMgbWFwIGZyb20gYSBzZXJpYWxpemVkIHN0YXRlLlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqXG4gICAgICogQHBhcmFtIGFwcHJvdmFscyAtIFRoZSBhcHByb3ZhbHMgbWFwIHRvIHJlYnVpbGQuXG4gICAgICovXG4gICAgX3JlYnVpbGRBcHByb3ZhbHMoYXBwcm92YWxzKSB7XG4gICAgICAgIHRoaXMuI2FwcHJvdmFscyA9IG5ldyBNYXAoT2JqZWN0LmVudHJpZXMoYXBwcm92YWxzKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIGEgdG9vbCBjYWxsIGhhcyBiZWVuIGFwcHJvdmVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIHRvb2xOYW1lIC0gVGhlIG5hbWUgb2YgdGhlIHRvb2wuXG4gICAgICogQHBhcmFtIGNhbGxJZCAtIFRoZSBjYWxsIElEIG9mIHRoZSB0b29sIGNhbGwuXG4gICAgICogQHJldHVybnMgYHRydWVgIGlmIHRoZSB0b29sIGNhbGwgaGFzIGJlZW4gYXBwcm92ZWQsIGBmYWxzZWAgaWYgYmxvY2tlZCBhbmQgYHVuZGVmaW5lZGAgaWYgbm90IHlldCBhcHByb3ZlZCBvciByZWplY3RlZC5cbiAgICAgKi9cbiAgICBpc1Rvb2xBcHByb3ZlZCh7IHRvb2xOYW1lLCBjYWxsSWQgfSkge1xuICAgICAgICBjb25zdCBhcHByb3ZhbEVudHJ5ID0gdGhpcy4jYXBwcm92YWxzLmdldCh0b29sTmFtZSk7XG4gICAgICAgIGlmIChhcHByb3ZhbEVudHJ5Py5hcHByb3ZlZCA9PT0gdHJ1ZSAmJiBhcHByb3ZhbEVudHJ5LnJlamVjdGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBsb2dnZXIud2FybignVG9vbCBpcyBwZXJtYW5lbnRseSBhcHByb3ZlZCBhbmQgcmVqZWN0ZWQgYXQgdGhlIHNhbWUgdGltZS4gQXBwcm92YWwgdGFrZXMgcHJlY2VkZW5jZScpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFwcHJvdmFsRW50cnk/LmFwcHJvdmVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXBwcm92YWxFbnRyeT8ucmVqZWN0ZWQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpbmRpdmlkdWFsQ2FsbEFwcHJvdmFsID0gQXJyYXkuaXNBcnJheShhcHByb3ZhbEVudHJ5Py5hcHByb3ZlZClcbiAgICAgICAgICAgID8gYXBwcm92YWxFbnRyeS5hcHByb3ZlZC5pbmNsdWRlcyhjYWxsSWQpXG4gICAgICAgICAgICA6IGZhbHNlO1xuICAgICAgICBjb25zdCBpbmRpdmlkdWFsQ2FsbFJlamVjdGlvbiA9IEFycmF5LmlzQXJyYXkoYXBwcm92YWxFbnRyeT8ucmVqZWN0ZWQpXG4gICAgICAgICAgICA/IGFwcHJvdmFsRW50cnkucmVqZWN0ZWQuaW5jbHVkZXMoY2FsbElkKVxuICAgICAgICAgICAgOiBmYWxzZTtcbiAgICAgICAgaWYgKGluZGl2aWR1YWxDYWxsQXBwcm92YWwgJiYgaW5kaXZpZHVhbENhbGxSZWplY3Rpb24pIHtcbiAgICAgICAgICAgIGxvZ2dlci53YXJuKGBUb29sIGNhbGwgJHtjYWxsSWR9IGlzIGJvdGggYXBwcm92ZWQgYW5kIHJlamVjdGVkIGF0IHRoZSBzYW1lIHRpbWUuIEFwcHJvdmFsIHRha2VzIHByZWNlZGVuY2VgKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbmRpdmlkdWFsQ2FsbEFwcHJvdmFsKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaW5kaXZpZHVhbENhbGxSZWplY3Rpb24pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBcHByb3ZlIGEgdG9vbCBjYWxsLlxuICAgICAqXG4gICAgICogQHBhcmFtIHRvb2xOYW1lIC0gVGhlIG5hbWUgb2YgdGhlIHRvb2wuXG4gICAgICogQHBhcmFtIGNhbGxJZCAtIFRoZSBjYWxsIElEIG9mIHRoZSB0b29sIGNhbGwuXG4gICAgICovXG4gICAgYXBwcm92ZVRvb2woYXBwcm92YWxJdGVtLCB7IGFsd2F5c0FwcHJvdmUgPSBmYWxzZSB9ID0ge30pIHtcbiAgICAgICAgY29uc3QgdG9vbE5hbWUgPSBhcHByb3ZhbEl0ZW0ucmF3SXRlbS5uYW1lO1xuICAgICAgICBpZiAoYWx3YXlzQXBwcm92ZSkge1xuICAgICAgICAgICAgdGhpcy4jYXBwcm92YWxzLnNldCh0b29sTmFtZSwge1xuICAgICAgICAgICAgICAgIGFwcHJvdmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIHJlamVjdGVkOiBbXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFwcHJvdmFsRW50cnkgPSB0aGlzLiNhcHByb3ZhbHMuZ2V0KHRvb2xOYW1lKSA/PyB7XG4gICAgICAgICAgICBhcHByb3ZlZDogW10sXG4gICAgICAgICAgICByZWplY3RlZDogW10sXG4gICAgICAgIH07XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGFwcHJvdmFsRW50cnkuYXBwcm92ZWQpKSB7XG4gICAgICAgICAgICBhcHByb3ZhbEVudHJ5LmFwcHJvdmVkLnB1c2goYXBwcm92YWxJdGVtLnJhd0l0ZW0uY2FsbElkKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLiNhcHByb3ZhbHMuc2V0KHRvb2xOYW1lLCBhcHByb3ZhbEVudHJ5KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVqZWN0IGEgdG9vbCBjYWxsLlxuICAgICAqXG4gICAgICogQHBhcmFtIGFwcHJvdmFsSXRlbSAtIFRoZSB0b29sIGFwcHJvdmFsIGl0ZW0gdG8gcmVqZWN0LlxuICAgICAqL1xuICAgIHJlamVjdFRvb2woYXBwcm92YWxJdGVtLCB7IGFsd2F5c1JlamVjdCA9IGZhbHNlIH0gPSB7fSkge1xuICAgICAgICBjb25zdCB0b29sTmFtZSA9IGFwcHJvdmFsSXRlbS5yYXdJdGVtLm5hbWU7XG4gICAgICAgIGlmIChhbHdheXNSZWplY3QpIHtcbiAgICAgICAgICAgIHRoaXMuI2FwcHJvdmFscy5zZXQodG9vbE5hbWUsIHtcbiAgICAgICAgICAgICAgICBhcHByb3ZlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgcmVqZWN0ZWQ6IHRydWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhcHByb3ZhbEVudHJ5ID0gdGhpcy4jYXBwcm92YWxzLmdldCh0b29sTmFtZSkgPz8ge1xuICAgICAgICAgICAgYXBwcm92ZWQ6IFtdLFxuICAgICAgICAgICAgcmVqZWN0ZWQ6IFtdLFxuICAgICAgICB9O1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhcHByb3ZhbEVudHJ5LnJlamVjdGVkKSkge1xuICAgICAgICAgICAgYXBwcm92YWxFbnRyeS5yZWplY3RlZC5wdXNoKGFwcHJvdmFsSXRlbS5yYXdJdGVtLmNhbGxJZCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy4jYXBwcm92YWxzLnNldCh0b29sTmFtZSwgYXBwcm92YWxFbnRyeSk7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNvbnRleHQ6IHRoaXMuY29udGV4dCxcbiAgICAgICAgICAgIHVzYWdlOiB0aGlzLnVzYWdlLFxuICAgICAgICAgICAgYXBwcm92YWxzOiBPYmplY3QuZnJvbUVudHJpZXModGhpcy4jYXBwcm92YWxzLmVudHJpZXMoKSksXG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cnVuQ29udGV4dC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runContext.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runImplementation.mjs":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runImplementation.mjs ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentToolUseTracker: () => (/* binding */ AgentToolUseTracker),\n/* harmony export */   addStepToRunResult: () => (/* binding */ addStepToRunResult),\n/* harmony export */   checkForFinalOutputFromTools: () => (/* binding */ checkForFinalOutputFromTools),\n/* harmony export */   executeComputerActions: () => (/* binding */ executeComputerActions),\n/* harmony export */   executeFunctionToolCalls: () => (/* binding */ executeFunctionToolCalls),\n/* harmony export */   executeHandoffCalls: () => (/* binding */ executeHandoffCalls),\n/* harmony export */   executeInterruptedToolsAndSideEffects: () => (/* binding */ executeInterruptedToolsAndSideEffects),\n/* harmony export */   executeToolsAndSideEffects: () => (/* binding */ executeToolsAndSideEffects),\n/* harmony export */   getToolCallOutputItem: () => (/* binding */ getToolCallOutputItem),\n/* harmony export */   maybeResetToolChoice: () => (/* binding */ maybeResetToolChoice),\n/* harmony export */   nextStepSchema: () => (/* binding */ nextStepSchema),\n/* harmony export */   processModelResponse: () => (/* binding */ processModelResponse)\n/* harmony export */ });\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _handoff_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handoff.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/handoff.mjs\");\n/* harmony import */ var _items_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./items.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/items.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _utils_messages_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/messages.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/messages.mjs\");\n/* harmony import */ var _tracing_createSpans_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tracing/createSpans.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/createSpans.mjs\");\n/* harmony import */ var _utils_tools_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/tools.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/tools.mjs\");\n/* harmony import */ var _utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/safeExecute.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs\");\n/* harmony import */ var _tracing_context_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tracing/context.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _events_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./events.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/events.mjs\");\n/* harmony import */ var _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @openai/zod/v3 */ \"(ssr)/./node_modules/.pnpm/zod@3.25.51/node_modules/zod/dist/esm/index.js\");\n/* harmony import */ var _utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/smartString.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/smartString.mjs\");\n/* harmony import */ var _utils_index_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/index.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nfunction processModelResponse(modelResponse, agent, tools, handoffs) {\n    const items = [];\n    const runHandoffs = [];\n    const runFunctions = [];\n    const runComputerActions = [];\n    const toolsUsed = [];\n    const handoffMap = new Map(handoffs.map((h) => [h.toolName, h]));\n    const functionMap = new Map(tools.filter((t) => t.type === 'function').map((t) => [t.name, t]));\n    const computerTool = tools.find((t) => t.type === 'computer');\n    for (const output of modelResponse.output) {\n        if (output.type === 'message') {\n            if (output.role === 'assistant') {\n                items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunMessageOutputItem(output, agent));\n            }\n        }\n        else if (output.type === 'hosted_tool_call') {\n            items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallItem(output, agent));\n            toolsUsed.push(output.name);\n        }\n        else if (output.type === 'reasoning') {\n            items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunReasoningItem(output, agent));\n        }\n        else if (output.type === 'computer_call') {\n            items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallItem(output, agent));\n            toolsUsed.push('computer_use');\n            if (!computerTool) {\n                (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_8__.addErrorToCurrentSpan)({\n                    message: 'Model produced computer action without a computer tool.',\n                    data: {\n                        agent_name: agent.name,\n                    },\n                });\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ModelBehaviorError('Model produced computer action without a computer tool.');\n            }\n            runComputerActions.push({\n                toolCall: output,\n                computer: computerTool,\n            });\n        }\n        if (output.type !== 'function_call') {\n            continue;\n        }\n        toolsUsed.push(output.name);\n        const handoff = handoffMap.get(output.name);\n        if (handoff) {\n            items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunHandoffCallItem(output, agent));\n            runHandoffs.push({\n                toolCall: output,\n                handoff: handoff,\n            });\n        }\n        else {\n            const functionTool = functionMap.get(output.name);\n            if (!functionTool) {\n                (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_8__.addErrorToCurrentSpan)({\n                    message: `Tool ${output.name} not found in agent ${agent.name}.`,\n                    data: {\n                        tool_name: output.name,\n                        agent_name: agent.name,\n                    },\n                });\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ModelBehaviorError(`Tool ${output.name} not found in agent ${agent.name}.`);\n            }\n            items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallItem(output, agent));\n            runFunctions.push({\n                toolCall: output,\n                tool: functionTool,\n            });\n        }\n    }\n    return {\n        newItems: items,\n        handoffs: runHandoffs,\n        functions: runFunctions,\n        computerActions: runComputerActions,\n        toolsUsed: toolsUsed,\n    };\n}\nconst nextStepSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.discriminatedUnion('type', [\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.literal('next_step_handoff'),\n        newAgent: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.any(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.literal('next_step_final_output'),\n        output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.string(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.literal('next_step_run_again'),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.literal('next_step_interruption'),\n        data: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_10__.z.any()),\n    }),\n]);\nclass SingleStepResult {\n    originalInput;\n    modelResponse;\n    preStepItems;\n    newStepItems;\n    nextStep;\n    constructor(\n    /**\n     * The input items i.e. the items before run() was called. May be muted by handoff input filters\n     */\n    originalInput, \n    /**\n     * The model response for the current step\n     */\n    modelResponse, \n    /**\n     * The items before the current step was executed\n     */\n    preStepItems, \n    /**\n     * The items after the current step was executed\n     */\n    newStepItems, \n    /**\n     * The next step to execute\n     */\n    nextStep) {\n        this.originalInput = originalInput;\n        this.modelResponse = modelResponse;\n        this.preStepItems = preStepItems;\n        this.newStepItems = newStepItems;\n        this.nextStep = nextStep;\n    }\n    /**\n     * The items generated during the agent run (i.e. everything generated after originalInput)\n     */\n    get generatedItems() {\n        return this.preStepItems.concat(this.newStepItems);\n    }\n}\n/**\n * @internal\n */\nfunction maybeResetToolChoice(agent, toolUseTracker, modelSettings) {\n    if (agent.resetToolChoice && toolUseTracker.hasUsedTools(agent)) {\n        return { ...modelSettings, toolChoice: undefined };\n    }\n    return modelSettings;\n}\n/**\n * @internal\n */\nasync function executeInterruptedToolsAndSideEffects(agent, originalInput, originalPreStepItems, newResponse, processedResponse, runner, state) {\n    const preStepItems = originalPreStepItems.filter((item) => {\n        return !(item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem);\n    });\n    const approvalRequests = originalPreStepItems\n        .filter((item) => {\n        return item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem;\n    })\n        .map((item) => {\n        return item.rawItem.callId;\n    });\n    const functionToolRuns = processedResponse.functions.filter((run) => {\n        return approvalRequests.includes(run.toolCall.callId);\n    });\n    const functionResults = await executeFunctionToolCalls(agent, functionToolRuns, runner, state);\n    const newItems = functionResults.map((r) => r.runItem);\n    const checkToolOutput = await checkForFinalOutputFromTools(agent, functionResults, state);\n    if (checkToolOutput.isFinalOutput) {\n        runner.emit('agent_end', state._context, agent, checkToolOutput.finalOutput);\n        agent.emit('agent_end', state._context, checkToolOutput.finalOutput);\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_final_output',\n            output: checkToolOutput.finalOutput,\n        });\n    }\n    else if (checkToolOutput.isInterrupted) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_interruption',\n            data: {\n                interruptions: checkToolOutput.interruptions,\n            },\n        });\n    }\n    // we only ran new tools and side effects. We need to run the rest of the agent\n    return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_run_again' });\n}\n/**\n * @internal\n */\nasync function executeToolsAndSideEffects(agent, originalInput, originalPreStepItems, newResponse, processedResponse, runner, state) {\n    const preStepItems = originalPreStepItems;\n    let newItems = processedResponse.newItems;\n    const [functionResults, computerResults] = await Promise.all([\n        executeFunctionToolCalls(agent, processedResponse.functions, runner, state),\n        executeComputerActions(agent, processedResponse.computerActions, runner, state._context),\n    ]);\n    newItems = newItems.concat(functionResults.map((r) => r.runItem));\n    newItems = newItems.concat(computerResults);\n    // process handoffs\n    if (processedResponse.handoffs.length > 0) {\n        return await executeHandoffCalls(agent, originalInput, preStepItems, newItems, newResponse, processedResponse.handoffs, runner, state._context);\n    }\n    const checkToolOutput = await checkForFinalOutputFromTools(agent, functionResults, state);\n    if (checkToolOutput.isFinalOutput) {\n        runner.emit('agent_end', state._context, agent, checkToolOutput.finalOutput);\n        agent.emit('agent_end', state._context, checkToolOutput.finalOutput);\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_final_output',\n            output: checkToolOutput.finalOutput,\n        });\n    }\n    else if (checkToolOutput.isInterrupted) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_interruption',\n            data: {\n                interruptions: checkToolOutput.interruptions,\n            },\n        });\n    }\n    // check if the agent produced any messages\n    const messageItems = newItems.filter((item) => item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunMessageOutputItem);\n    // we will use the last content output as the final output\n    const potentialFinalOutput = messageItems.length > 0\n        ? (0,_utils_messages_mjs__WEBPACK_IMPORTED_MODULE_4__.getLastTextFromOutputMessage)(messageItems[messageItems.length - 1].rawItem)\n        : undefined;\n    // if there is no output we just run again\n    if (!potentialFinalOutput) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_run_again' });\n    }\n    if (agent.outputType === 'text') {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_final_output',\n            output: potentialFinalOutput,\n        });\n    }\n    else {\n        const { parser } = (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_6__.getSchemaAndParserFromInputType)(agent.outputType, 'final_output');\n        const [error] = await (0,_utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_7__.safeExecute)(() => parser(potentialFinalOutput));\n        if (error) {\n            (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_8__.addErrorToCurrentSpan)({\n                message: 'Invalid output type',\n                data: {\n                    error: String(error),\n                },\n            });\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ModelBehaviorError('Invalid output type');\n        }\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_final_output', output: potentialFinalOutput });\n    }\n    return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_run_again' });\n}\n/**\n * @internal\n */\nfunction getToolCallOutputItem(toolCall, output) {\n    return {\n        type: 'function_call_result',\n        name: toolCall.name,\n        callId: toolCall.callId,\n        status: 'completed',\n        output: {\n            type: 'text',\n            text: (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_11__.toSmartString)(output),\n        },\n    };\n}\n/**\n * @internal\n */\nasync function executeFunctionToolCalls(agent, toolRuns, runner, state) {\n    async function runSingleTool(toolRun) {\n        let parsedArgs = toolRun.toolCall.arguments;\n        if (toolRun.tool.parameters) {\n            if ((0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_12__.isZodObject)(toolRun.tool.parameters)) {\n                parsedArgs = toolRun.tool.parameters.parse(parsedArgs);\n            }\n            else {\n                parsedArgs = JSON.parse(parsedArgs);\n            }\n        }\n        const needsApproval = await toolRun.tool.needsApproval(state._context, parsedArgs, toolRun.toolCall.callId);\n        if (needsApproval) {\n            const approval = state._context.isToolApproved({\n                toolName: toolRun.tool.name,\n                callId: toolRun.toolCall.callId,\n            });\n            if (approval === false) {\n                return (0,_tracing_createSpans_mjs__WEBPACK_IMPORTED_MODULE_5__.withFunctionSpan)(async (span) => {\n                    const response = 'Tool execution was not approved.';\n                    span.setError({\n                        message: response,\n                        data: {\n                            tool_name: toolRun.tool.name,\n                            error: `Tool execution for ${toolRun.toolCall.callId} was manually rejected by user.`,\n                        },\n                    });\n                    span.spanData.output = response;\n                    return {\n                        type: 'function_output',\n                        tool: toolRun.tool,\n                        output: response,\n                        runItem: new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem(getToolCallOutputItem(toolRun.toolCall, response), agent, response),\n                    };\n                }, {\n                    data: {\n                        name: toolRun.tool.name,\n                    },\n                });\n            }\n            if (approval !== true) {\n                return {\n                    type: 'function_approval',\n                    tool: toolRun.tool,\n                    runItem: new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem(toolRun.toolCall, agent),\n                };\n            }\n        }\n        return (0,_tracing_createSpans_mjs__WEBPACK_IMPORTED_MODULE_5__.withFunctionSpan)(async (span) => {\n            if (runner.config.traceIncludeSensitiveData) {\n                span.spanData.input = toolRun.toolCall.arguments;\n            }\n            try {\n                runner.emit('agent_tool_start', state._context, agent, toolRun.tool);\n                agent.emit('agent_tool_start', state._context, toolRun.tool);\n                const result = await toolRun.tool.invoke(state._context, toolRun.toolCall.arguments);\n                // Use string data for tracing and event emitter\n                const stringResult = (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_11__.toSmartString)(result);\n                runner.emit('agent_tool_end', state._context, agent, toolRun.tool, stringResult);\n                agent.emit('agent_tool_end', state._context, toolRun.tool, stringResult);\n                if (runner.config.traceIncludeSensitiveData) {\n                    span.spanData.output = stringResult;\n                }\n                return {\n                    type: 'function_output',\n                    tool: toolRun.tool,\n                    output: result,\n                    runItem: new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem(getToolCallOutputItem(toolRun.toolCall, result), agent, result),\n                };\n            }\n            catch (error) {\n                span.setError({\n                    message: 'Error running tool',\n                    data: {\n                        tool_name: toolRun.tool.name,\n                        error: String(error),\n                    },\n                });\n                throw error;\n            }\n        }, {\n            data: {\n                name: toolRun.tool.name,\n            },\n        });\n    }\n    try {\n        const results = await Promise.all(toolRuns.map(runSingleTool));\n        return results;\n    }\n    catch (e) {\n        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ToolCallError(`Failed to run function tools: ${e}`, e, state);\n    }\n}\n/**\n * @internal\n */\n// Internal helper: dispatch a computer action and return a screenshot (sync/async)\nasync function _runComputerActionAndScreenshot(computer, toolCall) {\n    const action = toolCall.action;\n    let screenshot;\n    // Dispatch based on action type string (assume action.type exists)\n    switch (action.type) {\n        case 'click':\n            await computer.click(action.x, action.y, action.button);\n            break;\n        case 'double_click':\n            await computer.doubleClick(action.x, action.y);\n            break;\n        case 'drag':\n            await computer.drag(action.path.map((p) => [p.x, p.y]));\n            break;\n        case 'keypress':\n            await computer.keypress(action.keys);\n            break;\n        case 'move':\n            await computer.move(action.x, action.y);\n            break;\n        case 'screenshot':\n            screenshot = await computer.screenshot();\n            break;\n        case 'scroll':\n            await computer.scroll(action.x, action.y, action.scroll_x, action.scroll_y);\n            break;\n        case 'type':\n            await computer.type(action.text);\n            break;\n        case 'wait':\n            await computer.wait();\n            break;\n        default:\n            action; // ensures that we handle every action we know of\n            // Unknown action, just take screenshot\n            break;\n    }\n    if (typeof screenshot !== 'undefined') {\n        return screenshot;\n    }\n    // Always return screenshot as base64 string\n    if (typeof computer.screenshot === 'function') {\n        screenshot = await computer.screenshot();\n        if (typeof screenshot !== 'undefined') {\n            return screenshot;\n        }\n    }\n    throw new Error('Computer does not implement screenshot()');\n}\n/**\n * @internal\n */\nasync function executeComputerActions(agent, actions, runner, runContext) {\n    const results = [];\n    for (const action of actions) {\n        const computer = action.computer.computer;\n        const toolCall = action.toolCall;\n        // Hooks: on_tool_start (global + agent)\n        runner.emit('agent_tool_start', runContext, agent, action.computer);\n        if (typeof agent.emit === 'function') {\n            agent.emit('agent_tool_start', runContext, action.computer);\n        }\n        // Run the action and get screenshot\n        let output;\n        try {\n            output = await _runComputerActionAndScreenshot(computer, toolCall);\n        }\n        catch (err) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error('Failed to execute computer action:', err);\n            output = '';\n        }\n        // Hooks: on_tool_end (global + agent)\n        runner.emit('agent_tool_end', runContext, agent, action.computer, output);\n        if (typeof agent.emit === 'function') {\n            agent.emit('agent_tool_end', runContext, action.computer, output);\n        }\n        // Always return a screenshot as a base64 data URL\n        const imageUrl = output ? `data:image/png;base64,${output}` : '';\n        const rawItem = {\n            type: 'computer_call_result',\n            callId: toolCall.callId,\n            output: { type: 'computer_screenshot', data: imageUrl },\n        };\n        results.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem(rawItem, agent, imageUrl));\n    }\n    return results;\n}\n/**\n * @internal\n */\nasync function executeHandoffCalls(agent, originalInput, preStepItems, newStepItems, newResponse, runHandoffs, runner, runContext) {\n    newStepItems = [...newStepItems];\n    if (runHandoffs.length === 0) {\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn('Incorrectly called executeHandoffCalls with no handoffs. This should not happen. Moving on.');\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newStepItems, { type: 'next_step_run_again' });\n    }\n    if (runHandoffs.length > 1) {\n        // multiple handoffs. Ignoring all but the first one by adding reject responses for those\n        const outputMessage = 'Multiple handoffs detected, ignorning this one.';\n        for (let i = 1; i < runHandoffs.length; i++) {\n            newStepItems.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem(getToolCallOutputItem(runHandoffs[i].toolCall, outputMessage), agent, outputMessage));\n        }\n    }\n    const actualHandoff = runHandoffs[0];\n    return (0,_tracing_createSpans_mjs__WEBPACK_IMPORTED_MODULE_5__.withHandoffSpan)(async (handoffSpan) => {\n        const handoff = actualHandoff.handoff;\n        const newAgent = await handoff.onInvokeHandoff(runContext, actualHandoff.toolCall.arguments);\n        handoffSpan.spanData.to_agent = newAgent.name;\n        if (runHandoffs.length > 1) {\n            const requestedAgents = runHandoffs.map((h) => h.handoff.agentName);\n            handoffSpan.setError({\n                message: 'Multiple handoffs requested',\n                data: {\n                    requested_agents: requestedAgents,\n                },\n            });\n        }\n        newStepItems.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunHandoffOutputItem(getToolCallOutputItem(actualHandoff.toolCall, (0,_handoff_mjs__WEBPACK_IMPORTED_MODULE_1__.getTransferMessage)(newAgent)), agent, newAgent));\n        runner.emit('agent_handoff', runContext, agent, newAgent);\n        agent.emit('agent_handoff', runContext, newAgent);\n        const inputFilter = handoff.inputFilter ?? runner.config.handoffInputFilter;\n        if (inputFilter) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].debug('Filtering inputs for handoff');\n            if (typeof inputFilter !== 'function') {\n                handoffSpan.setError({\n                    message: 'Invalid input filter',\n                    data: {\n                        details: 'not callable',\n                    },\n                });\n            }\n            const handoffInputData = {\n                inputHistory: Array.isArray(originalInput)\n                    ? [...originalInput]\n                    : originalInput,\n                preHandoffItems: [...preStepItems],\n                newItems: [...newStepItems],\n            };\n            const filtered = inputFilter(handoffInputData);\n            originalInput = filtered.inputHistory;\n            preStepItems = filtered.preHandoffItems;\n            newStepItems = filtered.newItems;\n        }\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newStepItems, { type: 'next_step_handoff', newAgent });\n    }, {\n        data: {\n            from_agent: agent.name,\n        },\n    });\n}\nconst NOT_FINAL_OUTPUT = {\n    isFinalOutput: false,\n    isInterrupted: undefined,\n};\n/**\n * @internal\n */\nasync function checkForFinalOutputFromTools(agent, toolResults, state) {\n    if (toolResults.length === 0) {\n        return NOT_FINAL_OUTPUT;\n    }\n    const interruptions = toolResults\n        .filter((r) => r.runItem instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem)\n        .map((r) => r.runItem);\n    if (interruptions.length > 0) {\n        return {\n            isFinalOutput: false,\n            isInterrupted: true,\n            interruptions,\n        };\n    }\n    if (agent.toolUseBehavior === 'run_llm_again') {\n        return NOT_FINAL_OUTPUT;\n    }\n    const firstToolResult = toolResults[0];\n    if (agent.toolUseBehavior === 'stop_on_first_tool') {\n        if (firstToolResult?.type === 'function_output') {\n            const stringOutput = (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_11__.toSmartString)(firstToolResult.output);\n            return {\n                isFinalOutput: true,\n                isInterrupted: undefined,\n                finalOutput: stringOutput,\n            };\n        }\n        return NOT_FINAL_OUTPUT;\n    }\n    const toolUseBehavior = agent.toolUseBehavior;\n    if (typeof toolUseBehavior === 'object') {\n        const stoppingTool = toolResults.find((r) => toolUseBehavior.stopAtToolNames.includes(r.tool.name));\n        if (stoppingTool?.type === 'function_output') {\n            const stringOutput = (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_11__.toSmartString)(stoppingTool.output);\n            return {\n                isFinalOutput: true,\n                isInterrupted: undefined,\n                finalOutput: stringOutput,\n            };\n        }\n        return NOT_FINAL_OUTPUT;\n    }\n    if (typeof toolUseBehavior === 'function') {\n        return toolUseBehavior(state._context, toolResults);\n    }\n    _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error('Invalid toolUseBehavior: ', toolUseBehavior);\n    throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.UserError(`Invalid toolUseBehavior: ${toolUseBehavior}`, state);\n}\nfunction addStepToRunResult(result, step) {\n    for (const item of step.newStepItems) {\n        let itemName;\n        if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunMessageOutputItem) {\n            itemName = 'message_output_created';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunHandoffCallItem) {\n            itemName = 'handoff_requested';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunHandoffOutputItem) {\n            itemName = 'handoff_occurred';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallItem) {\n            itemName = 'tool_called';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem) {\n            itemName = 'tool_output';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunReasoningItem) {\n            itemName = 'reasoning_item_created';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem) {\n            itemName = 'tool_approval_requested';\n        }\n        else {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn('Unknown item type: ', item);\n            continue;\n        }\n        result._addItem(new _events_mjs__WEBPACK_IMPORTED_MODULE_9__.RunItemStreamEvent(itemName, item));\n    }\n}\nclass AgentToolUseTracker {\n    #agentToTools = new Map();\n    addToolUse(agent, toolNames) {\n        this.#agentToTools.set(agent, toolNames);\n    }\n    hasUsedTools(agent) {\n        return this.#agentToTools.has(agent);\n    }\n    toJSON() {\n        return Object.fromEntries(Array.from(this.#agentToTools.entries()).map(([agent, toolNames]) => {\n            return [agent.name, toolNames];\n        }));\n    }\n}\n//# sourceMappingURL=runImplementation.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runImplementation.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runState.mjs":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runState.mjs ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunState: () => (/* binding */ RunState),\n/* harmony export */   SerializedRunState: () => (/* binding */ SerializedRunState),\n/* harmony export */   buildAgentMap: () => (/* binding */ buildAgentMap),\n/* harmony export */   deserializeItem: () => (/* binding */ deserializeItem),\n/* harmony export */   deserializeModelResponse: () => (/* binding */ deserializeModelResponse),\n/* harmony export */   deserializeSpan: () => (/* binding */ deserializeSpan)\n/* harmony export */ });\n/* harmony import */ var _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/zod/v3 */ \"(ssr)/./node_modules/.pnpm/zod@3.25.51/node_modules/zod/dist/esm/index.js\");\n/* harmony import */ var _agent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./agent.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/agent.mjs\");\n/* harmony import */ var _items_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./items.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/items.mjs\");\n/* harmony import */ var _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./runContext.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runContext.mjs\");\n/* harmony import */ var _runImplementation_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./runImplementation.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runImplementation.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tracing/provider.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/provider.mjs\");\n/* harmony import */ var _usage_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./usage.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/usage.mjs\");\n/* harmony import */ var _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tracing/index.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/index.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _handoff_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./handoff.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/handoff.mjs\");\n/* harmony import */ var _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./types/protocol.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/types/protocol.mjs\");\n/* harmony import */ var _utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/safeExecute.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The schema version of the serialized run state. This is used to ensure that the serialized\n * run state is compatible with the current version of the SDK.\n * If anything in this schema changes, the version will have to be incremented.\n */\nconst CURRENT_SCHEMA_VERSION = '1.0';\nconst $schemaVersion = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal(CURRENT_SCHEMA_VERSION);\nconst serializedAgentSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n});\nconst serializedSpanBase = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    object: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('trace.span'),\n    id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    trace_id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    parent_id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().nullable(),\n    started_at: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().nullable(),\n    ended_at: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().nullable(),\n    error: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        message: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n        data: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any()).optional(),\n    })\n        .nullable(),\n    span_data: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any()),\n});\nconst SerializedSpan = serializedSpanBase.extend({\n    previous_span: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.lazy(() => SerializedSpan).optional(),\n});\nconst usageSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    requests: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    inputTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    outputTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    totalTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n});\nconst modelResponseSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    usage: usageSchema,\n    output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.OutputModelItem),\n    responseId: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n});\nconst itemSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.discriminatedUnion('type', [\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('message_output_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.AssistantMessageItem,\n        agent: serializedAgentSchema,\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('tool_call_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.ToolCallItem.or(_types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.HostedToolCallItem),\n        agent: serializedAgentSchema,\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('tool_call_output_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.FunctionCallResultItem,\n        agent: serializedAgentSchema,\n        output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('reasoning_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.ReasoningItem,\n        agent: serializedAgentSchema,\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('handoff_call_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.FunctionCallItem,\n        agent: serializedAgentSchema,\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('handoff_output_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.FunctionCallResultItem,\n        sourceAgent: serializedAgentSchema,\n        targetAgent: serializedAgentSchema,\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('tool_approval_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.FunctionCallItem,\n        agent: serializedAgentSchema,\n    }),\n]);\nconst serializedTraceSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    object: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('trace'),\n    id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    workflow_name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    group_id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().nullable(),\n    metadata: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any()),\n});\nconst serializedProcessedResponseSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    newItems: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(itemSchema),\n    toolsUsed: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string()),\n    handoffs: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        toolCall: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any(),\n        handoff: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any(),\n    })),\n    functions: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        toolCall: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any(),\n        tool: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any(),\n    })),\n    computerActions: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        toolCall: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any(),\n        computer: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any(),\n    })),\n});\nconst guardrailFunctionOutputSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    tripwireTriggered: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.boolean(),\n    outputInfo: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any(),\n});\nconst inputGuardrailResultSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    guardrail: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('input'),\n        name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    }),\n    output: guardrailFunctionOutputSchema,\n});\nconst outputGuardrailResultSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    guardrail: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('output'),\n        name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    }),\n    agentOutput: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any(),\n    agent: serializedAgentSchema,\n    output: guardrailFunctionOutputSchema,\n});\nconst SerializedRunState = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    $schemaVersion,\n    currentTurn: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    currentAgent: serializedAgentSchema,\n    originalInput: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.ModelItem)),\n    modelResponses: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(modelResponseSchema),\n    context: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        usage: usageSchema,\n        approvals: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n            approved: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string()).or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.boolean()),\n            rejected: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string()).or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.boolean()),\n        })),\n        context: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any()),\n    }),\n    toolUseTracker: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string())),\n    maxTurns: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    currentAgentSpan: SerializedSpan.nullable().optional(),\n    noActiveAgentRun: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.boolean(),\n    inputGuardrailResults: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(inputGuardrailResultSchema),\n    outputGuardrailResults: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(outputGuardrailResultSchema),\n    currentStep: _runImplementation_mjs__WEBPACK_IMPORTED_MODULE_4__.nextStepSchema.optional(),\n    lastModelResponse: modelResponseSchema.optional(),\n    generatedItems: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(itemSchema),\n    lastProcessedResponse: serializedProcessedResponseSchema.optional(),\n    trace: serializedTraceSchema.nullable(),\n});\n/**\n * Serializable snapshot of an agent's run, including context, usage and trace.\n * While this class has publicly writable properties (prefixed with `_`), they are not meant to be\n * used directly. To read these properties, use the `RunResult` instead.\n *\n * Manipulation of the state directly can lead to unexpected behavior and should be avoided.\n * Instead, use the `approve` and `reject` methods to interact with the state.\n */\nclass RunState {\n    /**\n     * Current turn number in the conversation.\n     */\n    _currentTurn = 0;\n    /**\n     * The agent currently handling the conversation.\n     */\n    _currentAgent;\n    /**\n     * Original user input prior to any processing.\n     */\n    _originalInput;\n    /**\n     * Responses from the model so far.\n     */\n    _modelResponses;\n    /**\n     * Active tracing span for the current agent if tracing is enabled.\n     */\n    _currentAgentSpan;\n    /**\n     * Run context tracking approvals, usage, and other metadata.\n     */\n    _context;\n    /**\n     * Tracks what tools each agent has used.\n     */\n    _toolUseTracker;\n    /**\n     * Items generated by the agent during the run.\n     */\n    _generatedItems;\n    /**\n     * Maximum allowed turns before forcing termination.\n     */\n    _maxTurns;\n    /**\n     * Whether the run has an active agent step in progress.\n     */\n    _noActiveAgentRun = true;\n    /**\n     * Last model response for the previous turn.\n     */\n    _lastTurnResponse;\n    /**\n     * Results from input guardrails applied to the run.\n     */\n    _inputGuardrailResults;\n    /**\n     * Results from output guardrails applied to the run.\n     */\n    _outputGuardrailResults;\n    /**\n     * Next step computed for the agent to take.\n     */\n    _currentStep = undefined;\n    /**\n     * Parsed model response after applying guardrails and tools.\n     */\n    _lastProcessedResponse = undefined;\n    /**\n     * Trace associated with this run if tracing is enabled.\n     */\n    _trace = null;\n    constructor(context, originalInput, startingAgent, maxTurns) {\n        this._context = context;\n        this._originalInput = structuredClone(originalInput);\n        this._modelResponses = [];\n        this._currentAgentSpan = undefined;\n        this._currentAgent = startingAgent;\n        this._toolUseTracker = new _runImplementation_mjs__WEBPACK_IMPORTED_MODULE_4__.AgentToolUseTracker();\n        this._generatedItems = [];\n        this._maxTurns = maxTurns;\n        this._inputGuardrailResults = [];\n        this._outputGuardrailResults = [];\n        this._trace = (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_8__.getCurrentTrace)();\n    }\n    /**\n     * Approves a tool call requested by the agent through an interruption and approval item request.\n     *\n     * To approve the request use this method and then run the agent again with the same state object\n     * to continue the execution.\n     *\n     * By default it will only approve the current tool call. To allow the tool to be used multiple\n     * times throughout the run, set the `alwaysApprove` option to `true`.\n     *\n     * @param approvalItem - The tool call approval item to approve.\n     * @param options - Options for the approval.\n     */\n    approve(approvalItem, options = { alwaysApprove: false }) {\n        this._context.approveTool(approvalItem, options);\n    }\n    /**\n     * Rejects a tool call requested by the agent through an interruption and approval item request.\n     *\n     * To reject the request use this method and then run the agent again with the same state object\n     * to continue the execution.\n     *\n     * By default it will only reject the current tool call. To allow the tool to be used multiple\n     * times throughout the run, set the `alwaysReject` option to `true`.\n     *\n     * @param approvalItem - The tool call approval item to reject.\n     * @param options - Options for the rejection.\n     */\n    reject(approvalItem, options = { alwaysReject: false }) {\n        this._context.rejectTool(approvalItem, options);\n    }\n    /**\n     * Serializes the run state to a JSON object.\n     *\n     * This method is used to serialize the run state to a JSON object that can be used to\n     * resume the run later.\n     *\n     * @returns The serialized run state.\n     */\n    toJSON() {\n        const output = {\n            $schemaVersion: '1.0',\n            currentTurn: this._currentTurn,\n            currentAgent: {\n                name: this._currentAgent.name,\n            },\n            originalInput: this._originalInput,\n            modelResponses: this._modelResponses.map((response) => {\n                return {\n                    usage: {\n                        requests: response.usage.requests,\n                        inputTokens: response.usage.inputTokens,\n                        outputTokens: response.usage.outputTokens,\n                        totalTokens: response.usage.totalTokens,\n                    },\n                    output: response.output,\n                    responseId: response.responseId,\n                };\n            }),\n            context: this._context.toJSON(),\n            toolUseTracker: this._toolUseTracker.toJSON(),\n            maxTurns: this._maxTurns,\n            currentAgentSpan: this._currentAgentSpan?.toJSON(),\n            noActiveAgentRun: this._noActiveAgentRun,\n            inputGuardrailResults: this._inputGuardrailResults,\n            outputGuardrailResults: this._outputGuardrailResults.map((r) => ({\n                ...r,\n                agent: r.agent.toJSON(),\n            })),\n            currentStep: this._currentStep,\n            lastModelResponse: this._lastTurnResponse,\n            generatedItems: this._generatedItems.map((item) => item.toJSON()),\n            lastProcessedResponse: this._lastProcessedResponse,\n            trace: this._trace ? this._trace.toJSON() : null,\n        };\n        // parsing the schema to ensure the output is valid for reparsing\n        const parsed = SerializedRunState.safeParse(output);\n        if (!parsed.success) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_5__.SystemError(`Failed to serialize run state. ${parsed.error.message}`);\n        }\n        return parsed.data;\n    }\n    /**\n     * Serializes the run state to a string.\n     *\n     * This method is used to serialize the run state to a string that can be used to\n     * resume the run later.\n     *\n     * @returns The serialized run state.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n    /**\n     * Deserializes a run state from a string.\n     *\n     * This method is used to deserialize a run state from a string that was serialized using the\n     * `toString` method.\n     */\n    static async fromString(initialAgent, str) {\n        const [parsingError, jsonResult] = await (0,_utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_12__.safeExecute)(() => JSON.parse(str));\n        if (parsingError) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_5__.UserError(`Failed to parse run state. ${parsingError instanceof Error ? parsingError.message : String(parsingError)}`);\n        }\n        const currentSchemaVersion = jsonResult.$schemaVersion;\n        if (!currentSchemaVersion) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_5__.UserError('Run state is missing schema version');\n        }\n        if (currentSchemaVersion !== CURRENT_SCHEMA_VERSION) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_5__.UserError(`Run state schema version ${currentSchemaVersion} is not supported. Please use version ${CURRENT_SCHEMA_VERSION}`);\n        }\n        const stateJson = SerializedRunState.parse(JSON.parse(str));\n        const agentMap = buildAgentMap(initialAgent);\n        //\n        // Rebuild the context\n        //\n        const context = new _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__.RunContext(stateJson.context.context);\n        context._rebuildApprovals(stateJson.context.approvals);\n        //\n        // Find the current agent from the initial agent\n        //\n        const currentAgent = agentMap.get(stateJson.currentAgent.name);\n        if (!currentAgent) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_5__.UserError(`Agent ${stateJson.currentAgent.name} not found`);\n        }\n        const state = new RunState(context, '', currentAgent, stateJson.maxTurns);\n        state._currentTurn = stateJson.currentTurn;\n        // rebuild tool use tracker\n        state._toolUseTracker = new _runImplementation_mjs__WEBPACK_IMPORTED_MODULE_4__.AgentToolUseTracker();\n        for (const [agentName, toolNames] of Object.entries(stateJson.toolUseTracker)) {\n            state._toolUseTracker.addToolUse(agentMap.get(agentName), toolNames);\n        }\n        // rebuild current agent span\n        if (stateJson.currentAgentSpan) {\n            if (!stateJson.trace) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_9__[\"default\"].warn('Trace is not set, skipping tracing setup');\n            }\n            const trace = (0,_tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_6__.getGlobalTraceProvider)().createTrace({\n                traceId: stateJson.trace?.id,\n                name: stateJson.trace?.workflow_name,\n                groupId: stateJson.trace?.group_id ?? undefined,\n                metadata: stateJson.trace?.metadata,\n            });\n            state._currentAgentSpan = deserializeSpan(trace, stateJson.currentAgentSpan);\n            state._trace = trace;\n        }\n        state._noActiveAgentRun = stateJson.noActiveAgentRun;\n        state._inputGuardrailResults =\n            stateJson.inputGuardrailResults;\n        state._outputGuardrailResults = stateJson.outputGuardrailResults.map((r) => ({\n            ...r,\n            agent: agentMap.get(r.agent.name),\n        }));\n        state._currentStep = stateJson.currentStep;\n        state._originalInput = stateJson.originalInput;\n        state._modelResponses = stateJson.modelResponses.map(deserializeModelResponse);\n        state._lastTurnResponse = stateJson.lastModelResponse\n            ? deserializeModelResponse(stateJson.lastModelResponse)\n            : undefined;\n        state._generatedItems = stateJson.generatedItems.map((item) => deserializeItem(item, agentMap));\n        state._lastProcessedResponse = stateJson.lastProcessedResponse\n            ? await deserializeProcessedResponse(agentMap, state._currentAgent, stateJson.lastProcessedResponse)\n            : undefined;\n        if (stateJson.currentStep?.type === 'next_step_handoff') {\n            state._currentStep = {\n                type: 'next_step_handoff',\n                newAgent: agentMap.get(stateJson.currentStep.newAgent.name),\n            };\n        }\n        return state;\n    }\n}\n/**\n * @internal\n */\nfunction buildAgentMap(initialAgent) {\n    const map = new Map();\n    const queue = [initialAgent];\n    while (queue.length > 0) {\n        const currentAgent = queue.shift();\n        if (map.has(currentAgent.name)) {\n            continue;\n        }\n        map.set(currentAgent.name, currentAgent);\n        for (const handoff of currentAgent.handoffs) {\n            if (handoff instanceof _agent_mjs__WEBPACK_IMPORTED_MODULE_1__.Agent) {\n                if (!map.has(handoff.name)) {\n                    queue.push(handoff);\n                }\n            }\n            else if (handoff.agent) {\n                if (!map.has(handoff.agent.name)) {\n                    queue.push(handoff.agent);\n                }\n            }\n        }\n    }\n    return map;\n}\n/**\n * @internal\n */\nfunction deserializeSpan(trace, serializedSpan) {\n    const spanData = serializedSpan.span_data;\n    const previousSpan = serializedSpan.previous_span\n        ? deserializeSpan(trace, serializedSpan.previous_span)\n        : undefined;\n    const span = (0,_tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_6__.getGlobalTraceProvider)().createSpan({\n        spanId: serializedSpan.id,\n        traceId: serializedSpan.trace_id,\n        parentId: serializedSpan.parent_id ?? undefined,\n        startedAt: serializedSpan.started_at ?? undefined,\n        endedAt: serializedSpan.ended_at ?? undefined,\n        data: spanData,\n    }, trace);\n    span.previousSpan = previousSpan;\n    return span;\n}\n/**\n * @internal\n */\nfunction deserializeModelResponse(serializedModelResponse) {\n    const usage = new _usage_mjs__WEBPACK_IMPORTED_MODULE_7__.Usage();\n    usage.requests = serializedModelResponse.usage.requests;\n    usage.inputTokens = serializedModelResponse.usage.inputTokens;\n    usage.outputTokens = serializedModelResponse.usage.outputTokens;\n    usage.totalTokens = serializedModelResponse.usage.totalTokens;\n    return {\n        usage,\n        output: serializedModelResponse.output.map((item) => _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_11__.OutputModelItem.parse(item)),\n        responseId: serializedModelResponse.responseId,\n    };\n}\n/**\n * @internal\n */\nfunction deserializeItem(serializedItem, agentMap) {\n    switch (serializedItem.type) {\n        case 'message_output_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunMessageOutputItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'tool_call_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'tool_call_output_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name), serializedItem.output);\n        case 'reasoning_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunReasoningItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'handoff_call_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunHandoffCallItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'handoff_output_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunHandoffOutputItem(serializedItem.rawItem, agentMap.get(serializedItem.sourceAgent.name), agentMap.get(serializedItem.targetAgent.name));\n        case 'tool_approval_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n    }\n}\n/**\n * @internal\n */\nasync function deserializeProcessedResponse(agentMap, currentAgent, serializedProcessedResponse) {\n    const allTools = await currentAgent.getAllTools();\n    const tools = new Map(allTools\n        .filter((tool) => tool.type === 'function')\n        .map((tool) => [tool.name, tool]));\n    const computerTools = new Map(allTools\n        .filter((tool) => tool.type === 'computer')\n        .map((tool) => [tool.name, tool]));\n    const handoffs = new Map(currentAgent.handoffs.map((entry) => {\n        if (entry instanceof _agent_mjs__WEBPACK_IMPORTED_MODULE_1__.Agent) {\n            return [entry.name, (0,_handoff_mjs__WEBPACK_IMPORTED_MODULE_10__.handoff)(entry)];\n        }\n        return [entry.toolName, entry];\n    }));\n    return {\n        newItems: serializedProcessedResponse.newItems.map((item) => deserializeItem(item, agentMap)),\n        toolsUsed: serializedProcessedResponse.toolsUsed,\n        handoffs: serializedProcessedResponse.handoffs.map((handoff) => {\n            if (!handoffs.has(handoff.handoff.toolName)) {\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_5__.UserError(`Handoff ${handoff.handoff.toolName} not found`);\n            }\n            return {\n                toolCall: handoff.toolCall,\n                handoff: handoffs.get(handoff.handoff.toolName),\n            };\n        }),\n        functions: await Promise.all(serializedProcessedResponse.functions.map(async (functionCall) => {\n            if (!tools.has(functionCall.tool.name)) {\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_5__.UserError(`Tool ${functionCall.tool.name} not found`);\n            }\n            return {\n                toolCall: functionCall.toolCall,\n                tool: tools.get(functionCall.tool.name),\n            };\n        })),\n        computerActions: serializedProcessedResponse.computerActions.map((computerAction) => {\n            const toolName = computerAction.computer.name;\n            if (!computerTools.has(toolName)) {\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_5__.UserError(`Computer tool ${toolName} not found`);\n            }\n            return {\n                toolCall: computerAction.toolCall,\n                computer: computerTools.get(toolName),\n            };\n        }),\n    };\n}\n//# sourceMappingURL=runState.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/runState.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/mcp-stdio/node.mjs":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/mcp-stdio/node.mjs ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeMCPServerStdio: () => (/* binding */ NodeMCPServerStdio)\n/* harmony export */ });\n/* harmony import */ var _mcp_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../mcp.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/mcp.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n\n\nfunction failedToImport(error) {\n    _logger_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(`\nFailed to load the MCP SDK. Please install the @modelcontextprotocol/sdk package.\n\nnpm install @modelcontextprotocol/sdk\n    `.trim());\n    throw error;\n}\nclass NodeMCPServerStdio extends _mcp_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseMCPServerStdio {\n    session = null;\n    _cacheDirty = true;\n    _toolsList = [];\n    serverInitializeResult = null;\n    clientSessionTimeoutSeconds;\n    params;\n    _name;\n    transport = null;\n    constructor(params) {\n        super(params);\n        this.clientSessionTimeoutSeconds = params.clientSessionTimeoutSeconds ?? 5;\n        if ('fullCommand' in params) {\n            const elements = params.fullCommand.split(' ');\n            const command = elements.shift();\n            if (!command) {\n                throw new Error('Invalid fullCommand: ' + params.fullCommand);\n            }\n            this.params = {\n                ...params,\n                command: command,\n                args: elements,\n                encoding: params.encoding || 'utf-8',\n                encodingErrorHandler: params.encodingErrorHandler || 'strict',\n            };\n        }\n        else {\n            this.params = params;\n        }\n        this._name = params.name || `stdio: ${this.params.command}`;\n    }\n    async connect() {\n        try {\n            const { StdioClientTransport } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@modelcontextprotocol+sdk@1.12.1\"), __webpack_require__.e(\"vendor-chunks/cross-spawn@7.0.6\"), __webpack_require__.e(\"vendor-chunks/isexe@2.0.0\"), __webpack_require__.e(\"vendor-chunks/which@2.0.2\"), __webpack_require__.e(\"vendor-chunks/shebang-regex@3.0.0\"), __webpack_require__.e(\"vendor-chunks/shebang-command@2.0.0\"), __webpack_require__.e(\"vendor-chunks/path-key@3.1.1\")]).then(__webpack_require__.bind(__webpack_require__, /*! @modelcontextprotocol/sdk/client/stdio.js */ \"(ssr)/./node_modules/.pnpm/@modelcontextprotocol+sdk@1.12.1/node_modules/@modelcontextprotocol/sdk/dist/esm/client/stdio.js\")).catch(failedToImport);\n            const { Client } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@modelcontextprotocol+sdk@1.12.1\"), __webpack_require__.e(\"vendor-chunks/ajv@6.12.6\"), __webpack_require__.e(\"vendor-chunks/uri-js@4.4.1\"), __webpack_require__.e(\"vendor-chunks/json-schema-traverse@0.4.1\"), __webpack_require__.e(\"vendor-chunks/fast-json-stable-stringify@2.1.0\"), __webpack_require__.e(\"vendor-chunks/fast-deep-equal@3.1.3\")]).then(__webpack_require__.bind(__webpack_require__, /*! @modelcontextprotocol/sdk/client/index.js */ \"(ssr)/./node_modules/.pnpm/@modelcontextprotocol+sdk@1.12.1/node_modules/@modelcontextprotocol/sdk/dist/esm/client/index.js\")).catch(failedToImport);\n            this.transport = new StdioClientTransport({\n                command: this.params.command,\n                args: this.params.args,\n                env: this.params.env,\n                cwd: this.params.cwd,\n            });\n            this.session = new Client({\n                name: this._name,\n                version: '1.0.0', // You may want to make this configurable\n            });\n            await this.session.connect(this.transport);\n            this.serverInitializeResult = {\n                serverInfo: { name: this._name, version: '1.0.0' },\n            };\n        }\n        catch (e) {\n            this.logger.error('Error initializing MCP server:', e);\n            await this.close();\n            throw e;\n        }\n        this.debugLog(() => `Connected to MCP server: ${this._name}`);\n    }\n    invalidateToolsCache() {\n        (0,_mcp_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidateServerToolsCache)(this.name);\n        this._cacheDirty = true;\n    }\n    // The response element type is intentionally left as `any` to avoid explosing MCP SDK type dependencies.\n    async listTools() {\n        const { ListToolsResultSchema } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/@modelcontextprotocol+sdk@1.12.1\").then(__webpack_require__.bind(__webpack_require__, /*! @modelcontextprotocol/sdk/types.js */ \"(ssr)/./node_modules/.pnpm/@modelcontextprotocol+sdk@1.12.1/node_modules/@modelcontextprotocol/sdk/dist/esm/types.js\")).catch(failedToImport);\n        if (!this.session) {\n            throw new Error('Server not initialized. Make sure you call connect() first.');\n        }\n        if (this.cacheToolsList && !this._cacheDirty && this._toolsList) {\n            return this._toolsList;\n        }\n        this._cacheDirty = false;\n        const response = await this.session.listTools();\n        this.debugLog(() => `Listed tools: ${JSON.stringify(response)}`);\n        this._toolsList = ListToolsResultSchema.parse(response).tools;\n        return this._toolsList;\n    }\n    async callTool(toolName, args) {\n        const { CallToolResultSchema } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/@modelcontextprotocol+sdk@1.12.1\").then(__webpack_require__.bind(__webpack_require__, /*! @modelcontextprotocol/sdk/types.js */ \"(ssr)/./node_modules/.pnpm/@modelcontextprotocol+sdk@1.12.1/node_modules/@modelcontextprotocol/sdk/dist/esm/types.js\")).catch(failedToImport);\n        if (!this.session) {\n            throw new Error('Server not initialized. Make sure you call connect() first.');\n        }\n        const response = await this.session.callTool({\n            name: toolName,\n            arguments: args ?? {},\n        });\n        const parsed = CallToolResultSchema.parse(response);\n        const result = parsed.content;\n        this.debugLog(() => `Called tool ${toolName} (args: ${JSON.stringify(args)}, result: ${JSON.stringify(result)})`);\n        return result;\n    }\n    get name() {\n        return this._name;\n    }\n    async close() {\n        if (this.transport) {\n            await this.transport.close();\n            this.transport = null;\n        }\n        if (this.session) {\n            await this.session.close();\n            this.session = null;\n        }\n    }\n}\n//# sourceMappingURL=node.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9zaGltcy9tY3Atc3RkaW8vbm9kZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdGO0FBQzFDO0FBQ3RDO0FBQ0EsSUFBSSxtREFBTTtBQUNWOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUNBQWlDLHdEQUFrQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxvQkFBb0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVCQUF1QixRQUFRLDRwQkFBbUQ7QUFDdEcsb0JBQW9CLFNBQVMsUUFBUSwybkJBQW1EO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSw4QkFBOEIsb0NBQW9DO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFdBQVc7QUFDbkU7QUFDQTtBQUNBLFFBQVEsb0VBQTBCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHdCQUF3QixRQUFRLDZTQUE0QztBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHlCQUF5QjtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1QkFBdUIsUUFBUSw2U0FBNEM7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDJDQUEyQyxVQUFVLFNBQVMscUJBQXFCLFlBQVksdUJBQXVCO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuYWlueXR3Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjJfd3NAOC4xOC4yX3pvZEAzLjI1LjUxL25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3Qvc2hpbXMvbWNwLXN0ZGlvL25vZGUubWpzPzc5ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZU1DUFNlcnZlclN0ZGlvLCBpbnZhbGlkYXRlU2VydmVyVG9vbHNDYWNoZSwgfSBmcm9tIFwiLi4vLi4vbWNwLm1qc1wiO1xuaW1wb3J0IGxvZ2dlciBmcm9tIFwiLi4vLi4vbG9nZ2VyLm1qc1wiO1xuZnVuY3Rpb24gZmFpbGVkVG9JbXBvcnQoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoYFxuRmFpbGVkIHRvIGxvYWQgdGhlIE1DUCBTREsuIFBsZWFzZSBpbnN0YWxsIHRoZSBAbW9kZWxjb250ZXh0cHJvdG9jb2wvc2RrIHBhY2thZ2UuXG5cbm5wbSBpbnN0YWxsIEBtb2RlbGNvbnRleHRwcm90b2NvbC9zZGtcbiAgICBgLnRyaW0oKSk7XG4gICAgdGhyb3cgZXJyb3I7XG59XG5leHBvcnQgY2xhc3MgTm9kZU1DUFNlcnZlclN0ZGlvIGV4dGVuZHMgQmFzZU1DUFNlcnZlclN0ZGlvIHtcbiAgICBzZXNzaW9uID0gbnVsbDtcbiAgICBfY2FjaGVEaXJ0eSA9IHRydWU7XG4gICAgX3Rvb2xzTGlzdCA9IFtdO1xuICAgIHNlcnZlckluaXRpYWxpemVSZXN1bHQgPSBudWxsO1xuICAgIGNsaWVudFNlc3Npb25UaW1lb3V0U2Vjb25kcztcbiAgICBwYXJhbXM7XG4gICAgX25hbWU7XG4gICAgdHJhbnNwb3J0ID0gbnVsbDtcbiAgICBjb25zdHJ1Y3RvcihwYXJhbXMpIHtcbiAgICAgICAgc3VwZXIocGFyYW1zKTtcbiAgICAgICAgdGhpcy5jbGllbnRTZXNzaW9uVGltZW91dFNlY29uZHMgPSBwYXJhbXMuY2xpZW50U2Vzc2lvblRpbWVvdXRTZWNvbmRzID8/IDU7XG4gICAgICAgIGlmICgnZnVsbENvbW1hbmQnIGluIHBhcmFtcykge1xuICAgICAgICAgICAgY29uc3QgZWxlbWVudHMgPSBwYXJhbXMuZnVsbENvbW1hbmQuc3BsaXQoJyAnKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbW1hbmQgPSBlbGVtZW50cy5zaGlmdCgpO1xuICAgICAgICAgICAgaWYgKCFjb21tYW5kKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGZ1bGxDb21tYW5kOiAnICsgcGFyYW1zLmZ1bGxDb21tYW5kKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucGFyYW1zID0ge1xuICAgICAgICAgICAgICAgIC4uLnBhcmFtcyxcbiAgICAgICAgICAgICAgICBjb21tYW5kOiBjb21tYW5kLFxuICAgICAgICAgICAgICAgIGFyZ3M6IGVsZW1lbnRzLFxuICAgICAgICAgICAgICAgIGVuY29kaW5nOiBwYXJhbXMuZW5jb2RpbmcgfHwgJ3V0Zi04JyxcbiAgICAgICAgICAgICAgICBlbmNvZGluZ0Vycm9ySGFuZGxlcjogcGFyYW1zLmVuY29kaW5nRXJyb3JIYW5kbGVyIHx8ICdzdHJpY3QnLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucGFyYW1zID0gcGFyYW1zO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX25hbWUgPSBwYXJhbXMubmFtZSB8fCBgc3RkaW86ICR7dGhpcy5wYXJhbXMuY29tbWFuZH1gO1xuICAgIH1cbiAgICBhc3luYyBjb25uZWN0KCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgeyBTdGRpb0NsaWVudFRyYW5zcG9ydCB9ID0gYXdhaXQgaW1wb3J0KCdAbW9kZWxjb250ZXh0cHJvdG9jb2wvc2RrL2NsaWVudC9zdGRpby5qcycpLmNhdGNoKGZhaWxlZFRvSW1wb3J0KTtcbiAgICAgICAgICAgIGNvbnN0IHsgQ2xpZW50IH0gPSBhd2FpdCBpbXBvcnQoJ0Btb2RlbGNvbnRleHRwcm90b2NvbC9zZGsvY2xpZW50L2luZGV4LmpzJykuY2F0Y2goZmFpbGVkVG9JbXBvcnQpO1xuICAgICAgICAgICAgdGhpcy50cmFuc3BvcnQgPSBuZXcgU3RkaW9DbGllbnRUcmFuc3BvcnQoe1xuICAgICAgICAgICAgICAgIGNvbW1hbmQ6IHRoaXMucGFyYW1zLmNvbW1hbmQsXG4gICAgICAgICAgICAgICAgYXJnczogdGhpcy5wYXJhbXMuYXJncyxcbiAgICAgICAgICAgICAgICBlbnY6IHRoaXMucGFyYW1zLmVudixcbiAgICAgICAgICAgICAgICBjd2Q6IHRoaXMucGFyYW1zLmN3ZCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5zZXNzaW9uID0gbmV3IENsaWVudCh7XG4gICAgICAgICAgICAgICAgbmFtZTogdGhpcy5fbmFtZSxcbiAgICAgICAgICAgICAgICB2ZXJzaW9uOiAnMS4wLjAnLCAvLyBZb3UgbWF5IHdhbnQgdG8gbWFrZSB0aGlzIGNvbmZpZ3VyYWJsZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnNlc3Npb24uY29ubmVjdCh0aGlzLnRyYW5zcG9ydCk7XG4gICAgICAgICAgICB0aGlzLnNlcnZlckluaXRpYWxpemVSZXN1bHQgPSB7XG4gICAgICAgICAgICAgICAgc2VydmVySW5mbzogeyBuYW1lOiB0aGlzLl9uYW1lLCB2ZXJzaW9uOiAnMS4wLjAnIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcignRXJyb3IgaW5pdGlhbGl6aW5nIE1DUCBzZXJ2ZXI6JywgZSk7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGVidWdMb2coKCkgPT4gYENvbm5lY3RlZCB0byBNQ1Agc2VydmVyOiAke3RoaXMuX25hbWV9YCk7XG4gICAgfVxuICAgIGludmFsaWRhdGVUb29sc0NhY2hlKCkge1xuICAgICAgICBpbnZhbGlkYXRlU2VydmVyVG9vbHNDYWNoZSh0aGlzLm5hbWUpO1xuICAgICAgICB0aGlzLl9jYWNoZURpcnR5ID0gdHJ1ZTtcbiAgICB9XG4gICAgLy8gVGhlIHJlc3BvbnNlIGVsZW1lbnQgdHlwZSBpcyBpbnRlbnRpb25hbGx5IGxlZnQgYXMgYGFueWAgdG8gYXZvaWQgZXhwbG9zaW5nIE1DUCBTREsgdHlwZSBkZXBlbmRlbmNpZXMuXG4gICAgYXN5bmMgbGlzdFRvb2xzKCkge1xuICAgICAgICBjb25zdCB7IExpc3RUb29sc1Jlc3VsdFNjaGVtYSB9ID0gYXdhaXQgaW1wb3J0KCdAbW9kZWxjb250ZXh0cHJvdG9jb2wvc2RrL3R5cGVzLmpzJykuY2F0Y2goZmFpbGVkVG9JbXBvcnQpO1xuICAgICAgICBpZiAoIXRoaXMuc2Vzc2lvbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTZXJ2ZXIgbm90IGluaXRpYWxpemVkLiBNYWtlIHN1cmUgeW91IGNhbGwgY29ubmVjdCgpIGZpcnN0LicpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmNhY2hlVG9vbHNMaXN0ICYmICF0aGlzLl9jYWNoZURpcnR5ICYmIHRoaXMuX3Rvb2xzTGlzdCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Rvb2xzTGlzdDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jYWNoZURpcnR5ID0gZmFsc2U7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZXNzaW9uLmxpc3RUb29scygpO1xuICAgICAgICB0aGlzLmRlYnVnTG9nKCgpID0+IGBMaXN0ZWQgdG9vbHM6ICR7SlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpfWApO1xuICAgICAgICB0aGlzLl90b29sc0xpc3QgPSBMaXN0VG9vbHNSZXN1bHRTY2hlbWEucGFyc2UocmVzcG9uc2UpLnRvb2xzO1xuICAgICAgICByZXR1cm4gdGhpcy5fdG9vbHNMaXN0O1xuICAgIH1cbiAgICBhc3luYyBjYWxsVG9vbCh0b29sTmFtZSwgYXJncykge1xuICAgICAgICBjb25zdCB7IENhbGxUb29sUmVzdWx0U2NoZW1hIH0gPSBhd2FpdCBpbXBvcnQoJ0Btb2RlbGNvbnRleHRwcm90b2NvbC9zZGsvdHlwZXMuanMnKS5jYXRjaChmYWlsZWRUb0ltcG9ydCk7XG4gICAgICAgIGlmICghdGhpcy5zZXNzaW9uKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NlcnZlciBub3QgaW5pdGlhbGl6ZWQuIE1ha2Ugc3VyZSB5b3UgY2FsbCBjb25uZWN0KCkgZmlyc3QuJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnNlc3Npb24uY2FsbFRvb2woe1xuICAgICAgICAgICAgbmFtZTogdG9vbE5hbWUsXG4gICAgICAgICAgICBhcmd1bWVudHM6IGFyZ3MgPz8ge30sXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBwYXJzZWQgPSBDYWxsVG9vbFJlc3VsdFNjaGVtYS5wYXJzZShyZXNwb25zZSk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHBhcnNlZC5jb250ZW50O1xuICAgICAgICB0aGlzLmRlYnVnTG9nKCgpID0+IGBDYWxsZWQgdG9vbCAke3Rvb2xOYW1lfSAoYXJnczogJHtKU09OLnN0cmluZ2lmeShhcmdzKX0sIHJlc3VsdDogJHtKU09OLnN0cmluZ2lmeShyZXN1bHQpfSlgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICAgIH1cbiAgICBhc3luYyBjbG9zZSgpIHtcbiAgICAgICAgaWYgKHRoaXMudHJhbnNwb3J0KSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnRyYW5zcG9ydC5jbG9zZSgpO1xuICAgICAgICAgICAgdGhpcy50cmFuc3BvcnQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnNlc3Npb24pIHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuc2Vzc2lvbi5jbG9zZSgpO1xuICAgICAgICAgICAgdGhpcy5zZXNzaW9uID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vZGUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/mcp-stdio/node.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var node_process__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncLocalStorage: () => (/* reexport safe */ node_async_hooks__WEBPACK_IMPORTED_MODULE_5__.AsyncLocalStorage),\n/* harmony export */   MCPServerStdio: () => (/* reexport safe */ _mcp_stdio_node_mjs__WEBPACK_IMPORTED_MODULE_6__.NodeMCPServerStdio),\n/* harmony export */   Readable: () => (/* reexport safe */ node_stream__WEBPACK_IMPORTED_MODULE_3__.Readable),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ node_stream_web__WEBPACK_IMPORTED_MODULE_4__.ReadableStream),\n/* harmony export */   RuntimeEventEmitter: () => (/* reexport safe */ node_events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter),\n/* harmony export */   TransformStream: () => (/* reexport safe */ node_stream_web__WEBPACK_IMPORTED_MODULE_4__.TransformStream),\n/* harmony export */   clearTimeout: () => (/* reexport safe */ node_timers__WEBPACK_IMPORTED_MODULE_7__.clearTimeout),\n/* harmony export */   isBrowserEnvironment: () => (/* binding */ isBrowserEnvironment),\n/* harmony export */   loadEnv: () => (/* binding */ loadEnv),\n/* harmony export */   randomUUID: () => (/* reexport safe */ node_crypto__WEBPACK_IMPORTED_MODULE_2__.randomUUID),\n/* harmony export */   timer: () => (/* binding */ timer)\n/* harmony export */ });\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:process */ \"node:process\");\n/* harmony import */ var node_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:events */ \"node:events\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n/* harmony import */ var node_stream_web__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! node:stream/web */ \"node:stream/web\");\n/* harmony import */ var node_async_hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! node:async_hooks */ \"node:async_hooks\");\n/* harmony import */ var _mcp_stdio_node_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mcp-stdio/node.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/mcp-stdio/node.mjs\");\n/* harmony import */ var node_timers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! node:timers */ \"node:timers\");\n\n\n// Use function instead of exporting the value to prevent\n// circular dependency resolution issues caused by other exports in '@openai/agents-core/_shims'\nfunction loadEnv() {\n    if (typeof /*#__PURE__*/ (node_process__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (node_process__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(node_process__WEBPACK_IMPORTED_MODULE_0__, 2))) === 'undefined' || typeof node_process__WEBPACK_IMPORTED_MODULE_0__.env === 'undefined') {\n        if (false) {}\n        return {};\n    }\n    return node_process__WEBPACK_IMPORTED_MODULE_0__.env;\n}\n\n\n\n\nfunction isBrowserEnvironment() {\n    return false;\n}\n\n\nclass NodeTimer {\n    constructor() { }\n    setTimeout(callback, ms) {\n        return setTimeout(callback, ms);\n    }\n    clearTimeout(timeoutId) {\n        clearTimeout(timeoutId);\n    }\n}\nconst timer = new NodeTimer();\n\n//# sourceMappingURL=shims-node.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9zaGltcy9zaGltcy1ub2RlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QztBQUMwQjtBQUNsRTtBQUNBO0FBQ087QUFDUCxlQUFlLDhNQUFPLDJCQUEyQiw2Q0FBVztBQUM1RCxZQUFZLEtBQ21DLEVBQUUsRUFFeEM7QUFDVDtBQUNBO0FBQ0EsV0FBVyw2Q0FBVztBQUN0QjtBQUN5QztBQUNGO0FBQzRCO0FBQ2Q7QUFDOUM7QUFDUDtBQUNBO0FBQzRFO0FBQ2pDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpbnl0dy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC4yX3dzQDguMTguMl96b2RAMy4yNS41MS9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3NoaW1zL3NoaW1zLW5vZGUubWpzP2NlOTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcHJvY2VzcyBmcm9tICdub2RlOnByb2Nlc3MnO1xuZXhwb3J0IHsgRXZlbnRFbWl0dGVyIGFzIFJ1bnRpbWVFdmVudEVtaXR0ZXIgfSBmcm9tICdub2RlOmV2ZW50cyc7XG4vLyBVc2UgZnVuY3Rpb24gaW5zdGVhZCBvZiBleHBvcnRpbmcgdGhlIHZhbHVlIHRvIHByZXZlbnRcbi8vIGNpcmN1bGFyIGRlcGVuZGVuY3kgcmVzb2x1dGlvbiBpc3N1ZXMgY2F1c2VkIGJ5IG90aGVyIGV4cG9ydHMgaW4gJ0BvcGVuYWkvYWdlbnRzLWNvcmUvX3NoaW1zJ1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWRFbnYoKSB7XG4gICAgaWYgKHR5cGVvZiBwcm9jZXNzID09PSAndW5kZWZpbmVkJyB8fCB0eXBlb2YgcHJvY2Vzcy5lbnYgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaW1wb3J0Lm1ldGEgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICB0eXBlb2YgaW1wb3J0Lm1ldGEuZW52ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgcmV0dXJuIGltcG9ydC5tZXRhLmVudjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIHJldHVybiBwcm9jZXNzLmVudjtcbn1cbmV4cG9ydCB7IHJhbmRvbVVVSUQgfSBmcm9tICdub2RlOmNyeXB0byc7XG5leHBvcnQgeyBSZWFkYWJsZSB9IGZyb20gJ25vZGU6c3RyZWFtJztcbmV4cG9ydCB7IFJlYWRhYmxlU3RyZWFtLCBUcmFuc2Zvcm1TdHJlYW0sIH0gZnJvbSAnbm9kZTpzdHJlYW0vd2ViJztcbmV4cG9ydCB7IEFzeW5jTG9jYWxTdG9yYWdlIH0gZnJvbSAnbm9kZTphc3luY19ob29rcyc7XG5leHBvcnQgZnVuY3Rpb24gaXNCcm93c2VyRW52aXJvbm1lbnQoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IHsgTm9kZU1DUFNlcnZlclN0ZGlvIGFzIE1DUFNlcnZlclN0ZGlvIH0gZnJvbSBcIi4vbWNwLXN0ZGlvL25vZGUubWpzXCI7XG5leHBvcnQgeyBjbGVhclRpbWVvdXQgfSBmcm9tICdub2RlOnRpbWVycyc7XG5jbGFzcyBOb2RlVGltZXIge1xuICAgIGNvbnN0cnVjdG9yKCkgeyB9XG4gICAgc2V0VGltZW91dChjYWxsYmFjaywgbXMpIHtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoY2FsbGJhY2ssIG1zKTtcbiAgICB9XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCkge1xuICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICB9XG59XG5jb25zdCB0aW1lciA9IG5ldyBOb2RlVGltZXIoKTtcbmV4cG9ydCB7IHRpbWVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGltcy1ub2RlLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tool.mjs":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tool.mjs ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computerTool: () => (/* binding */ computerTool),\n/* harmony export */   tool: () => (/* binding */ tool)\n/* harmony export */ });\n/* harmony import */ var _utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/safeExecute.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs\");\n/* harmony import */ var _utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/tools.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/tools.mjs\");\n/* harmony import */ var _utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/typeGuards.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tracing/index.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/index.mjs\");\n/* harmony import */ var _utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/smartString.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/smartString.mjs\");\n\n\n\n\n\n\n\n\n/**\n * Exposes a computer to the agent as a tool to be called\n *\n * @param options Additional configuration for the computer tool like specifying the location of your agent\n * @returns a computer tool definition\n */\nfunction computerTool(options) {\n    return {\n        type: 'computer',\n        name: options.name ?? 'computer_use_preview',\n        computer: options.computer,\n    };\n}\n/**\n * The default function to invoke when an error occurs while running the tool.\n *\n * Always returns `An error occurred while running the tool. Please try again. Error: <error details>`\n *\n * @param context An instance of the current RunContext\n * @param error The error that occurred\n */\nfunction defaultToolErrorFunction(context, error) {\n    const details = error instanceof Error ? error.toString() : String(error);\n    return `An error occurred while running the tool. Please try again. Error: ${details}`;\n}\n/**\n * Exposes a function to the agent as a tool to be called\n *\n * @param options The options for the tool\n * @returns A new tool\n */\nfunction tool(options) {\n    const name = options.name\n        ? (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__.toFunctionToolName)(options.name)\n        : (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__.toFunctionToolName)(options.execute.name);\n    const toolErrorFunction = typeof options.errorFunction === 'undefined'\n        ? defaultToolErrorFunction\n        : options.errorFunction;\n    if (!name) {\n        throw new Error('Tool name cannot be empty. Either name your function or provide a name in the options.');\n    }\n    const strictMode = options.strict ?? true;\n    if (!strictMode && (0,_utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_2__.isZodObject)(options.parameters)) {\n        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_3__.UserError('Strict mode is required for Zod parameters');\n    }\n    const { parser, schema: parameters } = (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__.getSchemaAndParserFromInputType)(options.parameters, name);\n    async function _invoke(runContext, input) {\n        const [error, parsed] = await (0,_utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_0__.safeExecute)(() => parser(input));\n        if (error !== null) {\n            if (_logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].dontLogToolData) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Invalid JSON input for tool ${name}`);\n            }\n            else {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Invalid JSON input for tool ${name}: ${input}`);\n            }\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_3__.ModelBehaviorError('Invalid JSON input for tool');\n        }\n        if (_logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].dontLogToolData) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Invoking tool ${name}`);\n        }\n        else {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Invoking tool ${name} with input ${input}`);\n        }\n        const result = await options.execute(parsed, runContext);\n        const stringResult = (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_6__.toSmartString)(result);\n        if (_logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].dontLogToolData) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Tool ${name} completed`);\n        }\n        else {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Tool ${name} returned: ${stringResult}`);\n        }\n        return result;\n    }\n    async function invoke(runContext, input) {\n        return _invoke(runContext, input).catch((error) => {\n            if (toolErrorFunction) {\n                const currentSpan = (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_5__.getCurrentSpan)();\n                currentSpan?.setError({\n                    message: 'Error running tool (non-fatal)',\n                    data: {\n                        tool_name: name,\n                        error: error.toString(),\n                    },\n                });\n                return toolErrorFunction(runContext, error);\n            }\n            throw error;\n        });\n    }\n    const needsApproval = typeof options.needsApproval === 'function'\n        ? options.needsApproval\n        : async () => typeof options.needsApproval === 'boolean'\n            ? options.needsApproval\n            : false;\n    return {\n        type: 'function',\n        name,\n        description: options.description,\n        parameters,\n        strict: strictMode,\n        invoke,\n        needsApproval,\n    };\n}\n//# sourceMappingURL=tool.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC90b29sLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBc0Q7QUFDQztBQUNhO0FBQ2Y7QUFDUTtBQUMzQjtBQUNtQjtBQUNHO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsUUFBUTtBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxVQUFVLG9FQUFrQjtBQUM1QixVQUFVLG9FQUFrQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrRUFBVztBQUNsQyxrQkFBa0Isa0RBQVM7QUFDM0I7QUFDQSxZQUFZLDZCQUE2QixFQUFFLGlGQUErQjtBQUMxRTtBQUNBLHNDQUFzQyxtRUFBVztBQUNqRDtBQUNBLGdCQUFnQixtREFBTTtBQUN0QixnQkFBZ0IsbURBQU0sc0NBQXNDLEtBQUs7QUFDakU7QUFDQTtBQUNBLGdCQUFnQixtREFBTSxzQ0FBc0MsS0FBSyxJQUFJLE1BQU07QUFDM0U7QUFDQSxzQkFBc0IsMkRBQWtCO0FBQ3hDO0FBQ0EsWUFBWSxtREFBTTtBQUNsQixZQUFZLG1EQUFNLHdCQUF3QixLQUFLO0FBQy9DO0FBQ0E7QUFDQSxZQUFZLG1EQUFNLHdCQUF3QixNQUFNLGFBQWEsTUFBTTtBQUNuRTtBQUNBO0FBQ0EsNkJBQTZCLHFFQUFhO0FBQzFDLFlBQVksbURBQU07QUFDbEIsWUFBWSxtREFBTSxlQUFlLE1BQU07QUFDdkM7QUFDQTtBQUNBLFlBQVksbURBQU0sZUFBZSxNQUFNLFlBQVksYUFBYTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msa0VBQWM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuYWlueXR3Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjJfd3NAOC4xOC4yX3pvZEAzLjI1LjUxL25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdG9vbC5tanM/M2FjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzYWZlRXhlY3V0ZSB9IGZyb20gXCIuL3V0aWxzL3NhZmVFeGVjdXRlLm1qc1wiO1xuaW1wb3J0IHsgdG9GdW5jdGlvblRvb2xOYW1lIH0gZnJvbSBcIi4vdXRpbHMvdG9vbHMubWpzXCI7XG5pbXBvcnQgeyBnZXRTY2hlbWFBbmRQYXJzZXJGcm9tSW5wdXRUeXBlIH0gZnJvbSBcIi4vdXRpbHMvdG9vbHMubWpzXCI7XG5pbXBvcnQgeyBpc1pvZE9iamVjdCB9IGZyb20gXCIuL3V0aWxzL3R5cGVHdWFyZHMubWpzXCI7XG5pbXBvcnQgeyBNb2RlbEJlaGF2aW9yRXJyb3IsIFVzZXJFcnJvciB9IGZyb20gXCIuL2Vycm9ycy5tanNcIjtcbmltcG9ydCBsb2dnZXIgZnJvbSBcIi4vbG9nZ2VyLm1qc1wiO1xuaW1wb3J0IHsgZ2V0Q3VycmVudFNwYW4gfSBmcm9tIFwiLi90cmFjaW5nL2luZGV4Lm1qc1wiO1xuaW1wb3J0IHsgdG9TbWFydFN0cmluZyB9IGZyb20gXCIuL3V0aWxzL3NtYXJ0U3RyaW5nLm1qc1wiO1xuLyoqXG4gKiBFeHBvc2VzIGEgY29tcHV0ZXIgdG8gdGhlIGFnZW50IGFzIGEgdG9vbCB0byBiZSBjYWxsZWRcbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyBBZGRpdGlvbmFsIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBjb21wdXRlciB0b29sIGxpa2Ugc3BlY2lmeWluZyB0aGUgbG9jYXRpb24gb2YgeW91ciBhZ2VudFxuICogQHJldHVybnMgYSBjb21wdXRlciB0b29sIGRlZmluaXRpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVyVG9vbChvcHRpb25zKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ2NvbXB1dGVyJyxcbiAgICAgICAgbmFtZTogb3B0aW9ucy5uYW1lID8/ICdjb21wdXRlcl91c2VfcHJldmlldycsXG4gICAgICAgIGNvbXB1dGVyOiBvcHRpb25zLmNvbXB1dGVyLFxuICAgIH07XG59XG4vKipcbiAqIFRoZSBkZWZhdWx0IGZ1bmN0aW9uIHRvIGludm9rZSB3aGVuIGFuIGVycm9yIG9jY3VycyB3aGlsZSBydW5uaW5nIHRoZSB0b29sLlxuICpcbiAqIEFsd2F5cyByZXR1cm5zIGBBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBydW5uaW5nIHRoZSB0b29sLiBQbGVhc2UgdHJ5IGFnYWluLiBFcnJvcjogPGVycm9yIGRldGFpbHM+YFxuICpcbiAqIEBwYXJhbSBjb250ZXh0IEFuIGluc3RhbmNlIG9mIHRoZSBjdXJyZW50IFJ1bkNvbnRleHRcbiAqIEBwYXJhbSBlcnJvciBUaGUgZXJyb3IgdGhhdCBvY2N1cnJlZFxuICovXG5mdW5jdGlvbiBkZWZhdWx0VG9vbEVycm9yRnVuY3Rpb24oY29udGV4dCwgZXJyb3IpIHtcbiAgICBjb25zdCBkZXRhaWxzID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLnRvU3RyaW5nKCkgOiBTdHJpbmcoZXJyb3IpO1xuICAgIHJldHVybiBgQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgcnVubmluZyB0aGUgdG9vbC4gUGxlYXNlIHRyeSBhZ2Fpbi4gRXJyb3I6ICR7ZGV0YWlsc31gO1xufVxuLyoqXG4gKiBFeHBvc2VzIGEgZnVuY3Rpb24gdG8gdGhlIGFnZW50IGFzIGEgdG9vbCB0byBiZSBjYWxsZWRcbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyBUaGUgb3B0aW9ucyBmb3IgdGhlIHRvb2xcbiAqIEByZXR1cm5zIEEgbmV3IHRvb2xcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvb2wob3B0aW9ucykge1xuICAgIGNvbnN0IG5hbWUgPSBvcHRpb25zLm5hbWVcbiAgICAgICAgPyB0b0Z1bmN0aW9uVG9vbE5hbWUob3B0aW9ucy5uYW1lKVxuICAgICAgICA6IHRvRnVuY3Rpb25Ub29sTmFtZShvcHRpb25zLmV4ZWN1dGUubmFtZSk7XG4gICAgY29uc3QgdG9vbEVycm9yRnVuY3Rpb24gPSB0eXBlb2Ygb3B0aW9ucy5lcnJvckZ1bmN0aW9uID09PSAndW5kZWZpbmVkJ1xuICAgICAgICA/IGRlZmF1bHRUb29sRXJyb3JGdW5jdGlvblxuICAgICAgICA6IG9wdGlvbnMuZXJyb3JGdW5jdGlvbjtcbiAgICBpZiAoIW5hbWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUb29sIG5hbWUgY2Fubm90IGJlIGVtcHR5LiBFaXRoZXIgbmFtZSB5b3VyIGZ1bmN0aW9uIG9yIHByb3ZpZGUgYSBuYW1lIGluIHRoZSBvcHRpb25zLicpO1xuICAgIH1cbiAgICBjb25zdCBzdHJpY3RNb2RlID0gb3B0aW9ucy5zdHJpY3QgPz8gdHJ1ZTtcbiAgICBpZiAoIXN0cmljdE1vZGUgJiYgaXNab2RPYmplY3Qob3B0aW9ucy5wYXJhbWV0ZXJzKSkge1xuICAgICAgICB0aHJvdyBuZXcgVXNlckVycm9yKCdTdHJpY3QgbW9kZSBpcyByZXF1aXJlZCBmb3IgWm9kIHBhcmFtZXRlcnMnKTtcbiAgICB9XG4gICAgY29uc3QgeyBwYXJzZXIsIHNjaGVtYTogcGFyYW1ldGVycyB9ID0gZ2V0U2NoZW1hQW5kUGFyc2VyRnJvbUlucHV0VHlwZShvcHRpb25zLnBhcmFtZXRlcnMsIG5hbWUpO1xuICAgIGFzeW5jIGZ1bmN0aW9uIF9pbnZva2UocnVuQ29udGV4dCwgaW5wdXQpIHtcbiAgICAgICAgY29uc3QgW2Vycm9yLCBwYXJzZWRdID0gYXdhaXQgc2FmZUV4ZWN1dGUoKCkgPT4gcGFyc2VyKGlucHV0KSk7XG4gICAgICAgIGlmIChlcnJvciAhPT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKGxvZ2dlci5kb250TG9nVG9vbERhdGEpIHtcbiAgICAgICAgICAgICAgICBsb2dnZXIuZGVidWcoYEludmFsaWQgSlNPTiBpbnB1dCBmb3IgdG9vbCAke25hbWV9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBsb2dnZXIuZGVidWcoYEludmFsaWQgSlNPTiBpbnB1dCBmb3IgdG9vbCAke25hbWV9OiAke2lucHV0fWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IE1vZGVsQmVoYXZpb3JFcnJvcignSW52YWxpZCBKU09OIGlucHV0IGZvciB0b29sJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxvZ2dlci5kb250TG9nVG9vbERhdGEpIHtcbiAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhgSW52b2tpbmcgdG9vbCAke25hbWV9YCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsb2dnZXIuZGVidWcoYEludm9raW5nIHRvb2wgJHtuYW1lfSB3aXRoIGlucHV0ICR7aW5wdXR9YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgb3B0aW9ucy5leGVjdXRlKHBhcnNlZCwgcnVuQ29udGV4dCk7XG4gICAgICAgIGNvbnN0IHN0cmluZ1Jlc3VsdCA9IHRvU21hcnRTdHJpbmcocmVzdWx0KTtcbiAgICAgICAgaWYgKGxvZ2dlci5kb250TG9nVG9vbERhdGEpIHtcbiAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhgVG9vbCAke25hbWV9IGNvbXBsZXRlZGApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKGBUb29sICR7bmFtZX0gcmV0dXJuZWQ6ICR7c3RyaW5nUmVzdWx0fWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGFzeW5jIGZ1bmN0aW9uIGludm9rZShydW5Db250ZXh0LCBpbnB1dCkge1xuICAgICAgICByZXR1cm4gX2ludm9rZShydW5Db250ZXh0LCBpbnB1dCkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBpZiAodG9vbEVycm9yRnVuY3Rpb24pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50U3BhbiA9IGdldEN1cnJlbnRTcGFuKCk7XG4gICAgICAgICAgICAgICAgY3VycmVudFNwYW4/LnNldEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0Vycm9yIHJ1bm5pbmcgdG9vbCAobm9uLWZhdGFsKScsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2xfbmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiB0b29sRXJyb3JGdW5jdGlvbihydW5Db250ZXh0LCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IG5lZWRzQXBwcm92YWwgPSB0eXBlb2Ygb3B0aW9ucy5uZWVkc0FwcHJvdmFsID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gb3B0aW9ucy5uZWVkc0FwcHJvdmFsXG4gICAgICAgIDogYXN5bmMgKCkgPT4gdHlwZW9mIG9wdGlvbnMubmVlZHNBcHByb3ZhbCA9PT0gJ2Jvb2xlYW4nXG4gICAgICAgICAgICA/IG9wdGlvbnMubmVlZHNBcHByb3ZhbFxuICAgICAgICAgICAgOiBmYWxzZTtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnZnVuY3Rpb24nLFxuICAgICAgICBuYW1lLFxuICAgICAgICBkZXNjcmlwdGlvbjogb3B0aW9ucy5kZXNjcmlwdGlvbixcbiAgICAgICAgcGFyYW1ldGVycyxcbiAgICAgICAgc3RyaWN0OiBzdHJpY3RNb2RlLFxuICAgICAgICBpbnZva2UsXG4gICAgICAgIG5lZWRzQXBwcm92YWwsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRvb2wubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tool.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/context.mjs":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/context.mjs ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addErrorToCurrentSpan: () => (/* binding */ addErrorToCurrentSpan),\n/* harmony export */   cloneCurrentContext: () => (/* binding */ cloneCurrentContext),\n/* harmony export */   getCurrentSpan: () => (/* binding */ getCurrentSpan),\n/* harmony export */   getCurrentTrace: () => (/* binding */ getCurrentTrace),\n/* harmony export */   getOrCreateTrace: () => (/* binding */ getOrCreateTrace),\n/* harmony export */   resetCurrentSpan: () => (/* binding */ resetCurrentSpan),\n/* harmony export */   setCurrentSpan: () => (/* binding */ setCurrentSpan),\n/* harmony export */   withNewSpanContext: () => (/* binding */ withNewSpanContext),\n/* harmony export */   withTrace: () => (/* binding */ withTrace)\n/* harmony export */ });\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n/* harmony import */ var _provider_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/provider.mjs\");\n\n\nlet _contextAsyncLocalStorage;\nfunction getContextAsyncLocalStorage() {\n    _contextAsyncLocalStorage ??= new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorage();\n    return _contextAsyncLocalStorage;\n}\n/**\n * This function will get the current trace from the execution context.\n *\n * @returns The current trace or null if there is no trace.\n */\nfunction getCurrentTrace() {\n    const currentTrace = getContextAsyncLocalStorage().getStore();\n    if (currentTrace?.trace) {\n        return currentTrace.trace;\n    }\n    return null;\n}\n/**\n * This function will get the current span from the execution context.\n *\n * @returns The current span or null if there is no span.\n */\nfunction getCurrentSpan() {\n    const currentSpan = getContextAsyncLocalStorage().getStore();\n    if (currentSpan?.span) {\n        return currentSpan.span;\n    }\n    return null;\n}\n/**\n * This is an AsyncLocalStorage instance that stores the current trace.\n * It will automatically handle the execution context of different event loop executions.\n *\n * The functions below should be the only way that this context gets interfaced with.\n */\nfunction _wrapFunctionWithTraceLifecycle(fn) {\n    return async () => {\n        const trace = getCurrentTrace();\n        if (!trace) {\n            throw new Error('No trace found');\n        }\n        await trace.start();\n        const result = await fn(trace);\n        await trace.end();\n        return result;\n    };\n}\n/**\n * This function will create a new trace and assign it to the execution context of the function\n * passed to it.\n *\n * @param fn - The function to run and assign the trace context to.\n * @param options - Options for the creation of the trace\n */\nasync function withTrace(trace, fn, options = {}) {\n    const newTrace = typeof trace === 'string'\n        ? (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createTrace({\n            ...options,\n            name: trace,\n        })\n        : trace;\n    return getContextAsyncLocalStorage().run({ trace: newTrace }, _wrapFunctionWithTraceLifecycle(fn));\n}\n/**\n * This function will check if there is an existing active trace in the execution context. If there\n * is, it will run the given function with the existing trace. If there is no trace, it will create\n * a new one and assign it to the execution context of the function.\n *\n * @param fn - The fzunction to run and assign the trace context to.\n * @param options - Options for the creation of the trace\n */\nasync function getOrCreateTrace(fn, options = {}) {\n    const currentTrace = getCurrentTrace();\n    if (currentTrace) {\n        // if this execution context already has a trace instance in it we just continue\n        return await fn();\n    }\n    const newTrace = (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createTrace(options);\n    return getContextAsyncLocalStorage().run({ trace: newTrace }, _wrapFunctionWithTraceLifecycle(fn));\n}\n/**\n * This function will set the current span in the execution context.\n *\n * @param span - The span to set as the current span.\n */\nfunction setCurrentSpan(span) {\n    const context = getContextAsyncLocalStorage().getStore();\n    if (!context) {\n        throw new Error('No existing trace found');\n    }\n    if (context.span) {\n        context.span.previousSpan = context.previousSpan;\n        context.previousSpan = context.span;\n    }\n    context.span = span;\n    getContextAsyncLocalStorage().enterWith(context);\n}\nfunction resetCurrentSpan() {\n    const context = getContextAsyncLocalStorage().getStore();\n    if (context) {\n        context.span = context.previousSpan;\n        context.previousSpan = context.previousSpan?.previousSpan;\n        getContextAsyncLocalStorage().enterWith(context);\n    }\n}\n/**\n * This function will add an error to the current span.\n *\n * @param spanError - The error to add to the current span.\n */\nfunction addErrorToCurrentSpan(spanError) {\n    const currentSpan = getCurrentSpan();\n    if (currentSpan) {\n        currentSpan.setError(spanError);\n    }\n}\n/**\n * This function will clone the current context by creating new instances of the trace, span, and\n * previous span.\n *\n * @param context - The context to clone.\n * @returns A clone of the context.\n */\nfunction cloneCurrentContext(context) {\n    return {\n        trace: context.trace?.clone(),\n        span: context.span?.clone(),\n        previousSpan: context.previousSpan?.clone(),\n    };\n}\n/**\n * This function will run the given function with a new span context.\n *\n * @param fn - The function to run with the new span context.\n */\nfunction withNewSpanContext(fn) {\n    const currentContext = getContextAsyncLocalStorage().getStore();\n    if (!currentContext) {\n        throw new Error('No existing trace found');\n    }\n    const copyOfContext = cloneCurrentContext(currentContext);\n    return getContextAsyncLocalStorage().run(copyOfContext, fn);\n}\n//# sourceMappingURL=context.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/context.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/createSpans.mjs":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/createSpans.mjs ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAgentSpan: () => (/* binding */ createAgentSpan),\n/* harmony export */   createCustomSpan: () => (/* binding */ createCustomSpan),\n/* harmony export */   createFunctionSpan: () => (/* binding */ createFunctionSpan),\n/* harmony export */   createGenerationSpan: () => (/* binding */ createGenerationSpan),\n/* harmony export */   createGuardrailSpan: () => (/* binding */ createGuardrailSpan),\n/* harmony export */   createHandoffSpan: () => (/* binding */ createHandoffSpan),\n/* harmony export */   createMCPListToolsSpan: () => (/* binding */ createMCPListToolsSpan),\n/* harmony export */   createResponseSpan: () => (/* binding */ createResponseSpan),\n/* harmony export */   createSpeechGroupSpan: () => (/* binding */ createSpeechGroupSpan),\n/* harmony export */   createSpeechSpan: () => (/* binding */ createSpeechSpan),\n/* harmony export */   createTranscriptionSpan: () => (/* binding */ createTranscriptionSpan),\n/* harmony export */   withAgentSpan: () => (/* binding */ withAgentSpan),\n/* harmony export */   withCustomSpan: () => (/* binding */ withCustomSpan),\n/* harmony export */   withFunctionSpan: () => (/* binding */ withFunctionSpan),\n/* harmony export */   withGenerationSpan: () => (/* binding */ withGenerationSpan),\n/* harmony export */   withGuardrailSpan: () => (/* binding */ withGuardrailSpan),\n/* harmony export */   withHandoffSpan: () => (/* binding */ withHandoffSpan),\n/* harmony export */   withMCPListToolsSpan: () => (/* binding */ withMCPListToolsSpan),\n/* harmony export */   withResponseSpan: () => (/* binding */ withResponseSpan),\n/* harmony export */   withSpeechGroupSpan: () => (/* binding */ withSpeechGroupSpan),\n/* harmony export */   withSpeechSpan: () => (/* binding */ withSpeechSpan),\n/* harmony export */   withTranscriptionSpan: () => (/* binding */ withTranscriptionSpan)\n/* harmony export */ });\n/* harmony import */ var _context_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _provider_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/provider.mjs\");\n\n\nfunction _withSpanFactory(createSpan) {\n    return async (fn, ...args) => {\n        // Creating a new span context to make sure that the previous span is correctly reset\n        return (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.withNewSpanContext)(async () => {\n            const span = createSpan(...args);\n            (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.setCurrentSpan)(span);\n            try {\n                span.start();\n                return await fn(span);\n            }\n            catch (error) {\n                span.setError({\n                    message: error.message,\n                    data: error.data,\n                });\n                throw error;\n            }\n            finally {\n                span.end();\n                (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.resetCurrentSpan)();\n            }\n        });\n    };\n}\n/**\n * Create a new response span. The span will not be started automatically, you should either\n * use `withResponseSpan()` or call `span.start()` and `span.end()` manually.\n *\n * This span captures the details of a model response, primarily the response identifier.\n * If you need to capture detailed generation information such as input/output messages,\n * model configuration, or usage data, use `createGenerationSpan()` instead.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created response span.\n */\nfunction createResponseSpan(options, parent) {\n    options = {};\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'response',\n            ...options.data,\n        },\n    }, parent);\n}\n/**\n * Create a new response span and automatically start and end it.\n *\n * This span captures the details of a model response, primarily the response identifier.\n * If you need to capture detailed generation information such as input/output messages,\n * model configuration, or usage data, use `generationSpan()` instead.\n */\nconst withResponseSpan = _withSpanFactory(createResponseSpan);\n/**\n * Create a new agent span. The span will not be started automatically, you should either\n * use `withAgentSpan()` or call `span.start()` and `span.end()` manually.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created agent span.\n */\nfunction createAgentSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'agent',\n            name: options?.data?.name ?? 'Agent',\n            ...options?.data,\n        },\n    }, parent);\n}\n/**\n * Create a new agent span and automatically start and end it.\n */\nconst withAgentSpan = _withSpanFactory(createAgentSpan);\n/**\n * Create a new function span. The span will not be started automatically, you should either\n * use `withFunctionSpan()` or call `span.start()` and `span.end()` manually.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created function span.\n */\nfunction createFunctionSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'function',\n            input: options?.data?.input ?? '',\n            output: options?.data?.output ?? '',\n            ...options?.data,\n        },\n    }, parent);\n}\n/**\n * Create a new function span and automatically start and end it.\n */\nconst withFunctionSpan = _withSpanFactory(createFunctionSpan);\n/**\n * Create a new handoff span. The span will not be started automatically, you should either\n * use `withHandoffSpan()` or call `span.start()` and `span.end()` manually.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created handoff span.\n */\nfunction createHandoffSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: { type: 'handoff', ...options?.data },\n    }, parent);\n}\n/**\n * Create a new handoff span and automatically start and end it.\n */\nconst withHandoffSpan = _withSpanFactory(createHandoffSpan);\n/**\n * Create a new generation span. The span will not be started automatically, you should either\n * use `withGenerationSpan()` or call `span.start()` and `span.end()` manually.\n *\n * This span captures the details of a model generation, including input/output message\n * sequences, model information, and usage data. If you only need to capture a model response\n * identifier, consider using `createResponseSpan()` instead.\n */\nfunction createGenerationSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'generation',\n            ...options?.data,\n        },\n    }, parent);\n}\n/** Automatically create a generation span, run fn and close the span */\nconst withGenerationSpan = _withSpanFactory(createGenerationSpan);\n/**\n * Create a new custom span. The span will not be started automatically, you should either use\n * `withCustomSpan()` or call `span.start()` and `span.end()` manually.\n */\nfunction createCustomSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'custom',\n            data: {},\n            ...options?.data,\n        },\n    }, parent);\n}\nconst withCustomSpan = _withSpanFactory(createCustomSpan);\n/**\n * Create a new guardrail span. The span will not be started automatically, you should either use\n * `withGuardrailSpan()` or call `span.start()` and `span.end()` manually.\n */\nfunction createGuardrailSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'guardrail',\n            triggered: false,\n            ...options?.data,\n        },\n    }, parent);\n}\nconst withGuardrailSpan = _withSpanFactory(createGuardrailSpan);\n/**\n * Create a new transcription span. The span will not be started automatically.\n */\nfunction createTranscriptionSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'transcription',\n            ...options.data,\n        },\n    }, parent);\n}\nconst withTranscriptionSpan = _withSpanFactory(createTranscriptionSpan);\n/**\n * Create a new speech span. The span will not be started automatically.\n */\nfunction createSpeechSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'speech',\n            ...options.data,\n        },\n    }, parent);\n}\nconst withSpeechSpan = _withSpanFactory(createSpeechSpan);\n/**\n * Create a new speech group span. The span will not be started automatically.\n */\nfunction createSpeechGroupSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'speech_group',\n            ...options?.data,\n        },\n    }, parent);\n}\nconst withSpeechGroupSpan = _withSpanFactory(createSpeechGroupSpan);\n/**\n * Create a new MCP list tools span. The span will not be started automatically.\n */\nfunction createMCPListToolsSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'mcp_tools',\n            ...options?.data,\n        },\n    }, parent);\n}\nconst withMCPListToolsSpan = _withSpanFactory(createMCPListToolsSpan);\n//# sourceMappingURL=createSpans.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/createSpans.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/index.mjs":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/index.mjs ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BatchTraceProcessor: () => (/* reexport safe */ _processor_mjs__WEBPACK_IMPORTED_MODULE_4__.BatchTraceProcessor),\n/* harmony export */   ConsoleSpanExporter: () => (/* reexport safe */ _processor_mjs__WEBPACK_IMPORTED_MODULE_4__.ConsoleSpanExporter),\n/* harmony export */   NoopSpan: () => (/* reexport safe */ _spans_mjs__WEBPACK_IMPORTED_MODULE_5__.NoopSpan),\n/* harmony export */   NoopTrace: () => (/* reexport safe */ _traces_mjs__WEBPACK_IMPORTED_MODULE_6__.NoopTrace),\n/* harmony export */   Span: () => (/* reexport safe */ _spans_mjs__WEBPACK_IMPORTED_MODULE_5__.Span),\n/* harmony export */   Trace: () => (/* reexport safe */ _traces_mjs__WEBPACK_IMPORTED_MODULE_6__.Trace),\n/* harmony export */   addTraceProcessor: () => (/* binding */ addTraceProcessor),\n/* harmony export */   createAgentSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createAgentSpan),\n/* harmony export */   createCustomSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createCustomSpan),\n/* harmony export */   createFunctionSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createFunctionSpan),\n/* harmony export */   createGenerationSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createGenerationSpan),\n/* harmony export */   createGuardrailSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createGuardrailSpan),\n/* harmony export */   createHandoffSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createHandoffSpan),\n/* harmony export */   createMCPListToolsSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createMCPListToolsSpan),\n/* harmony export */   createResponseSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createResponseSpan),\n/* harmony export */   createSpeechGroupSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createSpeechGroupSpan),\n/* harmony export */   createSpeechSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createSpeechSpan),\n/* harmony export */   createTranscriptionSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.createTranscriptionSpan),\n/* harmony export */   generateGroupId: () => (/* reexport safe */ _utils_mjs__WEBPACK_IMPORTED_MODULE_7__.generateGroupId),\n/* harmony export */   generateSpanId: () => (/* reexport safe */ _utils_mjs__WEBPACK_IMPORTED_MODULE_7__.generateSpanId),\n/* harmony export */   generateTraceId: () => (/* reexport safe */ _utils_mjs__WEBPACK_IMPORTED_MODULE_7__.generateTraceId),\n/* harmony export */   getCurrentSpan: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_2__.getCurrentSpan),\n/* harmony export */   getCurrentTrace: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_2__.getCurrentTrace),\n/* harmony export */   getOrCreateTrace: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_2__.getOrCreateTrace),\n/* harmony export */   resetCurrentSpan: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_2__.resetCurrentSpan),\n/* harmony export */   setCurrentSpan: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_2__.setCurrentSpan),\n/* harmony export */   setTraceProcessors: () => (/* binding */ setTraceProcessors),\n/* harmony export */   setTracingDisabled: () => (/* binding */ setTracingDisabled),\n/* harmony export */   withAgentSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withAgentSpan),\n/* harmony export */   withCustomSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withCustomSpan),\n/* harmony export */   withFunctionSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withFunctionSpan),\n/* harmony export */   withGenerationSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withGenerationSpan),\n/* harmony export */   withGuardrailSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withGuardrailSpan),\n/* harmony export */   withHandoffSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withHandoffSpan),\n/* harmony export */   withMCPListToolsSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withMCPListToolsSpan),\n/* harmony export */   withResponseSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withResponseSpan),\n/* harmony export */   withSpeechGroupSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withSpeechGroupSpan),\n/* harmony export */   withSpeechSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withSpeechSpan),\n/* harmony export */   withTrace: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_2__.withTrace),\n/* harmony export */   withTranscriptionSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__.withTranscriptionSpan)\n/* harmony export */ });\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _provider_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/provider.mjs\");\n/* harmony import */ var _context_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _createSpans_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createSpans.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/createSpans.mjs\");\n/* harmony import */ var _processor_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./processor.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/processor.mjs\");\n/* harmony import */ var _spans_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./spans.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/spans.mjs\");\n/* harmony import */ var _traces_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./traces.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/traces.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/utils.mjs\");\n\n\n\n\n\n\n\n\n/**\n * Add a processor to the list of processors. Each processor will receive all traces/spans.\n *\n * @param processor - The processor to add.\n */\nfunction addTraceProcessor(processor) {\n    (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().registerProcessor(processor);\n}\n/**\n * Set the list of processors. This will replace any existing processors.\n *\n * @param processors - The list of processors to set.\n */\nfunction setTraceProcessors(processors) {\n    (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().setProcessors(processors);\n}\n/**\n * Set the disabled state of the tracing provider.\n *\n * @param disabled - Whether to disable tracing.\n */\nfunction setTracingDisabled(disabled) {\n    (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().setDisabled(disabled);\n}\nconst cleanup = async () => {\n    await (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().shutdown();\n};\nif (typeof process !== 'undefined' && typeof process.on === 'function') {\n    // handling Node.js process termination\n    // Handle normal termination\n    process.on('beforeExit', cleanup);\n    // Handle CTRL+C (SIGINT)\n    process.on('SIGINT', cleanup);\n    // Handle termination (SIGTERM)\n    process.on('SIGTERM', cleanup);\n    process.on('unhandledRejection', (reason, promise) => {\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error('Unhandled rejection', reason, promise);\n        cleanup();\n    });\n}\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC90cmFjaW5nL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBbUM7QUFDcUI7QUFDd0U7QUFDOUY7QUFDMEM7QUFDL0I7QUFDRztBQUMrQjtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxJQUFJLHFFQUFzQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLElBQUkscUVBQXNCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsSUFBSSxxRUFBc0I7QUFDMUI7QUFDQTtBQUNBLFVBQVUscUVBQXNCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBTTtBQUNkO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuYWlueXR3Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjJfd3NAOC4xOC4yX3pvZEAzLjI1LjUxL25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdHJhY2luZy9pbmRleC5tanM/MTIxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbG9nZ2VyIGZyb20gXCIuLi9sb2dnZXIubWpzXCI7XG5pbXBvcnQgeyBnZXRHbG9iYWxUcmFjZVByb3ZpZGVyIH0gZnJvbSBcIi4vcHJvdmlkZXIubWpzXCI7XG5leHBvcnQgeyBnZXRDdXJyZW50U3BhbiwgZ2V0Q3VycmVudFRyYWNlLCBnZXRPckNyZWF0ZVRyYWNlLCByZXNldEN1cnJlbnRTcGFuLCBzZXRDdXJyZW50U3Bhbiwgd2l0aFRyYWNlLCB9IGZyb20gXCIuL2NvbnRleHQubWpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jcmVhdGVTcGFucy5tanNcIjtcbmV4cG9ydCB7IEJhdGNoVHJhY2VQcm9jZXNzb3IsIENvbnNvbGVTcGFuRXhwb3J0ZXIsIH0gZnJvbSBcIi4vcHJvY2Vzc29yLm1qc1wiO1xuZXhwb3J0IHsgTm9vcFNwYW4sIFNwYW4gfSBmcm9tIFwiLi9zcGFucy5tanNcIjtcbmV4cG9ydCB7IE5vb3BUcmFjZSwgVHJhY2UgfSBmcm9tIFwiLi90cmFjZXMubWpzXCI7XG5leHBvcnQgeyBnZW5lcmF0ZUdyb3VwSWQsIGdlbmVyYXRlU3BhbklkLCBnZW5lcmF0ZVRyYWNlSWQgfSBmcm9tIFwiLi91dGlscy5tanNcIjtcbi8qKlxuICogQWRkIGEgcHJvY2Vzc29yIHRvIHRoZSBsaXN0IG9mIHByb2Nlc3NvcnMuIEVhY2ggcHJvY2Vzc29yIHdpbGwgcmVjZWl2ZSBhbGwgdHJhY2VzL3NwYW5zLlxuICpcbiAqIEBwYXJhbSBwcm9jZXNzb3IgLSBUaGUgcHJvY2Vzc29yIHRvIGFkZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFkZFRyYWNlUHJvY2Vzc29yKHByb2Nlc3Nvcikge1xuICAgIGdldEdsb2JhbFRyYWNlUHJvdmlkZXIoKS5yZWdpc3RlclByb2Nlc3Nvcihwcm9jZXNzb3IpO1xufVxuLyoqXG4gKiBTZXQgdGhlIGxpc3Qgb2YgcHJvY2Vzc29ycy4gVGhpcyB3aWxsIHJlcGxhY2UgYW55IGV4aXN0aW5nIHByb2Nlc3NvcnMuXG4gKlxuICogQHBhcmFtIHByb2Nlc3NvcnMgLSBUaGUgbGlzdCBvZiBwcm9jZXNzb3JzIHRvIHNldC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFRyYWNlUHJvY2Vzc29ycyhwcm9jZXNzb3JzKSB7XG4gICAgZ2V0R2xvYmFsVHJhY2VQcm92aWRlcigpLnNldFByb2Nlc3NvcnMocHJvY2Vzc29ycyk7XG59XG4vKipcbiAqIFNldCB0aGUgZGlzYWJsZWQgc3RhdGUgb2YgdGhlIHRyYWNpbmcgcHJvdmlkZXIuXG4gKlxuICogQHBhcmFtIGRpc2FibGVkIC0gV2hldGhlciB0byBkaXNhYmxlIHRyYWNpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRUcmFjaW5nRGlzYWJsZWQoZGlzYWJsZWQpIHtcbiAgICBnZXRHbG9iYWxUcmFjZVByb3ZpZGVyKCkuc2V0RGlzYWJsZWQoZGlzYWJsZWQpO1xufVxuY29uc3QgY2xlYW51cCA9IGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBnZXRHbG9iYWxUcmFjZVByb3ZpZGVyKCkuc2h1dGRvd24oKTtcbn07XG5pZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBwcm9jZXNzLm9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgLy8gaGFuZGxpbmcgTm9kZS5qcyBwcm9jZXNzIHRlcm1pbmF0aW9uXG4gICAgLy8gSGFuZGxlIG5vcm1hbCB0ZXJtaW5hdGlvblxuICAgIHByb2Nlc3Mub24oJ2JlZm9yZUV4aXQnLCBjbGVhbnVwKTtcbiAgICAvLyBIYW5kbGUgQ1RSTCtDIChTSUdJTlQpXG4gICAgcHJvY2Vzcy5vbignU0lHSU5UJywgY2xlYW51cCk7XG4gICAgLy8gSGFuZGxlIHRlcm1pbmF0aW9uIChTSUdURVJNKVxuICAgIHByb2Nlc3Mub24oJ1NJR1RFUk0nLCBjbGVhbnVwKTtcbiAgICBwcm9jZXNzLm9uKCd1bmhhbmRsZWRSZWplY3Rpb24nLCAocmVhc29uLCBwcm9taXNlKSA9PiB7XG4gICAgICAgIGxvZ2dlci5lcnJvcignVW5oYW5kbGVkIHJlamVjdGlvbicsIHJlYXNvbiwgcHJvbWlzZSk7XG4gICAgICAgIGNsZWFudXAoKTtcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/processor.mjs":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/processor.mjs ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BatchTraceProcessor: () => (/* binding */ BatchTraceProcessor),\n/* harmony export */   ConsoleSpanExporter: () => (/* binding */ ConsoleSpanExporter),\n/* harmony export */   MultiTracingProcessor: () => (/* binding */ MultiTracingProcessor),\n/* harmony export */   defaultExporter: () => (/* binding */ defaultExporter),\n/* harmony export */   defaultProcessor: () => (/* binding */ defaultProcessor)\n/* harmony export */ });\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/config.mjs\");\n\n\n\n/**\n * Prints the traces and spans to the console\n */\nclass ConsoleSpanExporter {\n    async export(items) {\n        if (_config_mjs__WEBPACK_IMPORTED_MODULE_2__.tracing.disabled) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Tracing is disabled. Skipping export');\n            return;\n        }\n        for (const item of items) {\n            if (item.type === 'trace') {\n                console.log(`[Exporter] Export trace traceId=${item.traceId} name=${item.name}`);\n            }\n            else {\n                console.log(`[Exporter] Export span: ${JSON.stringify(item)}`);\n            }\n        }\n    }\n}\nclass BatchTraceProcessor {\n    #maxQueueSize;\n    #maxBatchSize;\n    #scheduleDelay;\n    #exportTriggerSize;\n    #exporter;\n    #buffer = [];\n    #timer;\n    #timeout = null;\n    #exportInProgress = false;\n    #timeoutAbortController = new AbortController();\n    constructor(exporter, { maxQueueSize = 1000, maxBatchSize = 100, scheduleDelay = 5000, // 5 seconds\n    exportTriggerRatio = 0.8, } = {}) {\n        this.#maxQueueSize = maxQueueSize;\n        this.#maxBatchSize = maxBatchSize;\n        this.#scheduleDelay = scheduleDelay;\n        this.#exportTriggerSize = maxQueueSize * exportTriggerRatio;\n        this.#exporter = exporter;\n        this.#timer = _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_1__.timer;\n        if (!(0,_openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_1__.isBrowserEnvironment)()) {\n            this.#runExportLoop();\n        }\n        else {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn('BatchTraceProcessor is not supported in the browser. Traces will not be exported.');\n        }\n    }\n    async #safeAddItem(item) {\n        if (this.#buffer.length + 1 > this.#maxQueueSize) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error('Dropping trace because buffer is full');\n            return;\n        }\n        // add the item to the buffer\n        this.#buffer.push(item);\n        if (this.#buffer.length > this.#exportTriggerSize) {\n            // start exporting immediately\n            await this.#exportBatches();\n        }\n    }\n    #runExportLoop() {\n        this.#timeout = this.#timer.setTimeout(async () => {\n            // scheduled export\n            await this.#exportBatches();\n            this.#runExportLoop();\n        }, this.#scheduleDelay);\n        // We set this so that Node no longer considers this part of the event loop and keeps the\n        // process alive until the timer is done.\n        if (typeof this.#timeout.unref === 'function') {\n            this.#timeout.unref();\n        }\n    }\n    async #exportBatches(force = false) {\n        if (this.#buffer.length === 0) {\n            return;\n        }\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug(`Exporting batches. Force: ${force}. Buffer size: ${this.#buffer.length}`);\n        if (force || this.#buffer.length < this.#maxBatchSize) {\n            const toExport = [...this.#buffer];\n            this.#buffer = [];\n            this.#exportInProgress = true;\n            await this.#exporter.export(toExport);\n            this.#exportInProgress = false;\n        }\n        else if (this.#buffer.length > 0) {\n            const batch = this.#buffer.splice(0, this.#maxBatchSize);\n            this.#exportInProgress = true;\n            await this.#exporter.export(batch);\n            this.#exportInProgress = false;\n        }\n    }\n    async onTraceStart(trace) {\n        await this.#safeAddItem(trace);\n    }\n    async onTraceEnd(_trace) {\n        // We don't send traces on end because we already send them on start\n    }\n    async onSpanStart(_span) {\n        // We don't send spans on start because we send them at the end\n    }\n    async onSpanEnd(span) {\n        await this.#safeAddItem(span);\n    }\n    async shutdown(timeout) {\n        if (timeout) {\n            this.#timer.setTimeout(() => {\n                // force shutdown the HTTP request\n                this.#timeoutAbortController.abort();\n            }, timeout);\n        }\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Shutting down gracefully');\n        while (this.#buffer.length > 0) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug(`Waiting for buffer to empty. Items left: ${this.#buffer.length}`);\n            if (!this.#exportInProgress) {\n                // no current export in progress. Forcing all items to be exported\n                await this.#exportBatches(true);\n            }\n            if (this.#timeoutAbortController.signal.aborted) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Timeout reached, force flushing');\n                await this.#exportBatches(true);\n                break;\n            }\n            // using setTimeout to add to the event loop and keep this alive until done\n            await new Promise((resolve) => this.#timer.setTimeout(resolve, 500));\n        }\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Buffer empty. Exiting');\n        if (this.#timer && this.#timeout) {\n            // making sure there are no more requests\n            this.#timer.clearTimeout(this.#timeout);\n        }\n    }\n    async forceFlush() {\n        if (this.#buffer.length > 0) {\n            await this.#exportBatches(true);\n        }\n    }\n}\nclass MultiTracingProcessor {\n    #processors = [];\n    addTraceProcessor(processor) {\n        this.#processors.push(processor);\n    }\n    setProcessors(processors) {\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Shutting down old processors');\n        for (const processor of this.#processors) {\n            processor.shutdown();\n        }\n        this.#processors = processors;\n    }\n    async onTraceStart(trace) {\n        for (const processor of this.#processors) {\n            await processor.onTraceStart(trace);\n        }\n    }\n    async onTraceEnd(trace) {\n        for (const processor of this.#processors) {\n            await processor.onTraceEnd(trace);\n        }\n    }\n    async onSpanStart(span) {\n        for (const processor of this.#processors) {\n            await processor.onSpanStart(span);\n        }\n    }\n    async onSpanEnd(span) {\n        for (const processor of this.#processors) {\n            await processor.onSpanEnd(span);\n        }\n    }\n    async shutdown(timeout) {\n        for (const processor of this.#processors) {\n            await processor.shutdown(timeout);\n        }\n    }\n    async forceFlush() {\n        for (const processor of this.#processors) {\n            await processor.forceFlush();\n        }\n    }\n}\nlet _defaultExporter = null;\nlet _defaultProcessor = null;\nfunction defaultExporter() {\n    if (!_defaultExporter) {\n        _defaultExporter = new ConsoleSpanExporter();\n    }\n    return _defaultExporter;\n}\nfunction defaultProcessor() {\n    if (!_defaultProcessor) {\n        _defaultProcessor = new BatchTraceProcessor(defaultExporter());\n    }\n    return _defaultProcessor;\n}\n//# sourceMappingURL=processor.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/processor.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/provider.mjs":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/provider.mjs ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TraceProvider: () => (/* binding */ TraceProvider),\n/* harmony export */   getGlobalTraceProvider: () => (/* binding */ getGlobalTraceProvider)\n/* harmony export */ });\n/* harmony import */ var _context_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/config.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _processor_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./processor.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/processor.mjs\");\n/* harmony import */ var _spans_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spans.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/spans.mjs\");\n/* harmony import */ var _traces_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./traces.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/traces.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/utils.mjs\");\n\n\n\n\n\n\n\nclass TraceProvider {\n    #multiProcessor;\n    #disabled;\n    constructor() {\n        this.#multiProcessor = new _processor_mjs__WEBPACK_IMPORTED_MODULE_3__.MultiTracingProcessor();\n        this.#disabled = _config_mjs__WEBPACK_IMPORTED_MODULE_1__.tracing.disabled;\n        if ((0,_config_mjs__WEBPACK_IMPORTED_MODULE_1__.loadEnv)().NODE_ENV === 'test') {\n            // disable tracing in tests by default\n            this.#disabled = true;\n        }\n    }\n    /**\n     * Add a processor to the list of processors. Each processor will receive all traces/spans.\n     *\n     * @param processor - The processor to add.\n     */\n    registerProcessor(processor) {\n        this.#multiProcessor.addTraceProcessor(processor);\n    }\n    /**\n     * Set the list of processors. This will replace any existing processors.\n     *\n     * @param processors - The list of processors to set.\n     */\n    setProcessors(processors) {\n        this.#multiProcessor.setProcessors(processors);\n    }\n    /**\n     * Get the current trace.\n     *\n     * @returns The current trace.\n     */\n    getCurrentTrace() {\n        return (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentTrace)();\n    }\n    getCurrentSpan() {\n        return (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentSpan)();\n    }\n    setDisabled(disabled) {\n        this.#disabled = disabled;\n    }\n    createTrace(traceOptions) {\n        if (this.#disabled) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Tracing is disabled, Not creating trace %o', traceOptions);\n            return new _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.NoopTrace();\n        }\n        const traceId = traceOptions.traceId ?? (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_6__.generateTraceId)();\n        const name = traceOptions.name ?? 'Agent workflow';\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Creating trace %s with name %s', traceId, name);\n        return new _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.Trace({ ...traceOptions, name, traceId }, this.#multiProcessor);\n    }\n    createSpan(spanOptions, parent) {\n        if (this.#disabled || spanOptions.disabled) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Tracing is disabled, Not creating span %o', spanOptions);\n            return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n        }\n        let parentId;\n        let traceId;\n        if (!parent) {\n            const currentTrace = (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentTrace)();\n            const currentSpan = (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentSpan)();\n            if (!currentTrace) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error('No active trace. Make sure to start a trace with `withTrace()` first. Returning NoopSpan.');\n                return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            if (currentSpan instanceof _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan ||\n                currentTrace instanceof _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.NoopTrace) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug(`Parent ${currentSpan} or ${currentTrace} is no-op, returning NoopSpan`);\n                return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            traceId = currentTrace.traceId;\n            if (currentSpan) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Using parent span %s', currentSpan.spanId);\n                parentId = currentSpan.spanId;\n            }\n            else {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('No parent span, using current trace %s', currentTrace.traceId);\n            }\n        }\n        else if (parent instanceof _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.Trace) {\n            if (parent instanceof _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.NoopTrace) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Parent trace is no-op, returning NoopSpan');\n                return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            traceId = parent.traceId;\n        }\n        else if (parent instanceof _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.Span) {\n            if (parent instanceof _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Parent span is no-op, returning NoopSpan');\n                return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            parentId = parent.spanId;\n            traceId = parent.traceId;\n        }\n        if (!traceId) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error('No traceId found. Make sure to start a trace with `withTrace()` first. Returning NoopSpan.');\n            return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n        }\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug(`Creating span ${JSON.stringify(spanOptions.data)} with id ${spanOptions.spanId ?? traceId}`);\n        return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.Span({\n            ...spanOptions,\n            traceId,\n            parentId,\n        }, this.#multiProcessor);\n    }\n    shutdown(timeout) {\n        try {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Shutting down tracing provider');\n            this.#multiProcessor.shutdown(timeout);\n        }\n        catch (error) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error('Error shutting down tracing provider %o', error);\n        }\n    }\n}\nlet GLOBAL_TRACE_PROVIDER = undefined;\nfunction getGlobalTraceProvider() {\n    if (!GLOBAL_TRACE_PROVIDER) {\n        GLOBAL_TRACE_PROVIDER = new TraceProvider();\n    }\n    return GLOBAL_TRACE_PROVIDER;\n}\n//# sourceMappingURL=provider.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/provider.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/spans.mjs":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/spans.mjs ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoopSpan: () => (/* binding */ NoopSpan),\n/* harmony export */   Span: () => (/* binding */ Span)\n/* harmony export */ });\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logger.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/utils.mjs\");\n\n\nclass Span {\n    type = 'trace.span';\n    #data;\n    #traceId;\n    #spanId;\n    #parentId;\n    #processor;\n    #startedAt;\n    #endedAt;\n    #error;\n    #previousSpan;\n    constructor(options, processor) {\n        this.#traceId = options.traceId;\n        this.#spanId = options.spanId ?? (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.generateSpanId)();\n        this.#data = options.data;\n        this.#processor = processor;\n        this.#parentId = options.parentId ?? null;\n        this.#error = options.error ?? null;\n        this.#startedAt = options.startedAt ?? null;\n        this.#endedAt = options.endedAt ?? null;\n    }\n    get traceId() {\n        return this.#traceId;\n    }\n    get spanData() {\n        return this.#data;\n    }\n    get spanId() {\n        return this.#spanId;\n    }\n    get parentId() {\n        return this.#parentId;\n    }\n    get previousSpan() {\n        return this.#previousSpan;\n    }\n    set previousSpan(span) {\n        this.#previousSpan = span;\n    }\n    start() {\n        if (this.#startedAt) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn('Span already started');\n            return;\n        }\n        this.#startedAt = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.timeIso)();\n        this.#processor.onSpanStart(this);\n    }\n    end() {\n        if (this.#endedAt) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Span already finished', this.spanData);\n            return;\n        }\n        this.#endedAt = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.timeIso)();\n        this.#processor.onSpanEnd(this);\n    }\n    setError(error) {\n        this.#error = error;\n    }\n    get error() {\n        return this.#error;\n    }\n    get startedAt() {\n        return this.#startedAt;\n    }\n    get endedAt() {\n        return this.#endedAt;\n    }\n    clone() {\n        const span = new Span({\n            traceId: this.traceId,\n            spanId: this.spanId,\n            parentId: this.parentId ?? undefined,\n            data: this.spanData,\n            startedAt: this.#startedAt ?? undefined,\n            endedAt: this.#endedAt ?? undefined,\n            error: this.#error ?? undefined,\n        }, this.#processor);\n        span.previousSpan = this.previousSpan?.clone();\n        return span;\n    }\n    toJSON() {\n        return {\n            object: this.type,\n            id: this.spanId,\n            trace_id: this.traceId,\n            parent_id: this.parentId,\n            started_at: this.startedAt,\n            ended_at: this.endedAt,\n            span_data: (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.removePrivateFields)(this.spanData),\n            error: this.error,\n        };\n    }\n}\nclass NoopSpan extends Span {\n    constructor(data, processor) {\n        super({ traceId: 'no-op', spanId: 'no-op', data }, processor);\n    }\n    start() {\n        return;\n    }\n    end() {\n        return;\n    }\n    setError() {\n        return;\n    }\n    toJSON() {\n        return null;\n    }\n}\n//# sourceMappingURL=spans.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC90cmFjaW5nL3NwYW5zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW1DO0FBQ3dDO0FBQ3BFO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLDBEQUFjO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbURBQU07QUFDbEI7QUFDQTtBQUNBLDBCQUEwQixtREFBTztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbURBQU07QUFDbEI7QUFDQTtBQUNBLHdCQUF3QixtREFBTztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsK0RBQW1CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGdCQUFnQix5Q0FBeUM7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpbnl0dy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC4yX3dzQDguMTguMl96b2RAMy4yNS41MS9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3RyYWNpbmcvc3BhbnMubWpzP2ZiYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlciBmcm9tIFwiLi4vbG9nZ2VyLm1qc1wiO1xuaW1wb3J0IHsgZ2VuZXJhdGVTcGFuSWQsIHJlbW92ZVByaXZhdGVGaWVsZHMsIHRpbWVJc28gfSBmcm9tIFwiLi91dGlscy5tanNcIjtcbmV4cG9ydCBjbGFzcyBTcGFuIHtcbiAgICB0eXBlID0gJ3RyYWNlLnNwYW4nO1xuICAgICNkYXRhO1xuICAgICN0cmFjZUlkO1xuICAgICNzcGFuSWQ7XG4gICAgI3BhcmVudElkO1xuICAgICNwcm9jZXNzb3I7XG4gICAgI3N0YXJ0ZWRBdDtcbiAgICAjZW5kZWRBdDtcbiAgICAjZXJyb3I7XG4gICAgI3ByZXZpb3VzU3BhbjtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zLCBwcm9jZXNzb3IpIHtcbiAgICAgICAgdGhpcy4jdHJhY2VJZCA9IG9wdGlvbnMudHJhY2VJZDtcbiAgICAgICAgdGhpcy4jc3BhbklkID0gb3B0aW9ucy5zcGFuSWQgPz8gZ2VuZXJhdGVTcGFuSWQoKTtcbiAgICAgICAgdGhpcy4jZGF0YSA9IG9wdGlvbnMuZGF0YTtcbiAgICAgICAgdGhpcy4jcHJvY2Vzc29yID0gcHJvY2Vzc29yO1xuICAgICAgICB0aGlzLiNwYXJlbnRJZCA9IG9wdGlvbnMucGFyZW50SWQgPz8gbnVsbDtcbiAgICAgICAgdGhpcy4jZXJyb3IgPSBvcHRpb25zLmVycm9yID8/IG51bGw7XG4gICAgICAgIHRoaXMuI3N0YXJ0ZWRBdCA9IG9wdGlvbnMuc3RhcnRlZEF0ID8/IG51bGw7XG4gICAgICAgIHRoaXMuI2VuZGVkQXQgPSBvcHRpb25zLmVuZGVkQXQgPz8gbnVsbDtcbiAgICB9XG4gICAgZ2V0IHRyYWNlSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiN0cmFjZUlkO1xuICAgIH1cbiAgICBnZXQgc3BhbkRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNkYXRhO1xuICAgIH1cbiAgICBnZXQgc3BhbklkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jc3BhbklkO1xuICAgIH1cbiAgICBnZXQgcGFyZW50SWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNwYXJlbnRJZDtcbiAgICB9XG4gICAgZ2V0IHByZXZpb3VzU3BhbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3ByZXZpb3VzU3BhbjtcbiAgICB9XG4gICAgc2V0IHByZXZpb3VzU3BhbihzcGFuKSB7XG4gICAgICAgIHRoaXMuI3ByZXZpb3VzU3BhbiA9IHNwYW47XG4gICAgfVxuICAgIHN0YXJ0KCkge1xuICAgICAgICBpZiAodGhpcy4jc3RhcnRlZEF0KSB7XG4gICAgICAgICAgICBsb2dnZXIud2FybignU3BhbiBhbHJlYWR5IHN0YXJ0ZWQnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLiNzdGFydGVkQXQgPSB0aW1lSXNvKCk7XG4gICAgICAgIHRoaXMuI3Byb2Nlc3Nvci5vblNwYW5TdGFydCh0aGlzKTtcbiAgICB9XG4gICAgZW5kKCkge1xuICAgICAgICBpZiAodGhpcy4jZW5kZWRBdCkge1xuICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKCdTcGFuIGFscmVhZHkgZmluaXNoZWQnLCB0aGlzLnNwYW5EYXRhKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLiNlbmRlZEF0ID0gdGltZUlzbygpO1xuICAgICAgICB0aGlzLiNwcm9jZXNzb3Iub25TcGFuRW5kKHRoaXMpO1xuICAgIH1cbiAgICBzZXRFcnJvcihlcnJvcikge1xuICAgICAgICB0aGlzLiNlcnJvciA9IGVycm9yO1xuICAgIH1cbiAgICBnZXQgZXJyb3IoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNlcnJvcjtcbiAgICB9XG4gICAgZ2V0IHN0YXJ0ZWRBdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3N0YXJ0ZWRBdDtcbiAgICB9XG4gICAgZ2V0IGVuZGVkQXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNlbmRlZEF0O1xuICAgIH1cbiAgICBjbG9uZSgpIHtcbiAgICAgICAgY29uc3Qgc3BhbiA9IG5ldyBTcGFuKHtcbiAgICAgICAgICAgIHRyYWNlSWQ6IHRoaXMudHJhY2VJZCxcbiAgICAgICAgICAgIHNwYW5JZDogdGhpcy5zcGFuSWQsXG4gICAgICAgICAgICBwYXJlbnRJZDogdGhpcy5wYXJlbnRJZCA/PyB1bmRlZmluZWQsXG4gICAgICAgICAgICBkYXRhOiB0aGlzLnNwYW5EYXRhLFxuICAgICAgICAgICAgc3RhcnRlZEF0OiB0aGlzLiNzdGFydGVkQXQgPz8gdW5kZWZpbmVkLFxuICAgICAgICAgICAgZW5kZWRBdDogdGhpcy4jZW5kZWRBdCA/PyB1bmRlZmluZWQsXG4gICAgICAgICAgICBlcnJvcjogdGhpcy4jZXJyb3IgPz8gdW5kZWZpbmVkLFxuICAgICAgICB9LCB0aGlzLiNwcm9jZXNzb3IpO1xuICAgICAgICBzcGFuLnByZXZpb3VzU3BhbiA9IHRoaXMucHJldmlvdXNTcGFuPy5jbG9uZSgpO1xuICAgICAgICByZXR1cm4gc3BhbjtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgb2JqZWN0OiB0aGlzLnR5cGUsXG4gICAgICAgICAgICBpZDogdGhpcy5zcGFuSWQsXG4gICAgICAgICAgICB0cmFjZV9pZDogdGhpcy50cmFjZUlkLFxuICAgICAgICAgICAgcGFyZW50X2lkOiB0aGlzLnBhcmVudElkLFxuICAgICAgICAgICAgc3RhcnRlZF9hdDogdGhpcy5zdGFydGVkQXQsXG4gICAgICAgICAgICBlbmRlZF9hdDogdGhpcy5lbmRlZEF0LFxuICAgICAgICAgICAgc3Bhbl9kYXRhOiByZW1vdmVQcml2YXRlRmllbGRzKHRoaXMuc3BhbkRhdGEpLFxuICAgICAgICAgICAgZXJyb3I6IHRoaXMuZXJyb3IsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIE5vb3BTcGFuIGV4dGVuZHMgU3BhbiB7XG4gICAgY29uc3RydWN0b3IoZGF0YSwgcHJvY2Vzc29yKSB7XG4gICAgICAgIHN1cGVyKHsgdHJhY2VJZDogJ25vLW9wJywgc3BhbklkOiAnbm8tb3AnLCBkYXRhIH0sIHByb2Nlc3Nvcik7XG4gICAgfVxuICAgIHN0YXJ0KCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGVuZCgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZXRFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNwYW5zLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/spans.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/traces.mjs":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/traces.mjs ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoopTrace: () => (/* binding */ NoopTrace),\n/* harmony export */   Trace: () => (/* binding */ Trace)\n/* harmony export */ });\n/* harmony import */ var _processor_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./processor.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/processor.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/utils.mjs\");\n\n\nclass Trace {\n    type = 'trace';\n    traceId;\n    name;\n    groupId = null;\n    metadata;\n    #processor;\n    #started;\n    constructor(options, processor) {\n        this.traceId = options.traceId ?? (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.generateTraceId)();\n        this.name = options.name ?? 'Agent workflow';\n        this.groupId = options.groupId ?? null;\n        this.metadata = options.metadata ?? {};\n        this.#processor = processor ?? (0,_processor_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultProcessor)();\n        this.#started = options.started ?? false;\n    }\n    async start() {\n        if (this.#started) {\n            return;\n        }\n        this.#started = true;\n        await this.#processor.onTraceStart(this);\n    }\n    async end() {\n        if (!this.#started) {\n            return;\n        }\n        this.#started = false;\n        await this.#processor.onTraceEnd(this);\n    }\n    clone() {\n        return new Trace({\n            traceId: this.traceId,\n            name: this.name,\n            groupId: this.groupId ?? undefined,\n            metadata: this.metadata,\n            started: this.#started,\n        });\n    }\n    toJSON() {\n        return {\n            object: this.type,\n            id: this.traceId,\n            workflow_name: this.name,\n            group_id: this.groupId,\n            metadata: this.metadata,\n        };\n    }\n}\nclass NoopTrace extends Trace {\n    constructor() {\n        super({});\n    }\n    async start() {\n        return;\n    }\n    async end() {\n        return;\n    }\n    toJSON() {\n        return null;\n    }\n}\n//# sourceMappingURL=traces.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC90cmFjaW5nL3RyYWNlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtRDtBQUNMO0FBQ3ZDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQywyREFBZTtBQUN6RDtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsZ0VBQWdCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpbnl0dy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC4yX3dzQDguMTguMl96b2RAMy4yNS41MS9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3RyYWNpbmcvdHJhY2VzLm1qcz8zMWM0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmF1bHRQcm9jZXNzb3IgfSBmcm9tIFwiLi9wcm9jZXNzb3IubWpzXCI7XG5pbXBvcnQgeyBnZW5lcmF0ZVRyYWNlSWQgfSBmcm9tIFwiLi91dGlscy5tanNcIjtcbmV4cG9ydCBjbGFzcyBUcmFjZSB7XG4gICAgdHlwZSA9ICd0cmFjZSc7XG4gICAgdHJhY2VJZDtcbiAgICBuYW1lO1xuICAgIGdyb3VwSWQgPSBudWxsO1xuICAgIG1ldGFkYXRhO1xuICAgICNwcm9jZXNzb3I7XG4gICAgI3N0YXJ0ZWQ7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucywgcHJvY2Vzc29yKSB7XG4gICAgICAgIHRoaXMudHJhY2VJZCA9IG9wdGlvbnMudHJhY2VJZCA/PyBnZW5lcmF0ZVRyYWNlSWQoKTtcbiAgICAgICAgdGhpcy5uYW1lID0gb3B0aW9ucy5uYW1lID8/ICdBZ2VudCB3b3JrZmxvdyc7XG4gICAgICAgIHRoaXMuZ3JvdXBJZCA9IG9wdGlvbnMuZ3JvdXBJZCA/PyBudWxsO1xuICAgICAgICB0aGlzLm1ldGFkYXRhID0gb3B0aW9ucy5tZXRhZGF0YSA/PyB7fTtcbiAgICAgICAgdGhpcy4jcHJvY2Vzc29yID0gcHJvY2Vzc29yID8/IGRlZmF1bHRQcm9jZXNzb3IoKTtcbiAgICAgICAgdGhpcy4jc3RhcnRlZCA9IG9wdGlvbnMuc3RhcnRlZCA/PyBmYWxzZTtcbiAgICB9XG4gICAgYXN5bmMgc3RhcnQoKSB7XG4gICAgICAgIGlmICh0aGlzLiNzdGFydGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy4jc3RhcnRlZCA9IHRydWU7XG4gICAgICAgIGF3YWl0IHRoaXMuI3Byb2Nlc3Nvci5vblRyYWNlU3RhcnQodGhpcyk7XG4gICAgfVxuICAgIGFzeW5jIGVuZCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLiNzdGFydGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy4jc3RhcnRlZCA9IGZhbHNlO1xuICAgICAgICBhd2FpdCB0aGlzLiNwcm9jZXNzb3Iub25UcmFjZUVuZCh0aGlzKTtcbiAgICB9XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiBuZXcgVHJhY2Uoe1xuICAgICAgICAgICAgdHJhY2VJZDogdGhpcy50cmFjZUlkLFxuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgICAgICAgZ3JvdXBJZDogdGhpcy5ncm91cElkID8/IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG1ldGFkYXRhOiB0aGlzLm1ldGFkYXRhLFxuICAgICAgICAgICAgc3RhcnRlZDogdGhpcy4jc3RhcnRlZCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG9iamVjdDogdGhpcy50eXBlLFxuICAgICAgICAgICAgaWQ6IHRoaXMudHJhY2VJZCxcbiAgICAgICAgICAgIHdvcmtmbG93X25hbWU6IHRoaXMubmFtZSxcbiAgICAgICAgICAgIGdyb3VwX2lkOiB0aGlzLmdyb3VwSWQsXG4gICAgICAgICAgICBtZXRhZGF0YTogdGhpcy5tZXRhZGF0YSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTm9vcFRyYWNlIGV4dGVuZHMgVHJhY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcih7fSk7XG4gICAgfVxuICAgIGFzeW5jIHN0YXJ0KCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGFzeW5jIGVuZCgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNlcy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/traces.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/utils.mjs":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/utils.mjs ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateGroupId: () => (/* binding */ generateGroupId),\n/* harmony export */   generateSpanId: () => (/* binding */ generateSpanId),\n/* harmony export */   generateTraceId: () => (/* binding */ generateTraceId),\n/* harmony export */   removePrivateFields: () => (/* binding */ removePrivateFields),\n/* harmony export */   timeIso: () => (/* binding */ timeIso)\n/* harmony export */ });\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n\n/**\n * Generate an ISO 8601 timestamp of the current time.\n * @returns An ISO 8601 timestamp.\n */\nfunction timeIso() {\n    return new Date().toISOString();\n}\n/**\n * Generate a trace ID by creating a random UUID v4 and removing the dashes. This is the equivalent\n * of `uuid4().hex` in Python and prefixing it with `trace_`.\n * @returns A trace ID.\n */\nfunction generateTraceId() {\n    return `trace_${(0,_openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.randomUUID)().replace(/-/g, '')}`;\n}\n/**\n * Generate a span ID by creating a random UUID v4 and removing the dashes. This is the equivalent\n * of `uuid4().hex` in Python and prefixing it with `span_`.\n * @returns A span ID.\n */\nfunction generateSpanId() {\n    return `span_${(0,_openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.randomUUID)().replace(/-/g, '').slice(0, 24)}`;\n}\n/**\n * Generate a group ID by creating a random UUID v4 and removing the dashes. This is the equivalent\n * of `uuid4().hex` in Python and prefixing it with `group_`.\n * @returns A group ID.\n */\nfunction generateGroupId() {\n    return `group_${(0,_openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.randomUUID)().replace(/-/g, '').slice(0, 24)}`;\n}\n/**\n * Remove fields that start with an underscore from an object.\n * @param obj - The object to remove private fields from.\n * @returns A new object with private fields removed.\n */\nfunction removePrivateFields(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(([key]) => !key.startsWith('_')));\n}\n//# sourceMappingURL=utils.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC90cmFjaW5nL3V0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxvQkFBb0IscUVBQVUscUJBQXFCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsbUJBQW1CLHFFQUFVLGtDQUFrQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG9CQUFvQixxRUFBVSxrQ0FBa0M7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuYWlueXR3Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjJfd3NAOC4xOC4yX3pvZEAzLjI1LjUxL25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdHJhY2luZy91dGlscy5tanM/NTBhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByYW5kb21VVUlEIH0gZnJvbSAnQG9wZW5haS9hZ2VudHMtY29yZS9fc2hpbXMnO1xuLyoqXG4gKiBHZW5lcmF0ZSBhbiBJU08gODYwMSB0aW1lc3RhbXAgb2YgdGhlIGN1cnJlbnQgdGltZS5cbiAqIEByZXR1cm5zIEFuIElTTyA4NjAxIHRpbWVzdGFtcC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRpbWVJc28oKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcbn1cbi8qKlxuICogR2VuZXJhdGUgYSB0cmFjZSBJRCBieSBjcmVhdGluZyBhIHJhbmRvbSBVVUlEIHY0IGFuZCByZW1vdmluZyB0aGUgZGFzaGVzLiBUaGlzIGlzIHRoZSBlcXVpdmFsZW50XG4gKiBvZiBgdXVpZDQoKS5oZXhgIGluIFB5dGhvbiBhbmQgcHJlZml4aW5nIGl0IHdpdGggYHRyYWNlX2AuXG4gKiBAcmV0dXJucyBBIHRyYWNlIElELlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVUcmFjZUlkKCkge1xuICAgIHJldHVybiBgdHJhY2VfJHtyYW5kb21VVUlEKCkucmVwbGFjZSgvLS9nLCAnJyl9YDtcbn1cbi8qKlxuICogR2VuZXJhdGUgYSBzcGFuIElEIGJ5IGNyZWF0aW5nIGEgcmFuZG9tIFVVSUQgdjQgYW5kIHJlbW92aW5nIHRoZSBkYXNoZXMuIFRoaXMgaXMgdGhlIGVxdWl2YWxlbnRcbiAqIG9mIGB1dWlkNCgpLmhleGAgaW4gUHl0aG9uIGFuZCBwcmVmaXhpbmcgaXQgd2l0aCBgc3Bhbl9gLlxuICogQHJldHVybnMgQSBzcGFuIElELlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTcGFuSWQoKSB7XG4gICAgcmV0dXJuIGBzcGFuXyR7cmFuZG9tVVVJRCgpLnJlcGxhY2UoLy0vZywgJycpLnNsaWNlKDAsIDI0KX1gO1xufVxuLyoqXG4gKiBHZW5lcmF0ZSBhIGdyb3VwIElEIGJ5IGNyZWF0aW5nIGEgcmFuZG9tIFVVSUQgdjQgYW5kIHJlbW92aW5nIHRoZSBkYXNoZXMuIFRoaXMgaXMgdGhlIGVxdWl2YWxlbnRcbiAqIG9mIGB1dWlkNCgpLmhleGAgaW4gUHl0aG9uIGFuZCBwcmVmaXhpbmcgaXQgd2l0aCBgZ3JvdXBfYC5cbiAqIEByZXR1cm5zIEEgZ3JvdXAgSUQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUdyb3VwSWQoKSB7XG4gICAgcmV0dXJuIGBncm91cF8ke3JhbmRvbVVVSUQoKS5yZXBsYWNlKC8tL2csICcnKS5zbGljZSgwLCAyNCl9YDtcbn1cbi8qKlxuICogUmVtb3ZlIGZpZWxkcyB0aGF0IHN0YXJ0IHdpdGggYW4gdW5kZXJzY29yZSBmcm9tIGFuIG9iamVjdC5cbiAqIEBwYXJhbSBvYmogLSBUaGUgb2JqZWN0IHRvIHJlbW92ZSBwcml2YXRlIGZpZWxkcyBmcm9tLlxuICogQHJldHVybnMgQSBuZXcgb2JqZWN0IHdpdGggcHJpdmF0ZSBmaWVsZHMgcmVtb3ZlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZVByaXZhdGVGaWVsZHMob2JqKSB7XG4gICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhvYmopLmZpbHRlcigoW2tleV0pID0+ICFrZXkuc3RhcnRzV2l0aCgnXycpKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/tracing/utils.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/types/protocol.mjs":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/types/protocol.mjs ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssistantContent: () => (/* binding */ AssistantContent),\n/* harmony export */   AssistantMessageItem: () => (/* binding */ AssistantMessageItem),\n/* harmony export */   AudioContent: () => (/* binding */ AudioContent),\n/* harmony export */   ComputerCallResultItem: () => (/* binding */ ComputerCallResultItem),\n/* harmony export */   ComputerToolOutput: () => (/* binding */ ComputerToolOutput),\n/* harmony export */   ComputerUseCallItem: () => (/* binding */ ComputerUseCallItem),\n/* harmony export */   FunctionCallItem: () => (/* binding */ FunctionCallItem),\n/* harmony export */   FunctionCallResultItem: () => (/* binding */ FunctionCallResultItem),\n/* harmony export */   HostedToolCallItem: () => (/* binding */ HostedToolCallItem),\n/* harmony export */   ImageContent: () => (/* binding */ ImageContent),\n/* harmony export */   InputFile: () => (/* binding */ InputFile),\n/* harmony export */   InputImage: () => (/* binding */ InputImage),\n/* harmony export */   InputText: () => (/* binding */ InputText),\n/* harmony export */   ItemBase: () => (/* binding */ ItemBase),\n/* harmony export */   MessageItem: () => (/* binding */ MessageItem),\n/* harmony export */   ModelItem: () => (/* binding */ ModelItem),\n/* harmony export */   OutputModelItem: () => (/* binding */ OutputModelItem),\n/* harmony export */   OutputText: () => (/* binding */ OutputText),\n/* harmony export */   ReasoningItem: () => (/* binding */ ReasoningItem),\n/* harmony export */   Refusal: () => (/* binding */ Refusal),\n/* harmony export */   SharedBase: () => (/* binding */ SharedBase),\n/* harmony export */   StreamEvent: () => (/* binding */ StreamEvent),\n/* harmony export */   StreamEventGenericItem: () => (/* binding */ StreamEventGenericItem),\n/* harmony export */   StreamEventResponseCompleted: () => (/* binding */ StreamEventResponseCompleted),\n/* harmony export */   StreamEventResponseStarted: () => (/* binding */ StreamEventResponseStarted),\n/* harmony export */   StreamEventTextStream: () => (/* binding */ StreamEventTextStream),\n/* harmony export */   ToolCallItem: () => (/* binding */ ToolCallItem),\n/* harmony export */   ToolOutputImage: () => (/* binding */ ToolOutputImage),\n/* harmony export */   ToolOutputText: () => (/* binding */ ToolOutputText),\n/* harmony export */   UnknownItem: () => (/* binding */ UnknownItem),\n/* harmony export */   UsageData: () => (/* binding */ UsageData),\n/* harmony export */   UserContent: () => (/* binding */ UserContent),\n/* harmony export */   UserMessageItem: () => (/* binding */ UserMessageItem),\n/* harmony export */   computerActions: () => (/* binding */ computerActions)\n/* harmony export */ });\n/* harmony import */ var _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/zod/v3 */ \"(ssr)/./node_modules/.pnpm/zod@3.25.51/node_modules/zod/dist/esm/index.js\");\n\n// ----------------------------\n// Shared base types\n// ----------------------------\n/**\n * Every item in the protocol provides a `providerData` field to accomodate custom functionality\n * or new fields\n */\nconst SharedBase = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    /**\n     * Additional optional provider specific data. Used for custom functionality or model provider\n     * specific fields.\n     */\n    providerData: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any()).optional(),\n});\n/**\n * Every item has a shared of shared item data including an optional ID.\n */\nconst ItemBase = SharedBase.extend({\n    /**\n     * An ID to identify the item. This is optional by default. If a model provider absolutely\n     * requires this field, it will be validated on the model level.\n     */\n    id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n});\n// ----------------------------\n// Content types\n// ----------------------------\nconst Refusal = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('refusal'),\n    /**\n     * The refusal explanation from the model.\n     */\n    refusal: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n});\nconst OutputText = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('output_text'),\n    /**\n     * The text output from the model.\n     */\n    text: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n});\nconst InputText = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('input_text'),\n    /**\n     * A text input for example a message from a user\n     */\n    text: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n});\nconst InputImage = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('input_image'),\n    /**\n     * The image input to the model. Could be a URL, base64 or an object with a file ID.\n     */\n    image: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string()\n        .or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    }))\n        .describe('Could be a URL, base64 or an object with a file ID.'),\n});\nconst InputFile = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('input_file'),\n    /**\n     * The file input to the model. Could be a URL, base64 or an object with a file ID.\n     */\n    file: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string()\n        .or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    }))\n        .describe('Contents of the file or an object with a file ID.'),\n});\nconst AudioContent = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('audio'),\n    /**\n     * The audio input to the model. Could be base64 encoded audio data or an object with a file ID.\n     */\n    audio: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string()\n        .or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    }))\n        .describe('Base64 encoded audio data or file id'),\n    /**\n     * The format of the audio.\n     */\n    format: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().nullable().optional(),\n    /**\n     * The transcript of the audio.\n     */\n    transcript: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().nullable().optional(),\n});\nconst ImageContent = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('image'),\n    /**\n     * The image input to the model. Could be base64 encoded image data or an object with a file ID.\n     */\n    image: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('Base64 encoded image data'),\n});\nconst ToolOutputText = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('text'),\n    /**\n     * The text output from the model.\n     */\n    text: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n});\nconst ToolOutputImage = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('image'),\n    /**\n     * The image data. Could be base64 encoded image data or an object with a file ID.\n     */\n    data: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('Base64 encoded image data'),\n    /**\n     * The media type of the image.\n     */\n    mediaType: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('IANA media type of the image'),\n});\nconst ComputerToolOutput = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('computer_screenshot'),\n    /**\n     * A base64 encoded image data or a URL representing the screenshot.\n     */\n    data: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('Base64 encoded image data or URL'),\n});\nconst computerActions = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.discriminatedUnion('type', [\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({ type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('screenshot') }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('click'),\n        x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n        y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n        button: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z[\"enum\"](['left', 'right', 'wheel', 'back', 'forward']),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('double_click'),\n        x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n        y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('scroll'),\n        x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n        y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n        scroll_x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n        scroll_y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('type'),\n        text: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({ type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('wait') }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('move'),\n        x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n        y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('keypress'),\n        keys: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string()),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('drag'),\n        path: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({ x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(), y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number() })),\n    }),\n]);\n// ----------------------------\n// Message types\n// ----------------------------\nconst AssistantContent = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.discriminatedUnion('type', [\n    OutputText,\n    Refusal,\n    InputText,\n    AudioContent,\n    ImageContent,\n]);\nconst MessageBase = ItemBase.extend({\n    /**\n     * Any item without a type is treated as a message\n     */\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('message').optional(),\n});\nconst AssistantMessageItem = MessageBase.extend({\n    /**\n     * Representing a message from the assistant (i.e. the model)\n     */\n    role: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('assistant'),\n    /**\n     * The status of the message.\n     */\n    status: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z[\"enum\"](['in_progress', 'completed', 'incomplete']),\n    /**\n     * The content of the message.\n     */\n    content: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(AssistantContent),\n});\nconst UserContent = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.discriminatedUnion('type', [\n    InputText,\n    InputImage,\n    InputFile,\n    AudioContent,\n]);\nconst UserMessageItem = MessageBase.extend({\n    // type: z.literal('message'),\n    /**\n     * Representing a message from the user\n     */\n    role: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('user'),\n    /**\n     * The content of the message.\n     */\n    content: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(UserContent).or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string()),\n});\nconst SystemMessageItem = MessageBase.extend({\n    // type: z.literal('message'),\n    /**\n     * Representing a system message to the user\n     */\n    role: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('system'),\n    /**\n     * The content of the message.\n     */\n    content: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n});\nconst MessageItem = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.discriminatedUnion('role', [\n    SystemMessageItem,\n    AssistantMessageItem,\n    UserMessageItem,\n]);\n// ----------------------------\n// Tool call types\n// ----------------------------\nconst HostedToolCallItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('hosted_tool_call'),\n    /**\n     * The name of the hosted tool. For example `web_search_call` or `file_search_call`\n     */\n    name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('The name of the hosted tool'),\n    /**\n     * The status of the tool call.\n     */\n    status: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    /**\n     * The primary output of the tool call. Additional output might be in the `providerData` field.\n     */\n    output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n});\nconst FunctionCallItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('function_call'),\n    /**\n     * The ID of the tool call. Required to match up the respective tool call result.\n     */\n    callId: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('The ID of the tool call'),\n    /**\n     * The name of the function.\n     */\n    name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('The name of the function'),\n    /**\n     * The status of the function call.\n     */\n    status: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z[\"enum\"](['in_progress', 'completed', 'incomplete']).optional(),\n    /**\n     * The arguments of the function call.\n     */\n    arguments: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n});\nconst FunctionCallResultItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('function_call_result'),\n    /**\n     * The name of the tool that was called\n     */\n    name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('The name of the tool'),\n    /**\n     * The ID of the tool call. Required to match up the respective tool call result.\n     */\n    callId: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('The ID of the tool call'),\n    /**\n     * The status of the tool call.\n     */\n    status: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z[\"enum\"](['in_progress', 'completed', 'incomplete']),\n    /**\n     * The output of the tool call.\n     */\n    output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.discriminatedUnion('type', [ToolOutputText, ToolOutputImage]),\n});\nconst ComputerUseCallItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('computer_call'),\n    /**\n     * The ID of the computer call. Required to match up the respective computer call result.\n     */\n    callId: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('The ID of the computer call'),\n    /**\n     * The status of the computer call.\n     */\n    status: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z[\"enum\"](['in_progress', 'completed', 'incomplete']),\n    /**\n     * The action to be performed by the computer.\n     */\n    action: computerActions,\n});\nconst ComputerCallResultItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('computer_call_result'),\n    /**\n     * The ID of the computer call. Required to match up the respective computer call result.\n     */\n    callId: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().describe('The ID of the computer call'),\n    /**\n     * The output of the computer call.\n     */\n    output: ComputerToolOutput,\n});\nconst ToolCallItem = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.discriminatedUnion('type', [\n    ComputerUseCallItem,\n    FunctionCallItem,\n    HostedToolCallItem,\n]);\n// ----------------------------\n// Special item types\n// ----------------------------\nconst ReasoningItem = SharedBase.extend({\n    id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('reasoning'),\n    /**\n     * The user facing representation of the reasoning. Additional information might be in the `providerData` field.\n     */\n    content: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(InputText),\n});\n/**\n * This is a catch all for items that are not part of the protocol.\n *\n * For example, a model might return an item that is not part of the protocol using this type.\n *\n * In that case everything returned from the model should be passed in the `providerData` field.\n *\n * This enables new features to be added to be added by a model provider without breaking the protocol.\n */\nconst UnknownItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('unknown'),\n});\n// ----------------------------\n// Joined item types\n// ----------------------------\nconst OutputModelItem = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.discriminatedUnion('type', [\n    AssistantMessageItem,\n    HostedToolCallItem,\n    FunctionCallItem,\n    ComputerUseCallItem,\n    ReasoningItem,\n    UnknownItem,\n]);\nconst ModelItem = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.union([\n    UserMessageItem,\n    AssistantMessageItem,\n    SystemMessageItem,\n    HostedToolCallItem,\n    FunctionCallItem,\n    ComputerUseCallItem,\n    FunctionCallResultItem,\n    ComputerCallResultItem,\n    ReasoningItem,\n    UnknownItem,\n]);\n// ----------------------------\n// Meta data types\n// ----------------------------\nconst UsageData = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    requests: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number().optional(),\n    inputTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    outputTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    totalTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number(),\n    inputTokensDetails: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number()).optional(),\n    outputTokensDetails: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.number()).optional(),\n});\n// ----------------------------\n// Stream event types\n// ----------------------------\n/**\n * Event returned by the model when new output text is available to stream to the user.\n */\nconst StreamEventTextStream = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('output_text_delta'),\n    /**\n     * The delta text that was streamed by the modelto the user.\n     */\n    delta: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n});\n/**\n * Event returned by the model when a new response is started.\n */\nconst StreamEventResponseStarted = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('response_started'),\n});\n/**\n * Event returned by the model when a response is completed.\n */\nconst StreamEventResponseCompleted = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('response_done'),\n    /**\n     * The response from the model.\n     */\n    response: SharedBase.extend({\n        /**\n         * The ID of the response.\n         */\n        id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n        /**\n         * The usage data for the response.\n         */\n        usage: UsageData,\n        /**\n         * The output from the model.\n         */\n        output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.array(OutputModelItem),\n    }),\n});\n/**\n * Event returned for every item that gets streamed to the model. Used to expose the raw events\n * from the model.\n */\nconst StreamEventGenericItem = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.literal('model'),\n    event: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.any().describe('The event from the model'),\n});\nconst StreamEvent = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.z.discriminatedUnion('type', [\n    StreamEventTextStream,\n    StreamEventResponseCompleted,\n    StreamEventResponseStarted,\n    StreamEventGenericItem,\n]);\n//# sourceMappingURL=protocol.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/types/protocol.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/usage.mjs":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/usage.mjs ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Usage: () => (/* binding */ Usage),\n/* harmony export */   UsageData: () => (/* reexport safe */ _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_0__.UsageData)\n/* harmony export */ });\n/* harmony import */ var _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types/protocol.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/types/protocol.mjs\");\n\n/**\n * Tracks token usage and request counts for an agent run.\n */\nclass Usage {\n    /**\n     * The number of requests made to the LLM API.\n     */\n    requests;\n    /**\n     * The number of input tokens used across all requests.\n     */\n    inputTokens;\n    /**\n     * The number of output tokens used across all requests.\n     */\n    outputTokens;\n    /**\n     * The total number of tokens sent and received, across all requests.\n     */\n    totalTokens;\n    /**\n     * Details about the input tokens used across all requests.\n     */\n    inputTokensDetails = [];\n    /**\n     * Details about the output tokens used across all requests.\n     */\n    outputTokensDetails = [];\n    constructor(input) {\n        if (typeof input === 'undefined') {\n            this.requests = 0;\n            this.inputTokens = 0;\n            this.outputTokens = 0;\n            this.totalTokens = 0;\n            this.inputTokensDetails = [];\n            this.outputTokensDetails = [];\n        }\n        else {\n            this.requests = input?.requests ?? 1;\n            this.inputTokens = input?.inputTokens ?? 0;\n            this.outputTokens = input?.outputTokens ?? 0;\n            this.totalTokens = input?.totalTokens ?? 0;\n            this.inputTokensDetails = input?.inputTokensDetails\n                ? [input.inputTokensDetails]\n                : [];\n            this.outputTokensDetails = input?.outputTokensDetails\n                ? [input.outputTokensDetails]\n                : [];\n        }\n    }\n    add(newUsage) {\n        this.requests += newUsage.requests;\n        this.inputTokens += newUsage.inputTokens;\n        this.outputTokens += newUsage.outputTokens;\n        this.totalTokens += newUsage.totalTokens;\n        this.inputTokensDetails.push(...newUsage.inputTokensDetails);\n        this.outputTokensDetails.push(...newUsage.outputTokensDetails);\n    }\n}\n\n//# sourceMappingURL=usage.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91c2FnZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuYWlueXR3Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjJfd3NAOC4xOC4yX3pvZEAzLjI1LjUxL25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXNhZ2UubWpzPzgzYWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNhZ2VEYXRhIH0gZnJvbSBcIi4vdHlwZXMvcHJvdG9jb2wubWpzXCI7XG4vKipcbiAqIFRyYWNrcyB0b2tlbiB1c2FnZSBhbmQgcmVxdWVzdCBjb3VudHMgZm9yIGFuIGFnZW50IHJ1bi5cbiAqL1xuZXhwb3J0IGNsYXNzIFVzYWdlIHtcbiAgICAvKipcbiAgICAgKiBUaGUgbnVtYmVyIG9mIHJlcXVlc3RzIG1hZGUgdG8gdGhlIExMTSBBUEkuXG4gICAgICovXG4gICAgcmVxdWVzdHM7XG4gICAgLyoqXG4gICAgICogVGhlIG51bWJlciBvZiBpbnB1dCB0b2tlbnMgdXNlZCBhY3Jvc3MgYWxsIHJlcXVlc3RzLlxuICAgICAqL1xuICAgIGlucHV0VG9rZW5zO1xuICAgIC8qKlxuICAgICAqIFRoZSBudW1iZXIgb2Ygb3V0cHV0IHRva2VucyB1c2VkIGFjcm9zcyBhbGwgcmVxdWVzdHMuXG4gICAgICovXG4gICAgb3V0cHV0VG9rZW5zO1xuICAgIC8qKlxuICAgICAqIFRoZSB0b3RhbCBudW1iZXIgb2YgdG9rZW5zIHNlbnQgYW5kIHJlY2VpdmVkLCBhY3Jvc3MgYWxsIHJlcXVlc3RzLlxuICAgICAqL1xuICAgIHRvdGFsVG9rZW5zO1xuICAgIC8qKlxuICAgICAqIERldGFpbHMgYWJvdXQgdGhlIGlucHV0IHRva2VucyB1c2VkIGFjcm9zcyBhbGwgcmVxdWVzdHMuXG4gICAgICovXG4gICAgaW5wdXRUb2tlbnNEZXRhaWxzID0gW107XG4gICAgLyoqXG4gICAgICogRGV0YWlscyBhYm91dCB0aGUgb3V0cHV0IHRva2VucyB1c2VkIGFjcm9zcyBhbGwgcmVxdWVzdHMuXG4gICAgICovXG4gICAgb3V0cHV0VG9rZW5zRGV0YWlscyA9IFtdO1xuICAgIGNvbnN0cnVjdG9yKGlucHV0KSB7XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aGlzLnJlcXVlc3RzID0gMDtcbiAgICAgICAgICAgIHRoaXMuaW5wdXRUb2tlbnMgPSAwO1xuICAgICAgICAgICAgdGhpcy5vdXRwdXRUb2tlbnMgPSAwO1xuICAgICAgICAgICAgdGhpcy50b3RhbFRva2VucyA9IDA7XG4gICAgICAgICAgICB0aGlzLmlucHV0VG9rZW5zRGV0YWlscyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5vdXRwdXRUb2tlbnNEZXRhaWxzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnJlcXVlc3RzID0gaW5wdXQ/LnJlcXVlc3RzID8/IDE7XG4gICAgICAgICAgICB0aGlzLmlucHV0VG9rZW5zID0gaW5wdXQ/LmlucHV0VG9rZW5zID8/IDA7XG4gICAgICAgICAgICB0aGlzLm91dHB1dFRva2VucyA9IGlucHV0Py5vdXRwdXRUb2tlbnMgPz8gMDtcbiAgICAgICAgICAgIHRoaXMudG90YWxUb2tlbnMgPSBpbnB1dD8udG90YWxUb2tlbnMgPz8gMDtcbiAgICAgICAgICAgIHRoaXMuaW5wdXRUb2tlbnNEZXRhaWxzID0gaW5wdXQ/LmlucHV0VG9rZW5zRGV0YWlsc1xuICAgICAgICAgICAgICAgID8gW2lucHV0LmlucHV0VG9rZW5zRGV0YWlsc11cbiAgICAgICAgICAgICAgICA6IFtdO1xuICAgICAgICAgICAgdGhpcy5vdXRwdXRUb2tlbnNEZXRhaWxzID0gaW5wdXQ/Lm91dHB1dFRva2Vuc0RldGFpbHNcbiAgICAgICAgICAgICAgICA/IFtpbnB1dC5vdXRwdXRUb2tlbnNEZXRhaWxzXVxuICAgICAgICAgICAgICAgIDogW107XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkKG5ld1VzYWdlKSB7XG4gICAgICAgIHRoaXMucmVxdWVzdHMgKz0gbmV3VXNhZ2UucmVxdWVzdHM7XG4gICAgICAgIHRoaXMuaW5wdXRUb2tlbnMgKz0gbmV3VXNhZ2UuaW5wdXRUb2tlbnM7XG4gICAgICAgIHRoaXMub3V0cHV0VG9rZW5zICs9IG5ld1VzYWdlLm91dHB1dFRva2VucztcbiAgICAgICAgdGhpcy50b3RhbFRva2VucyArPSBuZXdVc2FnZS50b3RhbFRva2VucztcbiAgICAgICAgdGhpcy5pbnB1dFRva2Vuc0RldGFpbHMucHVzaCguLi5uZXdVc2FnZS5pbnB1dFRva2Vuc0RldGFpbHMpO1xuICAgICAgICB0aGlzLm91dHB1dFRva2Vuc0RldGFpbHMucHVzaCguLi5uZXdVc2FnZS5vdXRwdXRUb2tlbnNEZXRhaWxzKTtcbiAgICB9XG59XG5leHBvcnQgeyBVc2FnZURhdGEgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzYWdlLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/usage.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/index.mjs":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/index.mjs ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitterDelegate: () => (/* reexport safe */ _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_2__.EventEmitterDelegate),\n/* harmony export */   isZodObject: () => (/* reexport safe */ _typeGuards_mjs__WEBPACK_IMPORTED_MODULE_0__.isZodObject),\n/* harmony export */   toSmartString: () => (/* reexport safe */ _smartString_mjs__WEBPACK_IMPORTED_MODULE_1__.toSmartString)\n/* harmony export */ });\n/* harmony import */ var _typeGuards_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeGuards.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs\");\n/* harmony import */ var _smartString_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./smartString.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/smartString.mjs\");\n/* harmony import */ var _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lifecycle.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/lifecycle.mjs\");\n\n\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStDO0FBQ0c7QUFDTTtBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9pbmRleC5tanM/ZTUyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBpc1pvZE9iamVjdCB9IGZyb20gXCIuL3R5cGVHdWFyZHMubWpzXCI7XG5leHBvcnQgeyB0b1NtYXJ0U3RyaW5nIH0gZnJvbSBcIi4vc21hcnRTdHJpbmcubWpzXCI7XG5leHBvcnQgeyBFdmVudEVtaXR0ZXJEZWxlZ2F0ZSB9IGZyb20gXCIuLi9saWZlY3ljbGUubWpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/messages.mjs":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/messages.mjs ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLastTextFromOutputMessage: () => (/* binding */ getLastTextFromOutputMessage),\n/* harmony export */   getOutputText: () => (/* binding */ getOutputText)\n/* harmony export */ });\n/**\n * Get the last text from the output message.\n * @param outputMessage\n * @returns\n */\nfunction getLastTextFromOutputMessage(outputMessage) {\n    if (outputMessage.type !== 'message') {\n        return undefined;\n    }\n    if (outputMessage.role !== 'assistant') {\n        return undefined;\n    }\n    const lastItem = outputMessage.content[outputMessage.content.length - 1];\n    if (lastItem.type !== 'output_text') {\n        return undefined;\n    }\n    return lastItem.text;\n}\n/**\n * Get the last text from the output message.\n * @param output\n * @returns\n */\nfunction getOutputText(output) {\n    if (output.output.length === 0) {\n        return '';\n    }\n    return (getLastTextFromOutputMessage(output.output[output.output.length - 1]) || '');\n}\n//# sourceMappingURL=messages.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9tZXNzYWdlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuYWlueXR3Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjJfd3NAOC4xOC4yX3pvZEAzLjI1LjUxL25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXRpbHMvbWVzc2FnZXMubWpzP2U2MDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZXQgdGhlIGxhc3QgdGV4dCBmcm9tIHRoZSBvdXRwdXQgbWVzc2FnZS5cbiAqIEBwYXJhbSBvdXRwdXRNZXNzYWdlXG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGFzdFRleHRGcm9tT3V0cHV0TWVzc2FnZShvdXRwdXRNZXNzYWdlKSB7XG4gICAgaWYgKG91dHB1dE1lc3NhZ2UudHlwZSAhPT0gJ21lc3NhZ2UnKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmIChvdXRwdXRNZXNzYWdlLnJvbGUgIT09ICdhc3Npc3RhbnQnKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGxhc3RJdGVtID0gb3V0cHV0TWVzc2FnZS5jb250ZW50W291dHB1dE1lc3NhZ2UuY29udGVudC5sZW5ndGggLSAxXTtcbiAgICBpZiAobGFzdEl0ZW0udHlwZSAhPT0gJ291dHB1dF90ZXh0Jykge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gbGFzdEl0ZW0udGV4dDtcbn1cbi8qKlxuICogR2V0IHRoZSBsYXN0IHRleHQgZnJvbSB0aGUgb3V0cHV0IG1lc3NhZ2UuXG4gKiBAcGFyYW0gb3V0cHV0XG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0T3V0cHV0VGV4dChvdXRwdXQpIHtcbiAgICBpZiAob3V0cHV0Lm91dHB1dC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gKGdldExhc3RUZXh0RnJvbU91dHB1dE1lc3NhZ2Uob3V0cHV0Lm91dHB1dFtvdXRwdXQub3V0cHV0Lmxlbmd0aCAtIDFdKSB8fCAnJyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlcy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/messages.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safeExecute: () => (/* binding */ safeExecute)\n/* harmony export */ });\nasync function safeExecute(fn) {\n    try {\n        return [null, await fn()];\n    }\n    catch (error) {\n        return [error, null];\n    }\n}\n//# sourceMappingURL=safeExecute.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9zYWZlRXhlY3V0ZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9zYWZlRXhlY3V0ZS5tanM/MzM4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgYXN5bmMgZnVuY3Rpb24gc2FmZUV4ZWN1dGUoZm4pIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gW251bGwsIGF3YWl0IGZuKCldO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIFtlcnJvciwgbnVsbF07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2FmZUV4ZWN1dGUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/serialize.mjs":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/serialize.mjs ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeHandoff: () => (/* binding */ serializeHandoff),\n/* harmony export */   serializeTool: () => (/* binding */ serializeTool)\n/* harmony export */ });\nfunction serializeTool(tool) {\n    if (tool.type === 'function') {\n        return {\n            type: 'function',\n            name: tool.name,\n            description: tool.description,\n            parameters: tool.parameters,\n            strict: tool.strict,\n        };\n    }\n    if (tool.type === 'computer') {\n        return {\n            type: 'computer',\n            name: tool.name,\n            environment: tool.computer.environment,\n            dimensions: tool.computer.dimensions,\n        };\n    }\n    return {\n        type: 'hosted_tool',\n        name: tool.name,\n        providerData: tool.providerData,\n    };\n}\nfunction serializeHandoff(h) {\n    return {\n        toolName: h.toolName,\n        toolDescription: h.toolDescription,\n        inputJsonSchema: h.inputJsonSchema,\n        strictJsonSchema: h.strictJsonSchema,\n    };\n}\n//# sourceMappingURL=serialize.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9zZXJpYWxpemUubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpbnl0dy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC4yX3dzQDguMTguMl96b2RAMy4yNS41MS9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3V0aWxzL3NlcmlhbGl6ZS5tanM/MjRhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplVG9vbCh0b29sKSB7XG4gICAgaWYgKHRvb2wudHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogJ2Z1bmN0aW9uJyxcbiAgICAgICAgICAgIG5hbWU6IHRvb2wubmFtZSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0b29sLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgcGFyYW1ldGVyczogdG9vbC5wYXJhbWV0ZXJzLFxuICAgICAgICAgICAgc3RyaWN0OiB0b29sLnN0cmljdCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHRvb2wudHlwZSA9PT0gJ2NvbXB1dGVyJykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogJ2NvbXB1dGVyJyxcbiAgICAgICAgICAgIG5hbWU6IHRvb2wubmFtZSxcbiAgICAgICAgICAgIGVudmlyb25tZW50OiB0b29sLmNvbXB1dGVyLmVudmlyb25tZW50LFxuICAgICAgICAgICAgZGltZW5zaW9uczogdG9vbC5jb21wdXRlci5kaW1lbnNpb25zLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnaG9zdGVkX3Rvb2wnLFxuICAgICAgICBuYW1lOiB0b29sLm5hbWUsXG4gICAgICAgIHByb3ZpZGVyRGF0YTogdG9vbC5wcm92aWRlckRhdGEsXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVIYW5kb2ZmKGgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0b29sTmFtZTogaC50b29sTmFtZSxcbiAgICAgICAgdG9vbERlc2NyaXB0aW9uOiBoLnRvb2xEZXNjcmlwdGlvbixcbiAgICAgICAgaW5wdXRKc29uU2NoZW1hOiBoLmlucHV0SnNvblNjaGVtYSxcbiAgICAgICAgc3RyaWN0SnNvblNjaGVtYTogaC5zdHJpY3RKc29uU2NoZW1hLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJpYWxpemUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/serialize.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/smartString.mjs":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/smartString.mjs ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toSmartString: () => (/* binding */ toSmartString)\n/* harmony export */ });\nfunction toSmartString(value) {\n    if (value === null || value === undefined) {\n        return String(value);\n    }\n    else if (typeof value === 'string') {\n        return value;\n    }\n    else if (typeof value === 'object') {\n        try {\n            return JSON.stringify(value);\n        }\n        catch (_e) {\n            return '[object with circular references]';\n        }\n    }\n    return String(value);\n}\n//# sourceMappingURL=smartString.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9zbWFydFN0cmluZy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9zbWFydFN0cmluZy5tanM/YTJmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gdG9TbWFydFN0cmluZyh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBTdHJpbmcodmFsdWUpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoX2UpIHtcbiAgICAgICAgICAgIHJldHVybiAnW29iamVjdCB3aXRoIGNpcmN1bGFyIHJlZmVyZW5jZXNdJztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNtYXJ0U3RyaW5nLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/smartString.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/tools.mjs":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/tools.mjs ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertAgentOutputTypeToSerializable: () => (/* binding */ convertAgentOutputTypeToSerializable),\n/* harmony export */   getSchemaAndParserFromInputType: () => (/* binding */ getSchemaAndParserFromInputType),\n/* harmony export */   toFunctionToolName: () => (/* binding */ toFunctionToolName)\n/* harmony export */ });\n/* harmony import */ var openai_helpers_zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai/helpers/zod */ \"(ssr)/./node_modules/.pnpm/openai@5.1.0_ws@8.18.2_zod@3.25.51/node_modules/openai/helpers/zod.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _typeGuards_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./typeGuards.mjs */ \"(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs\");\n\n\n\n/**\n * Convert a string to a function tool name by replacing spaces with underscores and\n * non-alphanumeric characters with underscores.\n * @param name - The name of the tool.\n * @returns The function tool name.\n */\nfunction toFunctionToolName(name) {\n    // Replace spaces with underscores\n    name = name.replace(/\\s/g, '_');\n    // Replace non-alphanumeric characters with underscores\n    name = name.replace(/[^a-zA-Z0-9]/g, '_');\n    // Ensure the name is not empty\n    if (name.length === 0) {\n        throw new Error('Tool name cannot be empty');\n    }\n    return name;\n}\n/**\n * Get the schema and parser from an input type. If the input type is a ZodObject, we will convert\n * it into a JSON Schema and use Zod as parser. If the input type is a JSON schema, we use the\n * JSON.parse function to get the parser.\n * @param inputType - The input type to get the schema and parser from.\n * @param name - The name of the tool.\n * @returns The schema and parser.\n */\nfunction getSchemaAndParserFromInputType(inputType, name) {\n    const parser = (input) => JSON.parse(input);\n    if ((0,_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_2__.isZodObject)(inputType)) {\n        const formattedFunction = (0,openai_helpers_zod__WEBPACK_IMPORTED_MODULE_0__.zodResponsesFunction)({\n            name,\n            parameters: inputType,\n            function: () => { }, // empty function here to satisfy the OpenAI helper\n            description: '',\n        });\n        return {\n            schema: formattedFunction.parameters,\n            parser: formattedFunction.$parseRaw,\n        };\n    }\n    else if (typeof inputType === 'object' && inputType !== null) {\n        return {\n            schema: inputType,\n            parser,\n        };\n    }\n    throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_1__.UserError('Input type is not a ZodObject or a valid JSON schema');\n}\n/**\n * Converts the agent output type provided to a serializable version\n */\nfunction convertAgentOutputTypeToSerializable(outputType) {\n    if (outputType === 'text') {\n        return 'text';\n    }\n    if ((0,_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_2__.isZodObject)(outputType)) {\n        const output = (0,openai_helpers_zod__WEBPACK_IMPORTED_MODULE_0__.zodTextFormat)(outputType, 'output');\n        return {\n            type: output.type,\n            name: output.name,\n            strict: output.strict || false,\n            schema: output.schema,\n        };\n    }\n    return outputType;\n}\n//# sourceMappingURL=tools.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy90b29scy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXlFO0FBQy9CO0FBQ0s7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsUUFBUSw0REFBVztBQUNuQixrQ0FBa0Msd0VBQW9CO0FBQ3REO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsa0RBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNERBQVc7QUFDbkIsdUJBQXVCLGlFQUFhO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpbnl0dy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC4yX3dzQDguMTguMl96b2RAMy4yNS41MS9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3V0aWxzL3Rvb2xzLm1qcz8zOGY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHpvZFJlc3BvbnNlc0Z1bmN0aW9uLCB6b2RUZXh0Rm9ybWF0IH0gZnJvbSAnb3BlbmFpL2hlbHBlcnMvem9kJztcbmltcG9ydCB7IFVzZXJFcnJvciB9IGZyb20gXCIuLi9lcnJvcnMubWpzXCI7XG5pbXBvcnQgeyBpc1pvZE9iamVjdCB9IGZyb20gXCIuL3R5cGVHdWFyZHMubWpzXCI7XG4vKipcbiAqIENvbnZlcnQgYSBzdHJpbmcgdG8gYSBmdW5jdGlvbiB0b29sIG5hbWUgYnkgcmVwbGFjaW5nIHNwYWNlcyB3aXRoIHVuZGVyc2NvcmVzIGFuZFxuICogbm9uLWFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzIHdpdGggdW5kZXJzY29yZXMuXG4gKiBAcGFyYW0gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSB0b29sLlxuICogQHJldHVybnMgVGhlIGZ1bmN0aW9uIHRvb2wgbmFtZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvRnVuY3Rpb25Ub29sTmFtZShuYW1lKSB7XG4gICAgLy8gUmVwbGFjZSBzcGFjZXMgd2l0aCB1bmRlcnNjb3Jlc1xuICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoL1xccy9nLCAnXycpO1xuICAgIC8vIFJlcGxhY2Ugbm9uLWFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzIHdpdGggdW5kZXJzY29yZXNcbiAgICBuYW1lID0gbmFtZS5yZXBsYWNlKC9bXmEtekEtWjAtOV0vZywgJ18nKTtcbiAgICAvLyBFbnN1cmUgdGhlIG5hbWUgaXMgbm90IGVtcHR5XG4gICAgaWYgKG5hbWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVG9vbCBuYW1lIGNhbm5vdCBiZSBlbXB0eScpO1xuICAgIH1cbiAgICByZXR1cm4gbmFtZTtcbn1cbi8qKlxuICogR2V0IHRoZSBzY2hlbWEgYW5kIHBhcnNlciBmcm9tIGFuIGlucHV0IHR5cGUuIElmIHRoZSBpbnB1dCB0eXBlIGlzIGEgWm9kT2JqZWN0LCB3ZSB3aWxsIGNvbnZlcnRcbiAqIGl0IGludG8gYSBKU09OIFNjaGVtYSBhbmQgdXNlIFpvZCBhcyBwYXJzZXIuIElmIHRoZSBpbnB1dCB0eXBlIGlzIGEgSlNPTiBzY2hlbWEsIHdlIHVzZSB0aGVcbiAqIEpTT04ucGFyc2UgZnVuY3Rpb24gdG8gZ2V0IHRoZSBwYXJzZXIuXG4gKiBAcGFyYW0gaW5wdXRUeXBlIC0gVGhlIGlucHV0IHR5cGUgdG8gZ2V0IHRoZSBzY2hlbWEgYW5kIHBhcnNlciBmcm9tLlxuICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgdG9vbC5cbiAqIEByZXR1cm5zIFRoZSBzY2hlbWEgYW5kIHBhcnNlci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNjaGVtYUFuZFBhcnNlckZyb21JbnB1dFR5cGUoaW5wdXRUeXBlLCBuYW1lKSB7XG4gICAgY29uc3QgcGFyc2VyID0gKGlucHV0KSA9PiBKU09OLnBhcnNlKGlucHV0KTtcbiAgICBpZiAoaXNab2RPYmplY3QoaW5wdXRUeXBlKSkge1xuICAgICAgICBjb25zdCBmb3JtYXR0ZWRGdW5jdGlvbiA9IHpvZFJlc3BvbnNlc0Z1bmN0aW9uKHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBwYXJhbWV0ZXJzOiBpbnB1dFR5cGUsXG4gICAgICAgICAgICBmdW5jdGlvbjogKCkgPT4geyB9LCAvLyBlbXB0eSBmdW5jdGlvbiBoZXJlIHRvIHNhdGlzZnkgdGhlIE9wZW5BSSBoZWxwZXJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnJyxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzY2hlbWE6IGZvcm1hdHRlZEZ1bmN0aW9uLnBhcmFtZXRlcnMsXG4gICAgICAgICAgICBwYXJzZXI6IGZvcm1hdHRlZEZ1bmN0aW9uLiRwYXJzZVJhdyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGlucHV0VHlwZSA9PT0gJ29iamVjdCcgJiYgaW5wdXRUeXBlICE9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzY2hlbWE6IGlucHV0VHlwZSxcbiAgICAgICAgICAgIHBhcnNlcixcbiAgICAgICAgfTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFVzZXJFcnJvcignSW5wdXQgdHlwZSBpcyBub3QgYSBab2RPYmplY3Qgb3IgYSB2YWxpZCBKU09OIHNjaGVtYScpO1xufVxuLyoqXG4gKiBDb252ZXJ0cyB0aGUgYWdlbnQgb3V0cHV0IHR5cGUgcHJvdmlkZWQgdG8gYSBzZXJpYWxpemFibGUgdmVyc2lvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydEFnZW50T3V0cHV0VHlwZVRvU2VyaWFsaXphYmxlKG91dHB1dFR5cGUpIHtcbiAgICBpZiAob3V0cHV0VHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgICAgIHJldHVybiAndGV4dCc7XG4gICAgfVxuICAgIGlmIChpc1pvZE9iamVjdChvdXRwdXRUeXBlKSkge1xuICAgICAgICBjb25zdCBvdXRwdXQgPSB6b2RUZXh0Rm9ybWF0KG91dHB1dFR5cGUsICdvdXRwdXQnKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6IG91dHB1dC50eXBlLFxuICAgICAgICAgICAgbmFtZTogb3V0cHV0Lm5hbWUsXG4gICAgICAgICAgICBzdHJpY3Q6IG91dHB1dC5zdHJpY3QgfHwgZmFsc2UsXG4gICAgICAgICAgICBzY2hlbWE6IG91dHB1dC5zY2hlbWEsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBvdXRwdXRUeXBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9vbHMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/tools.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAgentToolInput: () => (/* binding */ isAgentToolInput),\n/* harmony export */   isZodObject: () => (/* binding */ isZodObject)\n/* harmony export */ });\n/**\n * Verifies that an input is a ZodObject without needing to have Zod at runtime since it's an\n * optional dependency.\n * @param input\n * @returns\n */\nfunction isZodObject(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        '_def' in input &&\n        typeof input._def === 'object' &&\n        input._def !== null &&\n        'typeName' in input._def &&\n        input._def.typeName === 'ZodObject');\n}\n/**\n * Verifies that an input is an object with an `input` property.\n * @param input\n * @returns\n */\nfunction isAgentToolInput(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        'input' in input &&\n        typeof input.input === 'string');\n}\n//# sourceMappingURL=typeGuards.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy90eXBlR3VhcmRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haW55dHcvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuMl93c0A4LjE4LjJfem9kQDMuMjUuNTEvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy90eXBlR3VhcmRzLm1qcz85Y2Q4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVmVyaWZpZXMgdGhhdCBhbiBpbnB1dCBpcyBhIFpvZE9iamVjdCB3aXRob3V0IG5lZWRpbmcgdG8gaGF2ZSBab2QgYXQgcnVudGltZSBzaW5jZSBpdCdzIGFuXG4gKiBvcHRpb25hbCBkZXBlbmRlbmN5LlxuICogQHBhcmFtIGlucHV0XG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgZnVuY3Rpb24gaXNab2RPYmplY3QoaW5wdXQpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBpbnB1dCA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgaW5wdXQgIT09IG51bGwgJiZcbiAgICAgICAgJ19kZWYnIGluIGlucHV0ICYmXG4gICAgICAgIHR5cGVvZiBpbnB1dC5fZGVmID09PSAnb2JqZWN0JyAmJlxuICAgICAgICBpbnB1dC5fZGVmICE9PSBudWxsICYmXG4gICAgICAgICd0eXBlTmFtZScgaW4gaW5wdXQuX2RlZiAmJlxuICAgICAgICBpbnB1dC5fZGVmLnR5cGVOYW1lID09PSAnWm9kT2JqZWN0Jyk7XG59XG4vKipcbiAqIFZlcmlmaWVzIHRoYXQgYW4gaW5wdXQgaXMgYW4gb2JqZWN0IHdpdGggYW4gYGlucHV0YCBwcm9wZXJ0eS5cbiAqIEBwYXJhbSBpbnB1dFxuICogQHJldHVybnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQWdlbnRUb29sSW5wdXQoaW5wdXQpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBpbnB1dCA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgaW5wdXQgIT09IG51bGwgJiZcbiAgICAgICAgJ2lucHV0JyBpbiBpbnB1dCAmJlxuICAgICAgICB0eXBlb2YgaW5wdXQuaW5wdXQgPT09ICdzdHJpbmcnKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVHdWFyZHMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@openai+agents-core@0.0.2_ws@8.18.2_zod@3.25.51/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs\n");

/***/ })

};
;